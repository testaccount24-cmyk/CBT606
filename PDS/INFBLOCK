*
*  Compiled by DCC Version 1.31.00
*           on Wed Jan 10 16:22:39 2001
*

*
*
*
*    Code Section
*
@ZLIB04 CSECT
@ZLIB04 AMODE ANY
@ZLIB04 RMODE ANY
         EXTRN iftb
         EXTRN iftd
         EXTRN iftf
         EXTRN ifcnew
         EXTRN ifcodes
         EXTRN ifcfree
         EXTRN ifmask
         EXTRN ifflush
*
*
*
ifbrset  #PROLOG CINDEX=82,BASER=12,FRAME=136,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,8(0,1)
         LR    4,2
         L     5,4(0,1)
         LR    3,5
         L     6,0(0,1)
         LR    2,6
* ***     if (c != 0)
         LR    7,4         ; #0
         LA    8,0(0,0)
         CR    7,8
         BE    @L0
* ***       *c = s->check;
         LR    7,4         ; s
         LA    8,60(0,2)   ; offset of check in inflate_blocks_state
         L     9,0(0,8)
         ST    9,0(0,7)    ; c
* ***     if (s->mode == BTREE || s->mode == DTREE)
@L0      DS    0H
         L     5,0(0,2)
         C     5,@lit_82_1
         BE    @@gen_label1
         L     5,0(0,2)
         C     5,@lit_82_2
         BNE   @L1
@@gen_label1 DS 0H
* ***       (*((z)->zfree))((z)->opaque, (voidpf)(s->sub.trees.blens))\
* ;
         LA    5,40(0,3)   ; offset of opaque in z_stream_s
         L     6,0(0,5)
         LA    5,4(0,2)    ; offset of sub in inflate_blocks_state
         LA    5,8(0,5)    ; offset of blens in 0000004
         L     7,0(0,5)
         STM   6,7,120(13)
         LA    5,36(0,3)   ; offset of zfree in z_stream_s
         L     6,0(0,5)
         LA    1,120(0,13)
         L     5,72(0,13)
         LR    15,6
         BALR  14,15
* ***     if (s->mode == CODES)
@L1      DS    0H
         L     5,0(0,2)
         C     5,@lit_82_3
         BNE   @L2
* ***       ifcfree(s->sub.decode.codes, z);
         LA    5,4(0,2)    ; offset of sub in inflate_blocks_state
         L     6,0(0,5)
         LR    5,3
         ST    6,120(0,13)
         ST    5,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_82_4 ; ifcfree
         BALR  14,15
* ***     s->mode = TYPE;
@L2      DS    0H
         LR    5,2         ; #0
         LA    6,0(0,0)
         ST    6,0(0,5)    ; s
* ***     s->bitk = 0;
         LA    5,28(0,2)   ; offset of bitk in inflate_blocks_state
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of bitk in inflate_blocks_state
* ***     s->bitb = 0;
         LA    5,32(0,2)   ; offset of bitb in inflate_blocks_state
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of bitb in inflate_blocks_state
* ***     s->read = s->write = s->window;
         LA    5,48(0,2)   ; offset of read in inflate_blocks_state
         LA    6,52(0,2)   ; offset of write in inflate_blocks_state
         LA    7,40(0,2)   ; offset of window in inflate_blocks_state
         L     8,0(0,7)
         ST    8,0(0,6)    ; offset of write in inflate_blocks_state
         ST    8,0(0,5)    ; offset of read in inflate_blocks_state
* ***     if (s->checkfn != 0)
         LA    5,56(0,2)   ; offset of checkfn in inflate_blocks_state
         L     6,0(0,5)
         LA    5,0(0,0)
         CR    6,5
         BE    @ret_lab_82
* ***       z->adler = s->check = (*s->checkfn)(0L, (const Bytef *)0, \
* 0);
         LA    5,0(0,0)
         LA    6,0(0,0)
         LA    7,0(0,0)
         STM   5,7,120(13)
         LA    5,56(0,2)   ; offset of checkfn in inflate_blocks_state
         L     6,0(0,5)
         LA    1,120(0,13)
         L     5,72(0,13)
         LR    15,6
         BALR  14,15
         LA    6,48(0,3)   ; offset of adler in z_stream_s
         LA    7,60(0,2)   ; offset of check in inflate_blocks_state
         ST    15,0(0,7)   ; offset of check in inflate_blocks_state
         ST    15,0(0,6)   ; offset of adler in z_stream_s
* ***     ;
         B     @ret_lab_82
         DS    0D
@FRAMESIZE_82  DC F'136'
@lit_82_1  DC F'4' 0x00000004
@lit_82_2  DC F'5' 0x00000005
@lit_82_3  DC F'6' 0x00000006
@lit_82_4  DC A(ifcfree)
@L3      DS    0H
* ***   }
@ret_lab_82 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifbrset"
*      (FUNCTION #82)
*
@AUTO#ifbrset DSECT
         DS    XL120
*
@ZLIB04  CSECT
*
*
*
ifbnew   #PROLOG CINDEX=80,BASER=12,FRAME=136,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,4(0,1)
         LR    5,2
         L     3,8(0,1)
         LR    4,3
         L     6,0(0,1)
         LR    3,6
* ***     inflate_blocks_statef *s;
* ***
* ***   if ((s = (inflate_blocks_statef *)(*((z)->zalloc))((z)->opaque\
* , (1), (sizeof(struct inflate_blocks_state)))) == 0)
         LA    7,40(0,3)   ; offset of opaque in z_stream_s
         L     8,0(0,7)
         LA    7,1(0,0)
         LA    9,64(0,0)
         ST    8,120(0,13)
         ST    7,124(0,13)
         ST    9,128(0,13)
         LA    7,32(0,3)   ; offset of zalloc in z_stream_s
         L     8,0(0,7)
         LA    1,120(0,13)
         L     7,72(0,13)
         LR    15,8
         BALR  14,15
         LR    2,15        ; s
         LA    6,0(0,0)
         CR    15,6
         BNE   @L4
* ***       # 98
* ***   return s;
         LR    6,2
         LR    15,6
         B     @ret_lab_80
         DS    0D
@FRAMESIZE_80  DC F'136'
@lit_80_6  DC A(ifbrset)
* ***     if ((s->hufts =
@L4      DS    0H
* ***          (inflate_huft *)(*((z)->zalloc))((z)->opaque, (sizeof(i\
* nflate_huft)), (1440))) == 0)
         LA    6,40(0,3)   ; offset of opaque in z_stream_s
         L     7,0(0,6)
         LA    6,8(0,0)
         LA    8,1440(0,0)
         ST    7,120(0,13)
         ST    6,124(0,13)
         ST    8,128(0,13)
         LA    6,32(0,3)   ; offset of zalloc in z_stream_s
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LA    7,36(0,2)   ; offset of hufts in inflate_blocks_state
         ST    15,0(0,7)   ; offset of hufts in inflate_blocks_state
         LA    7,0(0,0)
         CR    15,7
         BNE   @L5
* ***     {
* ***       (*((z)->zfree))((z)->opaque, (voidpf)(s));
         LA    7,40(0,3)   ; offset of opaque in z_stream_s
         L     8,0(0,7)
         LR    7,2
         ST    8,120(0,13)
         ST    7,124(0,13)
         LA    7,36(0,3)   ; offset of zfree in z_stream_s
         L     8,0(0,7)
         LA    1,120(0,13)
         LR    15,8
         BALR  14,15
* ***       return 0;
         LA    7,0(0,0)
         LR    15,7
         B     @ret_lab_80
* ***     }
* ***     if ((s->window = (Bytef *)(*((z)->zalloc))((z)->opaque, (1),\
*  (w))) == 0)
@L5      DS    0H
         LA    6,40(0,3)   ; offset of opaque in z_stream_s
         L     7,0(0,6)
         LA    6,1(0,0)
         LR    8,4
         ST    7,120(0,13)
         ST    6,124(0,13)
         ST    8,128(0,13)
         LA    6,32(0,3)   ; offset of zalloc in z_stream_s
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LA    7,40(0,2)   ; offset of window in inflate_blocks_state
         ST    15,0(0,7)   ; offset of window in inflate_blocks_state
         LA    7,0(0,0)
         CR    15,7
         BNE   @L6
* ***     {
* ***       (*((z)->zfree))((z)->opaque, (voidpf)(s->hufts));
         LA    7,40(0,3)   ; offset of opaque in z_stream_s
         L     8,0(0,7)
         LA    7,36(0,2)   ; offset of hufts in inflate_blocks_state
         L     9,0(0,7)
         STM   8,9,120(13)
         LA    7,36(0,3)   ; offset of zfree in z_stream_s
         L     8,0(0,7)
         LA    1,120(0,13)
         LR    15,8
         BALR  14,15
* ***       (*((z)->zfree))((z)->opaque, (voidpf)(s));
         LA    7,40(0,3)   ; offset of opaque in z_stream_s
         L     8,0(0,7)
         LR    7,2
         ST    8,120(0,13)
         ST    7,124(0,13)
         LA    7,36(0,3)   ; offset of zfree in z_stream_s
         L     8,0(0,7)
         LA    1,120(0,13)
         LR    15,8
         BALR  14,15
* ***       return 0;
         LA    7,0(0,0)
         LR    15,7
         B     @ret_lab_80
* ***     }
* ***     s->end = s->window + w;
@L6      DS    0H
         LA    6,44(0,2)   ; offset of end in inflate_blocks_state
         LA    7,40(0,2)   ; offset of window in inflate_blocks_state
         L     8,0(0,7)
         LR    7,4
         LA    8,0(8,7)
         ST    8,0(0,6)    ; offset of end in inflate_blocks_state
* ***     s->checkfn = c;
         LA    6,56(0,2)   ; offset of checkfn in inflate_blocks_state
         LR    7,5
         ST    7,0(0,6)    ; offset of checkfn in inflate_blocks_state
* ***     s->mode = TYPE;
         LR    6,2         ; #0
         LA    7,0(0,0)
         ST    7,0(0,6)    ; s
* ***     ;
* ***     ifbrset(s, z, 0);
         LR    6,2
         LR    7,3
         LA    8,0(0,0)
         STM   6,8,120(13)
         LA    1,120(0,13)
         L     15,@lit_80_6 ; ifbrset
         BALR  14,15
* ***     return s;
         LR    6,2
         LR    15,6
         B     @ret_lab_80
* ***   }
@ret_lab_80 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifbnew"
*      (FUNCTION #80)
*
@AUTO#ifbnew DSECT
         DS    XL112
ifbnew#s#0 DS  1A          ; s
*
@ZLIB04  CSECT
*
*
*
ifblocks #PROLOG CINDEX=81,BASER=12,FRAME=216,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
* ***     uInt t;
* ***     uLong b;
* ***     uInt k;
* ***     Bytef *p;
* ***     uInt n;
* ***     Bytef *q;
* ***     uInt m;
* ***
* ***
* ***   {{p=z->next_in;n=z->avail_in;b=s->bitb;k=s->bitk;} {q=s->write\
* ;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}}
         L     2,4(0,1)    ; z
         L     3,0(0,2)
         ST    3,140(0,13) ; p
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,0(0,2)
         ST    4,144(0,13) ; n
         L     2,0(0,1)    ; s
         LA    2,32(0,2)   ; offset of bitb in inflate_blocks_state
         L     5,0(0,2)
         ST    5,132(0,13) ; b
         L     2,0(0,1)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     6,0(0,2)
         ST    6,136(0,13) ; k
         L     2,0(0,1)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     7,0(0,2)
         ST    7,148(0,13) ; q
         L     2,0(0,1)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     8,0(0,2)
         CR    7,8
         BNL   @@gen_label9
         L     2,0(0,1)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     8,0(0,2)
         SLR   8,7
         BCTR  8,0
         B     @@gen_label10
         DS    0D
@FRAMESIZE_81  DC F'216'
@lit_region_diff_81_1_3  DC A(@REGION_81_3-@REGION_81_1)
@lit_81_8  DC A(ifflush)
@lit_81_10  DC F'8' 0x00000008
@lit_81_9  DC F'0' 0x00000000
@lit_81_11  DC F'3' 0x00000003
@lit_81_14  DC A(ifcnew)
@lit_81_13  DC A(iftf)
@lit_81_15  DC F'-4' 0xfffffffc
@lit_81_20 DC XL8'8995A58193898440' invalid.
         DC XL8'829396839240A3A8' block.ty
         DC XL3'978500' pe.
         DC    X'00'
@lit_81_21  DC F'-3' 0xfffffffd
@lit_81_30  DC F'32' 0x00000020
@lit_81_33  DC F'65535' 0x0000ffff
@lit_81_31  DC F'-1' 0xffffffff
@lit_81_34 DC XL8'8995A58193898440' invalid.
         DC XL8'A2A3969985844082' stored.b
         DC XL8'9396839240938595' lock.len
         DC XL5'87A388A200' gths.
         DC    X'00'
@lit_region_diff_81_1_2  DC A(@REGION_81_2-@REGION_81_1)
@@gen_label9 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    8,4
@@gen_label10 DS 0H
         ST    8,152(0,13) ; m
* ***
* ***
* ***   while (1) switch (s->mode)
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
* ***     {
* ***       case TYPE:
* ***         {while(k<(3)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {z\
* ->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}}\
*  return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
@L13     DS    0H
         B     @L15
@L14     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L18
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L19
@L18     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
@L19     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_81_9
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_81_10
         ST    4,136(0,13) ; k
@L15     DS    0H
         L     2,136(0,13) ; k
         CL    2,@lit_81_11
         BL    @L14
* ***         t = (uInt)b & 7;
         LA    3,7(0,0)
         N     3,132(0,13)
         ST    3,128(0,13) ; t
* ***         s->last = t & 1;
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,24(0,5)   ; offset of last in inflate_blocks_state
         LA    6,1(0,0)
         N     6,128(0,13)
         ST    6,0(0,5)    ; offset of last in inflate_blocks_state
* ***         switch (t >> 1)
         B     @L20
* ***         {
* ***           case 0:
* ***             ;
@L22     DS    0H
* ***             # 148
* ***   {b>>=(3);k-=(3);}
         L     2,132(0,13) ; b
         SRL   2,3(0)
         ST    2,132(0,13) ; b
         L     3,136(0,13) ; k
         SL    3,@lit_81_11
         ST    3,136(0,13) ; k
* ***             t = k & 7;
         LA    4,7(0,0)
         N     4,136(0,13)
         ST    4,128(0,13) ; t
* ***             {b>>=(t);k-=(t);}
         SRL   2,0(4)
         ST    2,132(0,13) ; b
         SL    3,128(0,13)
         ST    3,136(0,13) ; k
* ***             s->mode = LENS;
         L     5,80(0,13)
         L     6,0(0,5)    ; s
         LA    7,1(0,0)
         ST    7,0(0,6)    ; s
* ***             break;
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
* ***           case 1:
* ***             ;
@L23     DS    0H
* ***             # 156
* ***   {
* ***               uInt bl, bd;
* ***               inflate_huft *tl, *td;
* ***
* ***   iftf(&bl, &bd, &tl, &td, z);
         LA    2,156(0,13) ; &bl
         LA    3,160(0,13) ; &bd
         LA    4,164(0,13) ; &tl
         LA    5,168(0,13) ; &td
         L     6,80(0,13)
         L     7,4(0,6)    ; z
         STM   2,5,176(13)
         ST    7,192(0,13)
         LA    1,176(0,13)
         L     15,@lit_81_13 ; iftf
         BALR  14,15
* ***               s->sub.decode.codes = ifcnew(bl, bd, tl, td, z);
         L     2,164(0,13) ; tl
         L     3,168(0,13) ; td
         L     4,4(0,6)    ; z
         MVC   176(4,13),156(13)
         MVC   180(4,13),160(13)
         STM   2,4,184(13)
         LA    1,176(0,13)
         L     15,@lit_81_14 ; ifcnew
         BALR  14,15
         L     2,0(0,6)    ; s
         LA    2,4(0,2)    ; offset of sub in inflate_blocks_state
         ST    15,0(0,2)   ; offset of sub in inflate_blocks_state
* ***               if (s->sub.decode.codes == 0)
         L     2,0(0,6)    ; s
         LA    2,4(0,2)    ; offset of sub in inflate_blocks_state
         L     3,0(0,2)
         LA    2,0(0,0)
         CR    3,2
         BNE   @L24
* ***               {
* ***                 r = (-4);
         L     2,@lit_81_15
         ST    2,8(0,6)    ; r
* ***                 {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total\
* _in+=p-z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r\
* );}
         L     3,0(0,6)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,6)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     3,136(0,13) ; k
         ST    3,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,6)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     3,144(0,13) ; n
         ST    3,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,6)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    3,2
         L     4,0(0,2)
         L     2,140(0,13) ; p
         L     5,4(0,6)    ; z
         L     7,0(0,5)
         SLR   2,7
         ALR   4,2
         ST    4,0(0,3)
         L     2,140(0,13) ; p
         ST    2,0(0,5)    ; z
         L     2,0(0,6)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     3,148(0,13) ; q
         ST    3,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,6)    ; s
         L     3,4(0,6)    ; z
         STM   2,3,176(13)
         MVC   184(4,13),8(6)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
* ***               }
* ***             }
@L24     DS    0H
* ***             {b>>=(3);k-=(3);}
         L     2,132(0,13) ; b
         SRL   2,3(0)
         ST    2,132(0,13) ; b
         L     3,136(0,13) ; k
         SL    3,@lit_81_11
         ST    3,136(0,13) ; k
* ***             s->mode = CODES;
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    6,6(0,0)
         ST    6,0(0,5)    ; s
* ***             break;
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
* ***           case 2:
* ***             ;
@L25     DS    0H
* ***             # 174
* ***   {b>>=(3);k-=(3);}
         L     2,132(0,13) ; b
         SRL   2,3(0)
         ST    2,132(0,13) ; b
         L     3,136(0,13) ; k
         SL    3,@lit_81_11
         ST    3,136(0,13) ; k
* ***             s->mode = TABLE;
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    6,3(0,0)
         ST    6,0(0,5)    ; s
* ***             break;
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
* ***           case 3:
* ***             {b>>=(3);k-=(3);}
@L26     DS    0H
         L     2,132(0,13) ; b
         SRL   2,3(0)
         ST    2,132(0,13) ; b
         L     3,136(0,13) ; k
         SL    3,@lit_81_11
         ST    3,136(0,13) ; k
* ***             s->mode = BAD;
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    6,9(0,0)
         ST    6,0(0,5)    ; s
* ***             z->msg = (char*)"invalid block type";
         L     2,4(0,4)    ; z
         LA    2,24(0,2)   ; offset of msg in z_stream_s
         LA    3,@lit_81_20
         ST    3,0(0,2)    ; offset of msg in z_stream_s
* ***             r = (-3);
         L     2,@lit_81_21
         ST    2,8(0,4)    ; r
* ***             {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+\
* =p-z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     3,0(0,4)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,4)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     3,136(0,13) ; k
         ST    3,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,4)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     3,144(0,13) ; n
         ST    3,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,4)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    3,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,4)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,3)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,4)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     3,148(0,13) ; q
         ST    3,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,4)    ; s
         L     3,4(0,4)    ; z
         STM   2,3,176(13)
         MVC   184(4,13),8(4)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
* ***         }
* ***         break;
@L20     DS    0H
         L     2,128(0,13) ; t
         SRL   2,1(0)
         CL    2,@lit_81_9
         BNL   *+12  Around region break
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
         CL    2,@lit_81_11
         BNH   *+12  Around region break
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
         SL    2,@lit_81_9
         SLL   2,3(0)
         LA    3,@@gen_label14
         B     0(3,2)
@@gen_label14 DS    0H
         B     @L22
         DC    XL4'00000000'
         B     @L23
         DC    XL4'00000000'
         B     @L25
         DC    XL4'00000000'
         B     @L26
         DC    XL4'00000000'
* ***       case LENS:
* ***         {while(k<(32)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {\
* z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}\
* } return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
@L27     DS    0H
         B     @L29
@L28     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L32
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L33
@L32     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
@L33     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_81_9
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_81_10
         ST    4,136(0,13) ; k
@L29     DS    0H
         L     2,136(0,13) ; k
         CL    2,@lit_81_30
         BL    @L28
* ***         if ((((~b) >> 16) & 0xffff) != (b & 0xffff))
         L     3,132(0,13) ; b
         X     3,@lit_81_31
         SRL   3,16(0)
         N     3,@lit_81_33
         L     4,@lit_81_33
         N     4,132(0,13)
         CLR   3,4
         BE    @L34
* ***         {
* ***           s->mode = BAD;
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    5,9(0,0)
         ST    5,0(0,4)    ; s
* ***           z->msg = (char*)"invalid stored block lengths";
         L     2,4(0,3)    ; z
         LA    2,24(0,2)   ; offset of msg in z_stream_s
         LA    5,@lit_81_34
         ST    5,0(0,2)    ; offset of msg in z_stream_s
* ***           r = (-3);
         L     2,@lit_81_21
         ST    2,8(0,3)    ; r
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,176(0,13)
         ST    4,180(0,13)
         MVC   184(4,13),8(3)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
* ***         }
* ***         s->sub.left = (uInt)b & 0xffff;
@L34     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         L     4,@lit_81_33
         N     4,132(0,13)
         ST    4,0(0,3)    ; offset of sub in inflate_blocks_state
* ***         b = k = 0;
         LA    3,0(0,0)
         ST    3,136(0,13) ; k
         ST    3,132(0,13) ; b
* ***         ;
* ***         s->mode = s->sub.left ? STORED : (s->last ? DRY : TYPE);
         L     4,0(0,2)    ; s
         LA    4,4(0,4)    ; offset of sub in inflate_blocks_state
         L     5,0(0,4)
         LTR   5,5
         BZ    @@gen_label19
         LA    4,2(0,0)
         B     @@gen_label20
@@gen_label19 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of last in inflate_blocks_state
         L     4,0(0,3)
         LTR   4,4
         BZ    @@gen_label22
         LA    3,7(0,0)
         B     @@gen_label23
@@gen_label22 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label23 DS 0H
         LR    4,3
@@gen_label20 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         ST    4,0(0,3)    ; s
* ***         break;
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_1,12
* ***       case STORED:
* ***         if (n == 0)
@L35     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BNE   @L36
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,176(0,13)
         ST    4,180(0,13)
         MVC   184(4,13),8(3)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
* ***         {if(m==0){{if(q==s->end&&s->read!=s->window){q=s->window\
* ;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}} if(m==0){{{s->wri\
* te=q;} r=ifflush(s,z,r); {q=s->write;m=(uInt)(uInt)(q<s->read?s->rea\
* d-q-1:s->end-q);}} {if(q==s->end&&s->read!=s->window){q=s->window;m=\
* (uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}} if(m==0) {{{s->bitb=\
* b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;\
* } {s->write=q;}} return ifflush(s,z,r);}}}r=0;}
@L36     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BE    *+12  Around region break
         AL    12,@lit_region_diff_81_1_2
         DROP  12
         USING @REGION_81_2,12
         B     @L37
         DROP  12
         USING @REGION_81_1,12
         L     3,148(0,13) ; q
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,44(0,5)   ; offset of end in inflate_blocks_state
         L     6,0(0,5)
         CR    3,6
         BNE   @L38
         L     5,0(0,4)    ; s
         LA    5,48(0,5)   ; offset of read in inflate_blocks_state
         L     6,0(0,5)
         L     5,0(0,4)    ; s
         LA    5,40(0,5)   ; offset of window in inflate_blocks_state
         L     7,0(0,5)
         CR    6,7
         BE    @L38
@@gen_label27 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,40(0,3)   ; offset of window in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label30
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label31
@@gen_label30 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label31 DS 0H
         ST    5,152(0,13) ; m
@L38     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BE    *+12  Around region break
         AL    12,@lit_region_diff_81_1_2
         DROP  12
         USING @REGION_81_2,12
         B     @L37
         DROP  12
         USING @REGION_81_1,12
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,52(0,4)   ; offset of write in inflate_blocks_state
         L     5,148(0,13) ; q
         ST    5,0(0,4)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,176(0,13)
         ST    4,180(0,13)
         MVC   184(4,13),8(3)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         ST    15,8(0,3)   ; r
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,0(0,2)
         ST    4,148(0,13) ; q
         L     2,0(0,3)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     5,0(0,2)
         CR    4,5
         BNL   @@gen_label34
         L     2,0(0,3)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     5,0(0,2)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label35
@@gen_label34 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label35 DS 0H
         ST    5,152(0,13) ; m
         L     2,148(0,13) ; q
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,44(0,4)   ; offset of end in inflate_blocks_state
         L     6,0(0,4)
         CR    2,6
         BNE   @L40
         L     4,0(0,3)    ; s
         LA    4,48(0,4)   ; offset of read in inflate_blocks_state
         L     6,0(0,4)
         L     4,0(0,3)    ; s
         LA    4,40(0,4)   ; offset of window in inflate_blocks_state
         L     7,0(0,4)
         CR    6,7
         BE    @L40
@@gen_label37 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,40(0,3)   ; offset of window in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label40
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label41
@@gen_label40 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label41 DS 0H
         ST    5,152(0,13) ; m
@L40     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BE    *+12  Around region break
         AL    12,@lit_region_diff_81_1_2
         DROP  12
         USING @REGION_81_2,12
         B     @L37
         DROP  12
         USING @REGION_81_1,12
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,176(0,13)
         ST    4,180(0,13)
         MVC   184(4,13),8(3)
         LA    1,176(0,13)
         L     15,@lit_81_8 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_1_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_1,12
@REGION_81_2 DS 0H
         DROP  12
         USING @REGION_81_2,12
@L37     DS    0H
         L     2,80(0,13)
         LA    3,0(0,0)
         ST    3,8(0,2)    ; r
* ***         t = s->sub.left;
         L     4,0(0,2)    ; s
         LA    4,4(0,4)    ; offset of sub in inflate_blocks_state
         L     5,0(0,4)
         ST    5,128(0,13) ; t
* ***         if (t > n) t = n;
         CL    5,144(0,13)
         BNH   @L42
         L     4,144(0,13) ; n
         ST    4,128(0,13) ; t
* ***         if (t > m) t = m;
@L42     DS    0H
         L     2,128(0,13) ; t
         CL    2,152(0,13)
         BNH   @L43
         L     3,152(0,13) ; m
         ST    3,128(0,13) ; t
* ***         __memcpy(q,p,t);
@L43     DS    0H
         L     2,148(0,13) ; q
         L     3,140(0,13) ; p
         L     4,128(0,13)
         LR    5,2
@@gen_label45 DS 0H
         LTR   4,4
         BZ    @@gen_label46
         CL    4,@lit_81_41
         BH    @@gen_label47
         LR    6,4
         B     @@gen_label48
         DS    0D
@lit_81_41  DC F'256' 0x00000100
@lit_81_43  DC XL6'D20020003000'
@lit_region_diff_81_2_3  DC A(@REGION_81_3-@REGION_81_2)
@lit_81_44  DC A(ifflush)
@lit_81_46  DC F'8' 0x00000008
@lit_81_45  DC F'0' 0x00000000
@lit_81_47  DC F'14' 0x0000000e
@lit_81_49  DC F'29' 0x0000001d
@lit_81_48  DC F'16383' 0x00003fff
@lit_81_50  DC F'31' 0x0000001f
@lit_81_52 DC XL8'A3969640948195A8' too.many
         DC XL8'4093859587A38840' .length.
         DC XL8'9699408489A2A381' or.dista
         DC XL8'95838540A2A89482' nce.symb
         DC XL4'9693A200' ols.
@lit_81_53  DC F'-3' 0xfffffffd
@lit_81_55  DC F'258' 0x00000102
@lit_81_57  DC F'-4' 0xfffffffc
@lit_81_63  DC F'3' 0x00000003
@lit_81_65  DC A(@DATA)
@lit_81_64  DC F'1' 0x00000001
@lit_81_67  DC F'4' 0x00000004
@lit_81_70  DC F'19' 0x00000013
@lit_81_71  DC A(iftb)
@lit_81_79  DC F'16' 0x00000010
@lit_81_77  DC A(ifmask)
@lit_81_81  DC F'18' 0x00000012
@@gen_label47 DS 0H
         L     6,@lit_81_41
@@gen_label48 DS 0H
         SLR   4,6
         BCTR  6,0
         EX    6,@lit_81_43
         LA    2,1(6,2)
         LA    3,1(6,3)
         B     @@gen_label45
@@gen_label46 DS 0H
* ***         p += t; n -= t;
         L     2,140(0,13) ; p
         AL    2,128(0,13)
         ST    2,140(0,13) ; p
         L     3,144(0,13) ; n
         SL    3,128(0,13)
         ST    3,144(0,13) ; n
* ***         q += t; m -= t;
         L     4,148(0,13) ; q
         AL    4,128(0,13)
         ST    4,148(0,13) ; q
         L     5,152(0,13) ; m
         SL    5,128(0,13)
         ST    5,152(0,13) ; m
* ***         if ((s->sub.left -= t) != 0)
         L     6,80(0,13)
         L     7,0(0,6)    ; s
         LA    7,4(0,7)    ; offset of sub in inflate_blocks_state
         LR    8,7
         L     9,0(0,7)
         SL    9,128(0,13)
         ST    9,0(0,8)
         LTR   9,9
         BE    @L44
* ***           break;
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_2,12
* ***         ;
@L44     DS    0H
* ***         # 214
* ***   s->mode = s->last ? DRY : TYPE;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of last in inflate_blocks_state
         L     4,0(0,3)
         LTR   4,4
         BZ    @@gen_label51
         LA    3,7(0,0)
         B     @@gen_label52
@@gen_label51 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label52 DS 0H
         L     2,80(0,13)
         L     4,0(0,2)    ; s
         ST    3,0(0,4)    ; s
* ***         break;
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @L11
         DROP  12
         USING @REGION_81_2,12
* ***       case TABLE:
* ***         {while(k<(14)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {\
* z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}\
* } return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
@L45     DS    0H
         B     @L47
@L46     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L50
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L51
@L50     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
@L51     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_81_45
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_81_46
         ST    4,136(0,13) ; k
@L47     DS    0H
         L     2,136(0,13) ; k
         CL    2,@lit_81_47
         BL    @L46
* ***         s->sub.trees.table = t = (uInt)b & 0x3fff;
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,4(0,4)    ; offset of sub in inflate_blocks_state
         L     5,@lit_81_48
         N     5,132(0,13)
         ST    5,128(0,13) ; t
         ST    5,0(0,4)    ; offset of sub in inflate_blocks_state
* ***
* ***   if ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29)
         LA    2,31(0,0)
         N     2,128(0,13)
         CL    2,@lit_81_49
         BH    @@gen_label55
         L     2,128(0,13) ; t
         SRL   2,5(0)
         N     2,@lit_81_50
         CL    2,@lit_81_49
         BNH   @L52
@@gen_label55 DS 0H
* ***         {
* ***           s->mode = BAD;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    4,9(0,0)
         ST    4,0(0,3)    ; s
* ***           z->msg = (char*)"too many length or distance symbols";
         L     4,4(0,2)    ; z
         LA    4,24(0,4)   ; offset of msg in z_stream_s
         LA    5,@lit_81_52
         ST    5,0(0,4)    ; offset of msg in z_stream_s
* ***           r = (-3);
         L     3,@lit_81_53
         ST    3,8(0,2)    ; r
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
* ***         }
* ***
* ***   t = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);
@L52     DS    0H
         LA    2,31(0,0)
         N     2,128(0,13)
         AL    2,@lit_81_55
         L     3,128(0,13) ; t
         SRL   3,5(0)
         N     3,@lit_81_50
         ALR   2,3
         ST    2,128(0,13) ; t
* ***         if ((s->sub.trees.blens = (uIntf*)(*((z)->zalloc))((z)->\
* opaque, (t), (sizeof(uInt)))) == 0)
         L     3,80(0,13)
         L     4,4(0,3)    ; z
         LA    4,40(0,4)   ; offset of opaque in z_stream_s
         L     5,0(0,4)
         LA    4,4(0,0)
         ST    5,176(0,13)
         MVC   180(4,13),128(13)
         ST    4,184(0,13)
         L     4,4(0,3)    ; z
         LA    4,32(0,4)   ; offset of zalloc in z_stream_s
         L     5,0(0,4)
         LA    1,176(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
         L     2,0(0,3)    ; s
         LA    2,4(0,2)    ; offset of sub in inflate_blocks_state
         LA    2,8(0,2)    ; offset of blens in 0000004
         ST    15,0(0,2)   ; offset of blens in 0000004
         LA    2,0(0,0)
         CR    15,2
         BNE   @L53
* ***         {
* ***           r = (-4);
         L     2,@lit_81_57
         ST    2,8(0,3)    ; r
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     5,0(0,3)    ; s
         LA    5,32(0,5)   ; offset of bitb in inflate_blocks_state
         L     6,132(0,13) ; b
         ST    6,0(0,5)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     5,136(0,13) ; k
         ST    5,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     5,144(0,13) ; n
         ST    5,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    5,2
         L     6,0(0,2)
         L     2,140(0,13) ; p
         L     7,4(0,3)    ; z
         L     8,0(0,7)
         SLR   2,8
         ALR   6,2
         ST    6,0(0,5)
         L     2,140(0,13) ; p
         ST    2,0(0,7)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     5,148(0,13) ; q
         ST    5,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     5,4(0,3)    ; z
         ST    2,176(0,13)
         ST    5,180(0,13)
         MVC   184(4,13),8(3)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
* ***         }
* ***         {b>>=(14);k-=(14);}
@L53     DS    0H
         L     2,132(0,13) ; b
         SRL   2,14(0)
         ST    2,132(0,13) ; b
         L     3,136(0,13) ; k
         SL    3,@lit_81_47
         ST    3,136(0,13) ; k
* ***         s->sub.trees.index = 0;
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         LA    5,4(0,5)    ; offset of index in 0000004
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of index in 0000004
* ***         ;
* ***         s->mode = BTREE;
         L     2,0(0,4)    ; s
         LA    3,4(0,0)
         ST    3,0(0,2)    ; s
* ***       case BTREE:
* ***         while (s->sub.trees.index < 4 + (s->sub.trees.table >> 1\
* 0))
         B     @L56
@L54     DS    0H
         B     @L56
@L55     DS    0H
* ***           {while(k<(3)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} \
* {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;\
* }} return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
@L59     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L63
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L64
@L63     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
@L64     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_81_45
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_81_46
         ST    4,136(0,13) ; k
@L60     DS    0H
         L     2,136(0,13) ; k
         CL    2,@lit_81_63
         BL    @L59
* ***           s->sub.trees.blensÝborderÝs->sub.trees.index++¨¨ = (uI\
* nt)b & 7;
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,4(0,4)    ; offset of sub in inflate_blocks_state
         LA    4,4(0,4)    ; offset of index in 0000004
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_81_64
         ST    4,0(0,5)
         L     2,@lit_81_65
         SLL   6,2(0)
         LA    6,0(6,2)
         L     4,0(0,6)
         L     5,0(0,3)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         LA    5,8(0,5)    ; offset of blens in 0000004
         L     6,0(0,5)
         SLL   4,2(0)
         LA    4,0(4,6)
         LA    5,7(0,0)
         N     5,132(0,13)
         ST    5,0(0,4)
* ***           {b>>=(3);k-=(3);}
         L     4,132(0,13) ; b
         SRL   4,3(0)
         ST    4,132(0,13) ; b
         L     5,136(0,13) ; k
         SL    5,@lit_81_63
         ST    5,136(0,13) ; k
* ***         }
@L56     DS    0H
* ***         {
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,4(0,3)    ; offset of index in 0000004
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         L     5,0(0,3)
         SRL   5,10(0)
         AL    5,@lit_81_67
         CLR   4,5
         BL    @L60
* ***         while (s->sub.trees.index < 19)
         B     @L66
@L65     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,4(0,3)    ; offset of index in 0000004
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_81_64
         ST    3,0(0,4)
         L     3,@lit_81_65
         SLL   5,2(0)
         LA    5,0(5,3)
         L     4,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         LA    5,8(0,5)    ; offset of blens in 0000004
         L     6,0(0,5)
         SLL   4,2(0)
         LA    4,0(4,6)
         LA    5,0(0,0)
         ST    5,0(0,4)
@L66     DS    0H
* ***           s->sub.trees.blensÝborderÝs->sub.trees.index++¨¨ = 0;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,4(0,3)    ; offset of index in 0000004
         L     4,0(0,3)
         CL    4,@lit_81_70
         BL    @L65
* ***         s->sub.trees.bb = 7;
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,12(0,3)   ; offset of bb in 0000004
         LA    4,7(0,0)
         ST    4,0(0,3)    ; offset of bb in 0000004
* ***         t = iftb(s->sub.trees.blens, &s->sub.trees.bb,
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,8(0,3)    ; offset of blens in 0000004
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,12(0,3)   ; offset of bb in 0000004
* ***                                &s->sub.trees.tb, s->hufts, z);
         L     5,0(0,2)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         LA    5,16(0,5)   ; offset of tb in 0000004
         L     6,0(0,2)    ; s
         LA    6,36(0,6)   ; offset of hufts in inflate_blocks_state
         L     7,0(0,6)
         L     6,4(0,2)    ; z
         ST    4,176(0,13)
         ST    3,180(0,13)
         ST    5,184(0,13)
         ST    7,188(0,13)
         ST    6,192(0,13)
         LA    1,176(0,13)
         L     15,@lit_81_71 ; iftb
         BALR  14,15
         ST    15,128(0,13) ; t
* ***         if (t != 0)
         LTR   15,15
         BE    @L69
* ***         {
* ***           (*((z)->zfree))((z)->opaque, (voidpf)(s->sub.trees.ble\
* ns));
         L     3,4(0,2)    ; z
         LA    3,40(0,3)   ; offset of opaque in z_stream_s
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,8(0,3)    ; offset of blens in 0000004
         L     5,0(0,3)
         STM   4,5,176(13)
         L     3,4(0,2)    ; z
         LA    3,36(0,3)   ; offset of zfree in z_stream_s
         L     4,0(0,3)
         LA    1,176(0,13)
         L     3,72(0,13)
         LR    15,4
         BALR  14,15
* ***           r = t;
         L     4,128(0,13) ; t
         ST    4,8(0,2)    ; r
* ***           if (r == (-3))
         C     4,@lit_81_53
         BNE   @L70
* ***             s->mode = BAD;
         L     5,0(0,2)    ; s
         LA    6,9(0,0)
         ST    6,0(0,5)    ; s
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
@L70     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
* ***         }
* ***         s->sub.trees.index = 0;
@L69     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,4(0,3)    ; offset of index in 0000004
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of index in 0000004
* ***         ;
* ***         s->mode = DTREE;
         L     3,0(0,2)    ; s
         LA    4,5(0,0)
         ST    4,0(0,3)    ; s
* ***       case DTREE:
* ***         while (t = s->sub.trees.table,
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @L73
         DROP  12
         USING @REGION_81_2,12
@L71     DS    0H
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @L73
         DROP  12
         USING @REGION_81_2,12
@L72     DS    0H
* ***           inflate_huft *h;
* ***           uInt i, j, c;
* ***
* ***   t = s->sub.trees.bb;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,12(0,3)   ; offset of bb in 0000004
         L     4,0(0,3)
         ST    4,128(0,13) ; t
* ***           {while(k<(t)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} \
* {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;\
* }} return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
         B     @L77
@L76     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L80
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L81
@L80     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
@L81     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_81_45
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_81_46
         ST    4,136(0,13) ; k
@L77     DS    0H
         L     2,136(0,13) ; k
         CL    2,128(0,13)
         BL    @L76
* ***           h = s->sub.trees.tb + ((uInt)b & ifmaskÝt¨);
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,4(0,4)    ; offset of sub in inflate_blocks_state
         LA    4,16(0,4)   ; offset of tb in 0000004
         L     5,0(0,4)
         L     4,128(0,13) ; t
         L     6,@lit_81_77
         SLL   4,2(0)
         LA    4,0(4,6)
         L     6,0(0,4)
         N     6,132(0,13)
         SLL   6,3(0)
         LA    5,0(5,6)
         ST    5,156(0,13) ; h
* ***           t = h->word.what.Bits;
         LA    5,1(0,5)    ; offset of Bits in 0000001
         IC    4,0(0,5)
         ICM   4,B'1110',@lit_81_45
         ST    4,128(0,13) ; t
* ***           c = h->base;
         L     5,156(0,13) ; h
         LA    5,4(0,5)    ; offset of base in inflate_huft_s
         L     6,0(0,5)
         ST    6,168(0,13) ; c
* ***           if (c < 16)
         CL    6,@lit_81_79
         BNL   @L82
* ***           {
* ***             {b>>=(t);k-=(t);}
         L     5,132(0,13) ; b
         SRL   5,0(4)
         ST    5,132(0,13) ; b
         SL    2,128(0,13)
         ST    2,136(0,13) ; k
* ***             s->sub.trees.blensÝs->sub.trees.index++¨ = c;
         L     7,0(0,3)    ; s
         LA    7,4(0,7)    ; offset of sub in inflate_blocks_state
         LA    7,4(0,7)    ; offset of index in 0000004
         LR    8,7
         L     9,0(0,7)
         LR    7,9
         AL    7,@lit_81_64
         ST    7,0(0,8)
         L     2,0(0,3)    ; s
         LA    2,4(0,2)    ; offset of sub in inflate_blocks_state
         LA    2,8(0,2)    ; offset of blens in 0000004
         L     4,0(0,2)
         SLL   9,2(0)
         LA    9,0(9,4)
         L     2,168(0,13) ; c
         ST    2,0(0,9)
* ***           }
* ***           else
* ***           {
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @L73
         DROP  12
         USING @REGION_81_2,12
@L82     DS    0H
* ***             i = c == 18 ? 7 : c - 14;
         L     2,168(0,13) ; c
         CL    2,@lit_81_81
         BNE   @@gen_label68
         LA    3,7(0,0)
         B     @@gen_label69
@@gen_label68 DS 0H
         L     2,168(0,13) ; c
         SL    2,@lit_81_47
         LR    3,2
@@gen_label69 DS 0H
         ST    3,160(0,13) ; i
* ***             j = c == 18 ? 11 : 3;
         L     2,168(0,13) ; c
         CL    2,@lit_81_81
         BNE   @@gen_label71
         LA    4,11(0,0)
         B     @@gen_label72
@@gen_label71 DS 0H
         LA    2,3(0,0)
         LR    4,2
@@gen_label72 DS 0H
         ST    4,164(0,13) ; j
* ***             {while(k<(t + i)){{if(n)r=0;else {{{s->bitb=b;s->bit\
* k=k;} {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->wr\
* ite=q;}} return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
         B     @L85
@L84     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L88
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L89
@L88     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_44 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @ret_lab_81
         DROP  12
         USING @REGION_81_2,12
@L89     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_81_45
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_81_46
         ST    4,136(0,13) ; k
@L85     DS    0H
         L     2,136(0,13) ; k
         L     3,128(0,13) ; t
         AL    3,160(0,13) ; i
         CLR   2,3
         BL    @L84
* ***             {b>>=(t);k-=(t);}
         L     3,132(0,13) ; b
         L     4,128(0,13) ; t
         SRL   3,0(4)
         ST    3,132(0,13) ; b
         SL    2,128(0,13)
         ST    2,136(0,13) ; k
* ***             j += (uInt)b & ifmaskÝi¨;
         L     5,160(0,13) ; i
         L     6,@lit_81_77
         SLL   5,2(0)
         LA    5,0(5,6)
         L     6,0(0,5)
         N     6,132(0,13)
         AL    6,164(0,13)
         ST    6,164(0,13) ; j
* ***             {b>>=(i);k-=(i);}
         L     5,160(0,13) ; i
         SRL   3,0(5)
         ST    3,132(0,13) ; b
         SL    2,160(0,13)
         ST    2,136(0,13) ; k
* ***             i = s->sub.trees.index;
         L     7,80(0,13)
         L     8,0(0,7)    ; s
         LA    8,4(0,8)    ; offset of sub in inflate_blocks_state
         LA    8,4(0,8)    ; offset of index in 0000004
         L     9,0(0,8)
         ST    9,160(0,13) ; i
* ***             t = s->sub.trees.table;
         L     5,0(0,7)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         L     8,0(0,5)
         ST    8,128(0,13) ; t
* ***             if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) ||
* ***                 (c == 16 && i < 1))
         AL    9,164(0,13) ; j
         LA    4,31(0,0)
         N     4,128(0,13)
         AL    4,@lit_81_55
         SRL   8,5(0)
         N     8,@lit_81_50
         ALR   4,8
         CLR   9,4
         BNH   *+12  Around region break
         AL    12,@lit_region_diff_81_2_3
         DROP  12
         USING @REGION_81_3,12
         B     @@gen_label75
         DROP  12
         USING @REGION_81_2,12
         AL    12,@lit_region_diff_81_2_3
@REGION_81_3 DS 0H
         DROP  12
         USING @REGION_81_3,12
         L     4,168(0,13) ; c
         CL    4,@lit_81_90
         BNE   @L90
         L     5,160(0,13) ; i
         CL    5,@lit_81_91
         BNL   @L90
@@gen_label75 DS 0H
* ***             {
* ***               (*((z)->zfree))((z)->opaque, (voidpf)(s->sub.trees\
* .blens));
         L     2,80(0,13)
         L     3,4(0,2)    ; z
         LA    3,40(0,3)   ; offset of opaque in z_stream_s
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,8(0,3)    ; offset of blens in 0000004
         L     5,0(0,3)
         STM   4,5,176(13)
         L     3,4(0,2)    ; z
         LA    3,36(0,3)   ; offset of zfree in z_stream_s
         L     4,0(0,3)
         LA    1,176(0,13)
         L     3,72(0,13)
         LR    15,4
         BALR  14,15
* ***               s->mode = BAD;
         L     4,0(0,2)    ; s
         LA    5,9(0,0)
         ST    5,0(0,4)    ; s
* ***               z->msg = (char*)"invalid bit length repeat";
         L     5,4(0,2)    ; z
         LA    5,24(0,5)   ; offset of msg in z_stream_s
         LA    6,@lit_81_92
         ST    6,0(0,5)    ; offset of msg in z_stream_s
* ***               r = (-3);
         L     4,@lit_81_93
         ST    4,8(0,2)    ; r
* ***               {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_i\
* n+=p-z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);\
* }
         L     5,0(0,2)    ; s
         LA    5,32(0,5)   ; offset of bitb in inflate_blocks_state
         L     6,132(0,13) ; b
         ST    6,0(0,5)    ; offset of bitb in inflate_blocks_state
         L     4,0(0,2)    ; s
         LA    4,28(0,4)   ; offset of bitk in inflate_blocks_state
         L     5,136(0,13) ; k
         ST    5,0(0,4)    ; offset of bitk in inflate_blocks_state
         L     4,4(0,2)    ; z
         LA    4,4(0,4)    ; offset of avail_in in z_stream_s
         L     5,144(0,13) ; n
         ST    5,0(0,4)    ; offset of avail_in in z_stream_s
         L     4,4(0,2)    ; z
         LA    4,8(0,4)    ; offset of total_in in z_stream_s
         LR    5,4
         L     6,0(0,4)
         L     4,140(0,13) ; p
         L     7,4(0,2)    ; z
         L     8,0(0,7)
         SLR   4,8
         ALR   6,4
         ST    6,0(0,5)
         L     4,140(0,13) ; p
         ST    4,0(0,7)    ; z
         L     4,0(0,2)    ; s
         LA    4,52(0,4)   ; offset of write in inflate_blocks_state
         L     5,148(0,13) ; q
         ST    5,0(0,4)    ; offset of write in inflate_blocks_state
         L     4,0(0,2)    ; s
         L     5,4(0,2)    ; z
         STM   4,5,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
         DS    0D
@lit_81_90  DC F'16' 0x00000010
@lit_81_91  DC F'1' 0x00000001
@lit_81_92 DC XL8'8995A58193898440' invalid.
         DC XL8'8289A34093859587' bit.leng
         DC XL8'A388409985978581' th.repea
         DC XL2'A300' t.
@lit_81_94  DC A(ifflush)
@lit_81_93  DC F'-3' 0xfffffffd
@lit_region_diff_81_3_2  DC A(@REGION_81_3-@REGION_81_2)
@lit_81_98  DC F'31' 0x0000001f
@lit_81_97  DC F'258' 0x00000102
@lit_81_102  DC A(iftd)
@lit_81_99  DC F'257' 0x00000101
@lit_81_105  DC A(ifcnew)
@lit_81_106  DC F'-4' 0xfffffffc
@lit_81_108  DC A(ifcodes)
@lit_81_111  DC A(ifcfree)
@lit_81_117  DC F'-2' 0xfffffffe
@lit_81_119  DC F'0' 0x00000000
@lit_81_120  DC F'9' 0x00000009
@lit_region_diff_81_3_1  DC A(@REGION_81_3-@REGION_81_1)
* ***             }
* ***             c = c == 16 ? s->sub.trees.blensÝi - 1¨ : 0;
@L90     DS    0H
         L     2,168(0,13) ; c
         CL    2,@lit_81_90
         BNE   @@gen_label80
         L     3,160(0,13) ; i
         BCTR  3,0
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         LA    5,8(0,5)    ; offset of blens in 0000004
         L     6,0(0,5)
         SLL   3,2(0)
         LA    3,0(3,6)
         L     5,0(0,3)
         B     @@gen_label81
@@gen_label80 DS 0H
         LA    2,0(0,0)
         LR    5,2
@@gen_label81 DS 0H
         ST    5,168(0,13) ; c
* ***             do {
@L91     DS    0H
* ***               s->sub.trees.blensÝi++¨ = c;
         L     2,160(0,13) ; i
         LR    3,2
         AL    2,@lit_81_91
         ST    2,160(0,13) ; i
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         LA    5,8(0,5)    ; offset of blens in 0000004
         L     6,0(0,5)
         SLL   3,2(0)
         LA    3,0(3,6)
         L     5,168(0,13) ; c
         ST    5,0(0,3)
* ***             } while (--j);
         L     2,164(0,13) ; j
         BCTR  2,0
         ST    2,164(0,13) ; j
         LTR   2,2
         BNZ   @L91
* ***             s->sub.trees.index = i;
         L     3,0(0,4)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,4(0,3)    ; offset of index in 0000004
         L     5,160(0,13) ; i
         ST    5,0(0,3)    ; offset of index in 0000004
* ***           }
* ***         }
@L73     DS    0H
* ***                s->sub.trees.index < 258 + (t & 0x1f) + ((t >> 5)\
*  & 0x1f))
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         L     4,0(0,3)
         ST    4,128(0,13) ; t
* ***         {
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,4(0,3)    ; offset of index in 0000004
         L     5,0(0,3)
         LA    3,31(0,0)
         N     3,128(0,13)
         AL    3,@lit_81_97
         SRL   4,5(0)
         N     4,@lit_81_98
         ALR   3,4
         CLR   5,3
         BNL   *+12  Around region break
         SL    12,@lit_region_diff_81_3_2
         DROP  12
         USING @REGION_81_2,12
         B     @L72
         DROP  12
         USING @REGION_81_3,12
* ***         s->sub.trees.tb = 0;
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         LA    3,16(0,3)   ; offset of tb in 0000004
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of tb in 0000004
* ***         {
* ***           uInt bl, bd;
* ***           inflate_huft *tl, *td;
* ***           inflate_codes_statef *c;
* ***
* ***   bl = 9;
         LA    3,9(0,0)
         ST    3,156(0,13) ; bl
* ***           bd = 6;
         LA    4,6(0,0)
         ST    4,160(0,13) ; bd
* ***           t = s->sub.trees.table;
         L     5,0(0,2)    ; s
         LA    5,4(0,5)    ; offset of sub in inflate_blocks_state
         L     6,0(0,5)
         ST    6,128(0,13) ; t
* ***           t = iftd(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f),
         LA    5,31(0,0)
         N     5,128(0,13)
         AL    5,@lit_81_99
         SRL   6,5(0)
         N     6,@lit_81_98
         AL    6,@lit_81_91
* ***                                     s->sub.trees.blens, &bl, &bd\
* , &tl, &td,
         L     7,0(0,2)    ; s
         LA    7,4(0,7)    ; offset of sub in inflate_blocks_state
         LA    7,8(0,7)    ; offset of blens in 0000004
         L     8,0(0,7)
         LA    7,156(0,13) ; &bl
         LA    9,160(0,13) ; &bd
         LA    10,164(0,13) ; &tl
         LA    11,168(0,13) ; &td
* ***                                     s->hufts, z);
         L     3,0(0,2)    ; s
         LA    3,36(0,3)   ; offset of hufts in inflate_blocks_state
         L     2,0(0,3)
         L     3,80(0,13)
         L     4,4(0,3)    ; z
         STM   5,6,176(13)
         ST    8,184(0,13)
         ST    7,188(0,13)
         STM   9,11,192(13)
         ST    2,204(0,13)
         ST    4,208(0,13)
         LA    1,176(0,13)
         L     15,@lit_81_102 ; iftd
         BALR  14,15
         ST    15,128(0,13) ; t
* ***           (*((z)->zfree))((z)->opaque, (voidpf)(s->sub.trees.ble\
* ns));
         L     2,4(0,3)    ; z
         LA    2,40(0,2)   ; offset of opaque in z_stream_s
         L     4,0(0,2)
         L     2,0(0,3)    ; s
         LA    2,4(0,2)    ; offset of sub in inflate_blocks_state
         LA    2,8(0,2)    ; offset of blens in 0000004
         L     5,0(0,2)
         STM   4,5,176(13)
         L     2,4(0,3)    ; z
         LA    2,36(0,2)   ; offset of zfree in z_stream_s
         L     4,0(0,2)
         LA    1,176(0,13)
         L     2,72(0,13)
         LR    15,4
         BALR  14,15
* ***           if (t != 0)
         L     4,128(0,13) ; t
         LTR   4,4
         BE    @L94
* ***           {
* ***             if (t == (uInt)(-3))
         CL    4,@lit_81_93
         BNE   @L95
* ***               s->mode = BAD;
         L     5,0(0,3)    ; s
         LA    6,9(0,0)
         ST    6,0(0,5)    ; s
* ***             r = t;
@L95     DS    0H
         L     2,80(0,13)
         L     3,128(0,13) ; t
         ST    3,8(0,2)    ; r
* ***             {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+\
* =p-z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***           }
* ***           ;
@L94     DS    0H
* ***           if ((c = ifcnew(bl, bd, tl, td, z)) == 0)
         L     2,164(0,13) ; tl
         L     3,168(0,13) ; td
         L     4,80(0,13)
         L     5,4(0,4)    ; z
         MVC   176(4,13),156(13)
         MVC   180(4,13),160(13)
         STM   2,3,184(13)
         ST    5,192(0,13)
         LA    1,176(0,13)
         L     15,@lit_81_105 ; ifcnew
         BALR  14,15
         ST    15,172(0,13) ; c
         LA    2,0(0,0)
         CR    15,2
         BNE   @L96
* ***           {
* ***             r = (-4);
         L     2,@lit_81_106
         ST    2,8(0,4)    ; r
* ***             {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+\
* =p-z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     3,0(0,4)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,4)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     3,136(0,13) ; k
         ST    3,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,4)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     3,144(0,13) ; n
         ST    3,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,4)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    3,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,4)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,3)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,4)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     3,148(0,13) ; q
         ST    3,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,4)    ; s
         L     3,4(0,4)    ; z
         STM   2,3,176(13)
         MVC   184(4,13),8(4)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***           }
* ***           s->sub.decode.codes = c;
@L96     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,4(0,3)    ; offset of sub in inflate_blocks_state
         L     4,172(0,13) ; c
         ST    4,0(0,3)    ; offset of sub in inflate_blocks_state
* ***         }
* ***         s->mode = CODES;
         L     3,0(0,2)    ; s
         LA    4,6(0,0)
         ST    4,0(0,3)    ; s
* ***       case CODES:
* ***         {{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z-\
* >next_in;z->next_in=p;} {s->write=q;}}
@L97     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
* ***         if ((r = ifcodes(s, z, r)) != 1)
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_108 ; ifcodes
         BALR  14,15
         ST    15,8(0,2)   ; r
         C     15,@lit_81_91
         BE    @L98
* ***           return ifflush(s, z, r);
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***         r = 0;
@L98     DS    0H
         L     2,80(0,13)
         LA    3,0(0,0)
         ST    3,8(0,2)    ; r
* ***         ifcfree(s->sub.decode.codes, z);
         L     4,0(0,2)    ; s
         LA    4,4(0,4)    ; offset of sub in inflate_blocks_state
         L     5,0(0,4)
         L     4,4(0,2)    ; z
         ST    5,176(0,13)
         ST    4,180(0,13)
         LA    1,176(0,13)
         L     15,@lit_81_111 ; ifcfree
         BALR  14,15
* ***         {{p=z->next_in;n=z->avail_in;b=s->bitb;k=s->bitk;} {q=s-\
* >write;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}}
         L     3,4(0,2)    ; z
         L     4,0(0,3)
         ST    4,140(0,13) ; p
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     5,0(0,3)
         ST    5,144(0,13) ; n
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     6,0(0,3)
         ST    6,132(0,13) ; b
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     7,0(0,3)
         ST    7,136(0,13) ; k
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     8,0(0,3)
         ST    8,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     9,0(0,3)
         CR    8,9
         BNL   @@gen_label89
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     9,0(0,3)
         SLR   9,8
         BCTR  9,0
         B     @@gen_label90
@@gen_label89 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    9,4
@@gen_label90 DS 0H
         ST    9,152(0,13) ; m
* ***         ;
* ***         # 343
* ***   if (!s->last)
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of last in inflate_blocks_state
         L     4,0(0,3)
         LTR   4,4
         BNZ   @L99
* ***         {
* ***           s->mode = TYPE;
         L     3,0(0,2)    ; s
         LA    4,0(0,0)
         ST    4,0(0,3)    ; s
* ***           break;
         B     @L11
* ***         }
* ***         s->mode = DRY;
@L99     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    4,7(0,0)
         ST    4,0(0,3)    ; s
* ***       case DRY:
* ***         {{s->write=q;} r=ifflush(s,z,r); {q=s->write;m=(uInt)(uI\
* nt)(q<s->read?s->read-q-1:s->end-q);}}
@L100    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         ST    15,8(0,2)   ; r
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label93
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label94
@@gen_label93 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label94 DS 0H
         ST    5,152(0,13) ; m
* ***         if (s->read != s->write)
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     6,0(0,3)
         CR    4,6
         BE    @L101
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***         s->mode = DONE;
@L101    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    4,8(0,0)
         ST    4,0(0,3)    ; s
* ***       case DONE:
* ***         r = 1;
@L102    DS    0H
         L     2,80(0,13)
         LA    3,1(0,0)
         ST    3,8(0,2)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***       case BAD:
* ***         r = (-3);
@L103    DS    0H
         L     2,80(0,13)
         L     3,@lit_81_93
         ST    3,8(0,2)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***       default:
* ***         r = (-2);
@L104    DS    0H
         L     2,80(0,13)
         L     3,@lit_81_117
         ST    3,8(0,2)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,176(13)
         MVC   184(4,13),8(2)
         LA    1,176(0,13)
         L     15,@lit_81_94 ; ifflush
         BALR  14,15
         B     @ret_lab_81
* ***     }
* ***   }
@L11     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         C     4,@lit_81_119
         BL    @L104
         C     4,@lit_81_120
         BH    @L104
         S     4,@lit_81_119
         SLL   4,3(0)
         LA    5,@@gen_label96
         B     0(5,4)
@@gen_label96 DS    0H
         SL    12,@lit_region_diff_81_3_1
         DROP  12
         USING @REGION_81_1,12
         B     @L13
         DROP  12
         USING @REGION_81_3,12
         SL    12,@lit_region_diff_81_3_1
         DROP  12
         USING @REGION_81_1,12
         B     @L27
         DROP  12
         USING @REGION_81_3,12
         SL    12,@lit_region_diff_81_3_1
         DROP  12
         USING @REGION_81_1,12
         B     @L35
         DROP  12
         USING @REGION_81_3,12
         SL    12,@lit_region_diff_81_3_2
         DROP  12
         USING @REGION_81_2,12
         B     @L45
         DROP  12
         USING @REGION_81_3,12
         SL    12,@lit_region_diff_81_3_2
         DROP  12
         USING @REGION_81_2,12
         B     @L54
         DROP  12
         USING @REGION_81_3,12
         SL    12,@lit_region_diff_81_3_2
         DROP  12
         USING @REGION_81_2,12
         B     @L71
         DROP  12
         USING @REGION_81_3,12
         B     @L97
         DC    XL4'00000000'
         B     @L100
         DC    XL4'00000000'
         B     @L102
         DC    XL4'00000000'
         B     @L103
         DC    XL4'00000000'
@ret_lab_81 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifblocks"
*      (FUNCTION #81)
*
@AUTO#ifblocks DSECT
         DS    XL128
ifblocks#t#0 DS 1F         ; t
ifblocks#b#0 DS 1F         ; b
ifblocks#k#0 DS 1F         ; k
ifblocks#p#0 DS 1A         ; p
ifblocks#n#0 DS 1F         ; n
ifblocks#q#0 DS 1A         ; q
ifblocks#m#0 DS 1F         ; m
ifblocks#bl#16 DS 1F       ; bl
         ORG   @AUTO#ifblocks+156
ifblocks#h#102 DS 1A       ; h
         ORG   @AUTO#ifblocks+156
ifblocks#bl#131 DS 1F      ; bl
ifblocks#bd#16 DS 1F       ; bd
         ORG   @AUTO#ifblocks+160
ifblocks#i#102 DS 1F       ; i
         ORG   @AUTO#ifblocks+160
ifblocks#bd#131 DS 1F      ; bd
ifblocks#tl#16 DS 1A       ; tl
         ORG   @AUTO#ifblocks+164
ifblocks#j#102 DS 1F       ; j
         ORG   @AUTO#ifblocks+164
ifblocks#tl#131 DS 1A      ; tl
ifblocks#td#16 DS 1A       ; td
         ORG   @AUTO#ifblocks+168
ifblocks#c#102 DS 1F       ; c
         ORG   @AUTO#ifblocks+168
ifblocks#td#131 DS 1A      ; td
ifblocks#c#131 DS 1A       ; c
*
@ZLIB04  CSECT
*
*
*
ifbfree  #PROLOG CINDEX=83,BASER=12,FRAME=120,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    3,2
         L     4,4(0,1)
         LR    2,4
* ***     ifbrset(s, z, 0);
         LR    5,3
         LR    6,2
         LA    7,0(0,0)
         STM   5,7,104(13)
         LA    1,104(0,13)
         L     15,@lit_83_162 ; ifbrset
         BALR  14,15
* ***     (*((z)->zfree))((z)->opaque, (voidpf)(s->window));
         LA    4,40(0,2)   ; offset of opaque in z_stream_s
         L     5,0(0,4)
         LA    4,40(0,3)   ; offset of window in inflate_blocks_state
         L     6,0(0,4)
         STM   5,6,104(13)
         LA    4,36(0,2)   ; offset of zfree in z_stream_s
         L     5,0(0,4)
         LA    1,104(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***     (*((z)->zfree))((z)->opaque, (voidpf)(s->hufts));
         LA    5,40(0,2)   ; offset of opaque in z_stream_s
         L     6,0(0,5)
         LA    5,36(0,3)   ; offset of hufts in inflate_blocks_state
         L     7,0(0,5)
         STM   6,7,104(13)
         LA    5,36(0,2)   ; offset of zfree in z_stream_s
         L     6,0(0,5)
         LA    1,104(0,13)
         LR    15,6
         BALR  14,15
* ***     (*((z)->zfree))((z)->opaque, (voidpf)(s));
         LA    5,40(0,2)   ; offset of opaque in z_stream_s
         L     6,0(0,5)
         LR    5,3
         ST    6,104(0,13)
         ST    5,108(0,13)
         LA    5,36(0,2)   ; offset of zfree in z_stream_s
         L     6,0(0,5)
         LA    1,104(0,13)
         LR    15,6
         BALR  14,15
* ***     ;
* ***     return 0;
         LA    15,0(0,0)
         B     @ret_lab_83
         DS    0D
@lit_83_162  DC A(ifbrset)
@FRAMESIZE_83  DC F'120'
* ***   }
@ret_lab_83 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifbfree"
*      (FUNCTION #83)
*
@AUTO#ifbfree DSECT
         DS    XL104
*
@ZLIB04  CSECT
*
*
*
ifsd     #PROLOG CINDEX=84,BASER=12,FRAME=128,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,4(0,1)
         LR    4,2
         L     5,8(0,1)
         LR    3,5
         L     6,0(0,1)
         LR    2,6
* ***     __memcpy(s->window,d,n);
         LA    7,40(0,2)   ; offset of window in inflate_blocks_state
         L     8,0(0,7)
         LR    7,4
         LR    9,3
         LR    10,8
@@gen_label98 DS 0H
         LTR   9,9
         BZ    @@gen_label99
         CL    9,@lit_84_164
         BH    @@gen_label100
         LR    11,9
         B     @@gen_label101
         DS    0D
@FRAMESIZE_84  DC F'128'
@lit_84_164  DC F'256' 0x00000100
@lit_84_166  DC XL6'D20080007000'
@@gen_label100 DS 0H
         L     11,@lit_84_164
@@gen_label101 DS 0H
         SLR   9,11
         BCTR  11,0
         EX    11,@lit_84_166
         LA    8,1(11,8)
         LA    7,1(11,7)
         B     @@gen_label98
@@gen_label99 DS 0H
* ***     s->read = s->write = s->window + n;
         LA    5,48(0,2)   ; offset of read in inflate_blocks_state
         LA    6,52(0,2)   ; offset of write in inflate_blocks_state
         LA    7,40(0,2)   ; offset of window in inflate_blocks_state
         L     8,0(0,7)
         LR    7,3
         LA    8,0(8,7)
         ST    8,0(0,6)    ; offset of write in inflate_blocks_state
         ST    8,0(0,5)    ; offset of read in inflate_blocks_state
* ***   }
@ret_lab_84 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifsd"
*      (FUNCTION #84)
*
@AUTO#ifsd DSECT
         DS    XL112
*
@ZLIB04  CSECT
*
*
*
ifbsyncp #PROLOG CINDEX=85,BASER=12,FRAME=96,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***     return s->mode == LENS;
         L     4,0(0,2)
         C     4,@lit_85_168
         BNE   @@gen_label102
         LA    4,1(0,0)
         B     @@gen_label103
         DS    0D
@lit_85_168  DC F'1' 0x00000001
@FRAMESIZE_85  DC F'96'
@@gen_label102 DS 0H
         LA    4,0(0,0)
@@gen_label103 DS 0H
         LR    15,4
         B     @ret_lab_85
* ***   }
@ret_lab_85 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifbsyncp"
*      (FUNCTION #85)
*
@AUTO#ifbsyncp DSECT
         DS    XL96
*
@ZLIB04  CSECT
*
*  Non-Re-Entrant Data Section
*
@ZLIB04 CSECT
@DATA    DS 0D
         DC    X'000000100000001100000012'         ............
         DC    4X'00'
         DC    X'00000008000000070000000900000006' ................
         DC    X'0000000A000000050000000B00000004' ................
         DC    X'0000000C000000030000000D00000002' ................
         DC    X'0000000E000000010000000F'         ............
*
         END

*
*  Compiled by DCC Version 1.31.00
*           on Wed Jan 10 16:22:47 2001
*

*
*
*
*    Code Section
*
@ZLIB07 CSECT
@ZLIB07 AMODE ANY
@ZLIB07 RMODE ANY
         EXTRN zadler32
         EXTRN zcalloc
         EXTRN zcfree
         EXTRN ifbnew
         EXTRN ifblocks
         EXTRN ifbrset
         EXTRN ifbfree
         EXTRN ifsd
         EXTRN ifbsyncp
*
*
*
zifreset #PROLOG CINDEX=17,BASER=12,FRAME=120,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***     if (z == 0 || z->state == 0)
         LR    4,2         ; #0
         LA    5,0(0,0)
         CR    4,5
         BE    @@gen_label0
         LA    4,28(0,2)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BNE   @L0
@@gen_label0 DS 0H
* ***       return (-2);
         L     15,@lit_17_1
         B     @ret_lab_17
         DS    0D
@FRAMESIZE_17  DC F'120'
@lit_17_1  DC F'-2' 0xfffffffe
@lit_17_2  DC A(ifbrset)
* ***     z->total_in = z->total_out = 0;
@L0      DS    0H
         LA    3,8(0,2)    ; offset of total_in in z_stream_s
         LA    4,20(0,2)   ; offset of total_out in z_stream_s
         LA    5,0(0,0)
         ST    5,0(0,4)    ; offset of total_out in z_stream_s
         ST    5,0(0,3)    ; offset of total_in in z_stream_s
* ***     z->msg = 0;
         LA    3,24(0,2)   ; offset of msg in z_stream_s
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of msg in z_stream_s
* ***     z->state->mode = z->state->nowrap ? BLOCKS : METHOD;
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,12(0,4)   ; offset of nowrap in internal_state
         L     3,0(0,4)
         LTR   3,3
         BZ    @@gen_label3
         LA    3,7(0,0)
         B     @@gen_label4
@@gen_label3 DS 0H
         LA    3,0(0,0)
@@gen_label4 DS 0H
         LA    4,28(0,2)   ; offset of state in z_stream_s
         L     5,0(0,4)
         ST    3,0(0,5)
* ***     ifbrset(z->state->blocks, z, 0);
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of blocks in internal_state
         L     3,0(0,4)
         LR    4,2
         LA    5,0(0,0)
         STM   3,5,104(13)
         LA    1,104(0,13)
         L     15,@lit_17_2 ; ifbrset
         BALR  14,15
* ***     ;
* ***     return 0;
         LA    15,0(0,0)
         B     @ret_lab_17
* ***   }
@ret_lab_17 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifreset"
*      (FUNCTION #17)
*
@AUTO#zifreset DSECT
         DS    XL104
*
@ZLIB07  CSECT
*
*
*
zifend   #PROLOG CINDEX=10,BASER=12,FRAME=112,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***     if (z == 0 || z->state == 0 || z->zfree == 0)
         LR    4,2         ; #0
         LA    5,0(0,0)
         CR    4,5
         BE    @@gen_label7
         LA    4,28(0,2)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @@gen_label7
@@gen_label6 DS 0H
         LA    3,36(0,2)   ; offset of zfree in z_stream_s
         L     4,0(0,3)
         LA    3,0(0,0)
         CR    4,3
         BNE   @L1
@@gen_label7 DS 0H
* ***       return (-2);
         L     15,@lit_10_4
         B     @ret_lab_10
         DS    0D
@FRAMESIZE_10  DC F'112'
@lit_10_4  DC F'-2' 0xfffffffe
@lit_10_5  DC A(ifbfree)
* ***     if (z->state->blocks != 0)
@L1      DS    0H
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of blocks in internal_state
         L     3,0(0,4)
         LA    4,0(0,0)
         CR    3,4
         BE    @L2
* ***       ifbfree(z->state->blocks, z);
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of blocks in internal_state
         L     3,0(0,4)
         LR    4,2
         STM   3,4,104(13)
         LA    1,104(0,13)
         L     15,@lit_10_5 ; ifbfree
         BALR  14,15
* ***     (*((z)->zfree))((z)->opaque, (voidpf)(z->state));
@L2      DS    0H
         LA    3,40(0,2)   ; offset of opaque in z_stream_s
         L     4,0(0,3)
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     5,0(0,3)
         STM   4,5,104(13)
         LA    3,36(0,2)   ; offset of zfree in z_stream_s
         L     4,0(0,3)
         LA    1,104(0,13)
         L     3,72(0,13)
         LR    15,4
         BALR  14,15
* ***     z->state = 0;
         LA    4,28(0,2)   ; offset of state in z_stream_s
         LA    5,0(0,0)
         ST    5,0(0,4)    ; offset of state in z_stream_s
* ***     ;
* ***     return 0;
         LA    15,0(0,0)
         B     @ret_lab_10
* ***   }
@ret_lab_10 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifend"
*      (FUNCTION #10)
*
@AUTO#zifend DSECT
         DS    XL104
*
@ZLIB07  CSECT
*
*
*
zifini2  #PROLOG CINDEX=43,BASER=12,FRAME=128,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     5,12(0,1)
         L     2,8(0,1)
         LR    4,2
         L     3,4(0,1)
         L     6,0(0,1)
         LR    2,6
* ***     if (version == 0 || versionÝ0¨ != "1.1.3"Ý0¨ ||
* ***         stream_size != sizeof(z_stream))
         LR    7,4         ; #0
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label12
         LA    7,@lit_43_7
         CLC   0(1,4),0(7)
         BNE   @@gen_label12
@@gen_label11 DS 0H
         LR    6,5         ; #56
         CL    6,@lit_43_8
         BE    @L3
@@gen_label12 DS 0H
* ***         return (-6);
         L     15,@lit_43_9
         B     @ret_lab_43
         DS    0D
@FRAMESIZE_43  DC F'128'
@lit_43_7 DC XL6'F14BF14BF300' 1.1.3.
@lit_43_8  DC F'56' 0x00000038
@lit_43_9  DC F'-6' 0xfffffffa
@lit_43_10  DC F'-2' 0xfffffffe
@lit_43_11  DC A(zcalloc)
@lit_43_12  DC A(zcfree)
@lit_43_13  DC F'-4' 0xfffffffc
@lit_43_14  DC F'8' 0x00000008
@lit_43_15  DC F'15' 0x0000000f
@lit_43_16  DC A(zifend)
@lit_43_18  DC A(zadler32)
@lit_43_19  DC A(ifbnew)
@lit_43_22  DC A(zifreset)
* ***
* ***
* ***   if (z == 0)
@L3      DS    0H
         LR    6,2         ; #0
         LA    7,0(0,0)
         CR    6,7
         BNE   @L4
* ***       return (-2);
         L     15,@lit_43_10
         B     @ret_lab_43
* ***     z->msg = 0;
@L4      DS    0H
         LA    6,24(0,2)   ; offset of msg in z_stream_s
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of msg in z_stream_s
* ***     if (z->zalloc == 0)
         LA    6,32(0,2)   ; offset of zalloc in z_stream_s
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L5
* ***     {
* ***       z->zalloc = zcalloc;
         LA    6,32(0,2)   ; offset of zalloc in z_stream_s
         L     7,@lit_43_11
         ST    7,0(0,6)    ; offset of zalloc in z_stream_s
* ***       z->opaque = (voidpf)0;
         LA    6,40(0,2)   ; offset of opaque in z_stream_s
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of opaque in z_stream_s
* ***     }
* ***     if (z->zfree == 0) z->zfree = zcfree;
@L5      DS    0H
         LA    6,36(0,2)   ; offset of zfree in z_stream_s
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L6
         LA    6,36(0,2)   ; offset of zfree in z_stream_s
         L     7,@lit_43_12
         ST    7,0(0,6)    ; offset of zfree in z_stream_s
* ***     if ((z->state = (struct internal_state  *)
@L6      DS    0H
* ***          (*((z)->zalloc))((z)->opaque, (1), (sizeof(struct inter\
* nal_state)))) == 0)
         LA    6,40(0,2)   ; offset of opaque in z_stream_s
         L     7,0(0,6)
         LA    6,1(0,0)
         LA    8,24(0,0)
         ST    7,112(0,13)
         ST    6,116(0,13)
         ST    8,120(0,13)
         LA    6,32(0,2)   ; offset of zalloc in z_stream_s
         L     7,0(0,6)
         LA    1,112(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LA    7,28(0,2)   ; offset of state in z_stream_s
         ST    15,0(0,7)   ; offset of state in z_stream_s
         LA    7,0(0,0)
         CR    15,7
         BNE   @L7
* ***       return (-4);
         L     15,@lit_43_13
         B     @ret_lab_43
* ***     z->state->blocks = 0;
@L7      DS    0H
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,20(0,7)   ; offset of blocks in internal_state
         LA    6,0(0,0)
         ST    6,0(0,7)    ; offset of blocks in internal_state
* ***
* ***
* ***   z->state->nowrap = 0;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,12(0,7)   ; offset of nowrap in internal_state
         LA    6,0(0,0)
         ST    6,0(0,7)    ; offset of nowrap in internal_state
* ***     if (w < 0)
         LTR   3,3
         BNL   @L8
* ***     {
* ***       w = - w;
         LR    6,3
         LCR   6,6
         LR    3,6         ; w
* ***       z->state->nowrap = 1;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,12(0,7)   ; offset of nowrap in internal_state
         LA    6,1(0,0)
         ST    6,0(0,7)    ; offset of nowrap in internal_state
* ***     }
* ***
* ***
* ***   if (w < 8 || w > 15)
@L8      DS    0H
         C     3,@lit_43_14
         BL    @@gen_label19
         C     3,@lit_43_15
         BNH   @L9
@@gen_label19 DS 0H
* ***     {
* ***       zifend(z);
         LR    6,2
         ST    6,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_43_16 ; zifend
         BALR  14,15
* ***       return (-2);
         L     15,@lit_43_10
         B     @ret_lab_43
* ***     }
* ***     z->state->wbits = (uInt)w;
@L9      DS    0H
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,16(0,7)   ; offset of wbits in internal_state
         LR    6,3
         ST    6,0(0,7)    ; offset of wbits in internal_state
* ***
* ***
* ***   if ((z->state->blocks =
* ***         ifbnew(z, z->state->nowrap ? 0 : zadler32, (uInt)1 << w)\
* )
         LR    6,2
         LA    7,28(0,2)   ; offset of state in z_stream_s
         L     8,0(0,7)
         LA    8,12(0,8)   ; offset of nowrap in internal_state
         L     7,0(0,8)
         ST    6,88(0,13)
         LTR   7,7
         BZ    @@gen_label22
         LA    6,0(0,0)
         B     @@gen_label23
@@gen_label22 DS 0H
         L     6,@lit_43_18
@@gen_label23 DS 0H
         LA    7,1(0,0)
         LR    8,3
         SLL   7,0(8)
         L     8,88(0,13)
         ST    8,112(0,13)
         STM   6,7,116(13)
         LA    1,112(0,13)
         L     15,@lit_43_19 ; ifbnew
         BALR  14,15
* ***         == 0)
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,20(0,7)   ; offset of blocks in internal_state
         ST    15,0(0,7)   ; offset of blocks in internal_state
         LA    6,0(0,0)
         CR    15,6
         BNE   @L10
* ***     {
* ***       zifend(z);
         LR    6,2
         ST    6,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_43_16 ; zifend
         BALR  14,15
* ***       return (-4);
         L     15,@lit_43_13
         B     @ret_lab_43
* ***     }
* ***     ;
@L10     DS    0H
* ***
* ***
* ***   zifreset(z);
         LR    6,2
         ST    6,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_43_22 ; zifreset
         BALR  14,15
* ***     return 0;
         LA    15,0(0,0)
         B     @ret_lab_43
* ***   }
@ret_lab_43 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifini2"
*      (FUNCTION #43)
*
@AUTO#zifini2 DSECT
         DS    XL112
*
@ZLIB07  CSECT
*
*
*
zifini   #PROLOG CINDEX=41,BASER=12,FRAME=128,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    4,2
         L     5,4(0,1)
         LR    3,5
         L     2,8(0,1)
* ***     return zifini2(z, 15, version, stream_size);
         LR    6,4
         LA    7,15(0,0)
         LR    8,3
         LR    9,2
         STM   6,9,112(13)
         LA    1,112(0,13)
         L     15,@lit_41_24 ; zifini2
         BALR  14,15
         B     @ret_lab_41
         DS    0D
@lit_41_24  DC A(zifini2)
@FRAMESIZE_41  DC F'128'
* ***   }
@ret_lab_41 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifini"
*      (FUNCTION #41)
*
@AUTO#zifini DSECT
         DS    XL112
*
@ZLIB07  CSECT
*
*
*
ziflate  #PROLOG CINDEX=9,BASER=12,FRAME=144,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
* ***     int r;
* ***     uInt b;
* ***
* ***   if (z == 0 || z->state == 0 || z->next_in == 0)
         L     2,0(0,1)    ; z
         LA    3,0(0,0)
         CR    2,3
         BE    @@gen_label27
         LA    2,28(0,2)   ; offset of state in z_stream_s
         L     3,0(0,2)
         LA    2,0(0,0)
         CR    3,2
         BE    @@gen_label27
@@gen_label26 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         L     4,0(0,3)
         LA    5,0(0,0)
         CR    4,5
         BNE   @L11
@@gen_label27 DS 0H
* ***       return (-2);
         L     15,@lit_9_26
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
         DS    0D
@FRAMESIZE_9  DC F'144'
@lit_region_diff_9_1_2  DC A(@REGION_9_2-@REGION_9_1)
@lit_9_26  DC F'-2' 0xfffffffe
@lit_9_27  DC F'4' 0x00000004
@lit_9_28  DC F'-5' 0xfffffffb
@lit_9_33  DC F'8' 0x00000008
@lit_9_32  DC F'15' 0x0000000f
@lit_9_31  DC F'0' 0x00000000
@lit_9_30  DC F'1' 0x00000001
@lit_9_34 DC XL8'A495929596A69540' unknown.
         DC XL8'839694979985A2A2' compress
         DC XL8'899695409485A388' ion.meth
         DC XL3'968400' od.
         DC    X'00'
@lit_9_36 DC XL8'8995A58193898440' invalid.
         DC XL8'A689958496A640A2' window.s
         DC XL4'89A98500' ize.
@lit_9_40 DC XL8'8995839699998583' incorrec
         DC XL8'A340888581848599' t.header
         DC XL7'40838885839200' .check.
         DC    X'00'
@lit_9_49 DC XL8'9585858440848983' need.dic
         DC XL8'A38996958199A800' tionary.
@lit_9_52  DC F'-3' 0xfffffffd
@lit_9_51  DC A(ifblocks)
@lit_9_54  DC A(ifbrset)
* ***     f = f == 4 ? (-5) : 0;
@L11     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         C     3,@lit_9_27
         BNE   @@gen_label30
         L     4,@lit_9_28
         B     @@gen_label31
@@gen_label30 DS 0H
         LA    2,0(0,0)
         LR    4,2
@@gen_label31 DS 0H
         L     2,80(0,13)
         ST    4,4(0,2)    ; f
* ***     r = (-5);
         L     3,@lit_9_28
         ST    3,120(0,13) ; r
* ***     while (1) switch (z->state->mode)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***     {
* ***       case METHOD:
* ***         {if(z->avail_in==0)return r;r=f;}
@L18     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L19
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L19     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         if (((z->state->sub.method = (z->avail_in--,z->total_in+\
* +,*z->next_in++)) & 0xf) != 8)
         L     4,0(0,2)    ; z
         LA    4,4(0,4)    ; offset of avail_in in z_stream_s
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_9_30
         ST    3,0(0,4)
         L     3,0(0,2)    ; z
         LR    4,3
         L     5,0(0,3)
         LR    6,5
         LA    6,1(0,6)
         ST    6,0(0,4)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         IC    3,0(0,5)
         ICM   3,B'1110',@lit_9_31
         ST    3,0(0,4)    ; offset of sub in internal_state
         N     3,@lit_9_32
         CL    3,@lit_9_33
         BE    @L20
* ***         {
* ***           z->state->mode = BAD;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,13(0,0)
         ST    3,0(0,4)
* ***           z->msg = (char*)"unknown compression method";
         L     3,0(0,2)    ; z
         LA    3,24(0,3)   ; offset of msg in z_stream_s
         LA    4,@lit_9_34
         ST    4,0(0,3)    ; offset of msg in z_stream_s
* ***           z->state->sub.marker = 5;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    3,5(0,0)
         ST    3,0(0,4)    ; offset of sub in internal_state
* ***           break;
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***         }
* ***         if ((z->state->sub.method >> 4) + 8 > z->state->wbits)
@L20     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         L     3,0(0,4)
         SRL   3,4(0)
         AL    3,@lit_9_33
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,16(0,5)   ; offset of wbits in internal_state
         L     4,0(0,5)
         CLR   3,4
         BNH   @L21
* ***         {
* ***           z->state->mode = BAD;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,13(0,0)
         ST    3,0(0,4)
* ***           z->msg = (char*)"invalid window size";
         L     3,0(0,2)    ; z
         LA    3,24(0,3)   ; offset of msg in z_stream_s
         LA    4,@lit_9_36
         ST    4,0(0,3)    ; offset of msg in z_stream_s
* ***           z->state->sub.marker = 5;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    3,5(0,0)
         ST    3,0(0,4)    ; offset of sub in internal_state
* ***           break;
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***         }
* ***         z->state->mode = FLAG;
@L21     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,1(0,0)
         ST    3,0(0,4)
* ***       case FLAG:
* ***         {if(z->avail_in==0)return r;r=f;}
@L22     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L23
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L23     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         b = (z->avail_in--,z->total_in++,*z->next_in++);
         L     4,0(0,2)    ; z
         LA    4,4(0,4)    ; offset of avail_in in z_stream_s
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_9_30
         ST    3,0(0,4)
         L     3,0(0,2)    ; z
         LR    4,3
         L     5,0(0,3)
         LR    6,5
         LA    6,1(0,6)
         ST    6,0(0,4)
         IC    3,0(0,5)
         ICM   3,B'1110',@lit_9_31
         ST    3,124(0,13) ; b
* ***         if (((z->state->sub.method << 8) + b) % 31)
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         L     4,0(0,5)
         SLL   4,8(0)
         AL    4,124(0,13) ; b
         LA    5,31(0,0)
         LR    11,4
         CLR   5,11
         LR    10,11
         BH    @@gen_label36
         SR    10,5
         LTR   5,5
         BM    @@gen_label36
         C     5,@lit_9_30 ; #1
         LA    10,0(0,0)
         BE    @@gen_label36
         DR    10,5
@@gen_label36 DS 0H
         LTR   10,10
         BZ    @L24
* ***         {
* ***           z->state->mode = BAD;
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,13(0,0)
         ST    3,0(0,4)
* ***           z->msg = (char*)"incorrect header check";
         L     3,0(0,2)    ; z
         LA    3,24(0,3)   ; offset of msg in z_stream_s
         LA    4,@lit_9_40
         ST    4,0(0,3)    ; offset of msg in z_stream_s
* ***           z->state->sub.marker = 5;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    3,5(0,0)
         ST    3,0(0,4)    ; offset of sub in internal_state
* ***           break;
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***         }
* ***         ;
@L24     DS    0H
* ***         if (!(b & 0x20))
         LA    2,32(0,0)
         N     2,124(0,13)
         LTR   2,2
         BNZ   @L25
* ***         {
* ***           z->state->mode = BLOCKS;
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,7(0,0)
         ST    3,0(0,4)
* ***           break;
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***         }
* ***         z->state->mode = DICT4;
@L25     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,2(0,0)
         ST    3,0(0,4)
* ***       case DICT4:
* ***         {if(z->avail_in==0)return r;r=f;}
@L26     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L27
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L27     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need = (uLong)(z->avail_in--,z->tota\
* l_in++,*z->next_in++) << 24;
         L     4,0(0,2)    ; z
         LA    4,4(0,4)    ; offset of avail_in in z_stream_s
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_9_30
         ST    3,0(0,4)
         L     3,0(0,2)    ; z
         LR    4,3
         L     5,0(0,3)
         LR    6,5
         LA    6,1(0,6)
         ST    6,0(0,4)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    4,4(0,4)    ; offset of need in 0000002
         IC    3,0(0,5)
         ICM   3,B'1110',@lit_9_31
         SLL   3,24(0)
         ST    3,0(0,4)    ; offset of need in 0000002
* ***         z->state->mode = DICT3;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,3(0,0)
         ST    3,0(0,4)
* ***       case DICT3:
* ***         {if(z->avail_in==0)return r;r=f;}
@L28     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L29
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L29     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need += (uLong)(z->avail_in--,z->tot\
* al_in++,*z->next_in++) << 16;
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         LR    4,5
         L     6,0(0,2)    ; z
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,8
         BCTR  6,0
         ST    6,0(0,7)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    6,3
         L     7,0(0,3)
         LR    3,7
         AL    3,@lit_9_30
         ST    3,0(0,6)
         L     3,0(0,2)    ; z
         LR    6,3
         L     7,0(0,3)
         LR    8,7
         LA    8,1(0,8)
         ST    8,0(0,6)
         L     3,0(0,5)
         IC    5,0(0,7)
         ICM   5,B'1110',@lit_9_31
         SLL   5,16(0)
         ALR   3,5
         ST    3,0(0,4)
* ***         z->state->mode = DICT2;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,4(0,0)
         ST    3,0(0,4)
* ***       case DICT2:
* ***         {if(z->avail_in==0)return r;r=f;}
@L30     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L31
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L31     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need += (uLong)(z->avail_in--,z->tot\
* al_in++,*z->next_in++) << 8;
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         LR    4,5
         L     6,0(0,2)    ; z
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,8
         BCTR  6,0
         ST    6,0(0,7)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    6,3
         L     7,0(0,3)
         LR    3,7
         AL    3,@lit_9_30
         ST    3,0(0,6)
         L     3,0(0,2)    ; z
         LR    6,3
         L     7,0(0,3)
         LR    8,7
         LA    8,1(0,8)
         ST    8,0(0,6)
         L     3,0(0,5)
         IC    5,0(0,7)
         ICM   5,B'1110',@lit_9_31
         SLL   5,8(0)
         ALR   3,5
         ST    3,0(0,4)
* ***         z->state->mode = DICT1;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,5(0,0)
         ST    3,0(0,4)
* ***       case DICT1:
* ***         {if(z->avail_in==0)return r;r=f;}
@L32     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L33
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L33     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need += (uLong)(z->avail_in--,z->tot\
* al_in++,*z->next_in++);
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         LR    4,5
         L     6,0(0,2)    ; z
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,8
         BCTR  6,0
         ST    6,0(0,7)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    6,3
         L     7,0(0,3)
         LR    3,7
         AL    3,@lit_9_30
         ST    3,0(0,6)
         L     3,0(0,2)    ; z
         LR    6,3
         L     7,0(0,3)
         LR    8,7
         LA    8,1(0,8)
         ST    8,0(0,6)
         L     3,0(0,5)
         IC    5,0(0,7)
         ICM   5,B'1110',@lit_9_31
         ALR   3,5
         ST    3,0(0,4)
* ***         z->adler = z->state->sub.check.need;
         L     3,0(0,2)    ; z
         LA    3,48(0,3)   ; offset of adler in z_stream_s
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of adler in z_stream_s
* ***         z->state->mode = DICT0;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,6(0,0)
         ST    3,0(0,4)
* ***         return 2;
         LA    15,2(0,0)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
* ***       case DICT0:
* ***         z->state->mode = BAD;
@L34     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,13(0,0)
         ST    3,0(0,4)
* ***         z->msg = (char*)"need dictionary";
         L     3,0(0,2)    ; z
         LA    3,24(0,3)   ; offset of msg in z_stream_s
         LA    4,@lit_9_49
         ST    4,0(0,3)    ; offset of msg in z_stream_s
* ***         z->state->sub.marker = 0;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    3,0(0,0)
         ST    3,0(0,4)    ; offset of sub in internal_state
* ***         return (-2);
         L     15,@lit_9_26
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
* ***       case BLOCKS:
* ***         r = ifblocks(z->state->blocks, z, r);
@L35     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of blocks in internal_state
         L     3,0(0,4)
         L     4,0(0,2)    ; z
         STM   3,4,128(13)
         MVC   136(4,13),120(13)
         LA    1,128(0,13)
         L     15,@lit_9_51 ; ifblocks
         BALR  14,15
         ST    15,120(0,13) ; r
* ***         if (r == (-3))
         C     15,@lit_9_52
         BNE   @L36
* ***         {
* ***           z->state->mode = BAD;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,13(0,0)
         ST    3,0(0,4)
* ***           z->state->sub.marker = 0;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    3,0(0,0)
         ST    3,0(0,4)    ; offset of sub in internal_state
* ***           break;
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***         }
* ***         if (r == 0)
@L36     DS    0H
         L     2,120(0,13) ; r
         LTR   2,2
         BNE   @L37
* ***           r = f;
         L     3,80(0,13)
         L     4,4(0,3)    ; f
         ST    4,120(0,13) ; r
* ***         if (r != 1)
@L37     DS    0H
         L     2,120(0,13) ; r
         C     2,@lit_9_30
         BE    @L38
* ***           return r;
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
* ***         r = f;
@L38     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         ifbrset(z->state->blocks, z, &z->state->sub.check.was);
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,20(0,5)   ; offset of blocks in internal_state
         L     4,0(0,5)
         L     5,0(0,2)    ; z
         LA    6,28(0,5)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,4(0,7)    ; offset of sub in internal_state
         STM   4,5,128(13)
         ST    7,136(0,13)
         LA    1,128(0,13)
         L     15,@lit_9_54 ; ifbrset
         BALR  14,15
* ***         if (z->state->nowrap)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,12(0,4)   ; offset of nowrap in internal_state
         L     3,0(0,4)
         LTR   3,3
         BZ    @L39
* ***         {
* ***           z->state->mode = DONE;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,12(0,0)
         ST    3,0(0,4)
* ***           break;
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L16
         DROP  12
         USING @REGION_9_1,12
* ***         }
* ***         z->state->mode = CHECK4;
@L39     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,8(0,0)
         ST    3,0(0,4)
* ***       case CHECK4:
* ***         {if(z->avail_in==0)return r;r=f;}
@L40     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L41
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L41     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need = (uLong)(z->avail_in--,z->tota\
* l_in++,*z->next_in++) << 24;
         L     4,0(0,2)    ; z
         LA    4,4(0,4)    ; offset of avail_in in z_stream_s
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_9_30
         ST    3,0(0,4)
         L     3,0(0,2)    ; z
         LR    4,3
         L     5,0(0,3)
         LR    6,5
         LA    6,1(0,6)
         ST    6,0(0,4)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    4,4(0,4)    ; offset of need in 0000002
         IC    3,0(0,5)
         ICM   3,B'1110',@lit_9_31
         SLL   3,24(0)
         ST    3,0(0,4)    ; offset of need in 0000002
* ***         z->state->mode = CHECK3;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,9(0,0)
         ST    3,0(0,4)
* ***       case CHECK3:
* ***         {if(z->avail_in==0)return r;r=f;}
@L42     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L43
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@L43     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need += (uLong)(z->avail_in--,z->tot\
* al_in++,*z->next_in++) << 16;
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         LR    4,5
         L     6,0(0,2)    ; z
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,8
         BCTR  6,0
         ST    6,0(0,7)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    6,3
         L     7,0(0,3)
         LR    3,7
         AL    3,@lit_9_30
         ST    3,0(0,6)
         L     3,0(0,2)    ; z
         LR    6,3
         L     7,0(0,3)
         LR    8,7
         LA    8,1(0,8)
         ST    8,0(0,6)
         L     3,0(0,5)
         IC    5,0(0,7)
         ICM   5,B'1110',@lit_9_31
         SLL   5,16(0)
         ALR   3,5
         ST    3,0(0,4)
* ***         z->state->mode = CHECK2;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,10(0,0)
         ST    3,0(0,4)
* ***       case CHECK2:
* ***         {if(z->avail_in==0)return r;r=f;}
@L44     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BE    *+12  Around region break
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @L45
         DROP  12
         USING @REGION_9_1,12
         L     15,120(0,13)
         AL    12,@lit_region_diff_9_1_2
         DROP  12
         USING @REGION_9_2,12
         B     @ret_lab_9
         DROP  12
         USING @REGION_9_1,12
@REGION_9_2 DS 0H
         DROP  12
         USING @REGION_9_2,12
@L45     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need += (uLong)(z->avail_in--,z->tot\
* al_in++,*z->next_in++) << 8;
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         LR    4,5
         L     6,0(0,2)    ; z
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,8
         BCTR  6,0
         ST    6,0(0,7)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    6,3
         L     7,0(0,3)
         LR    3,7
         AL    3,@lit_9_59
         ST    3,0(0,6)
         L     3,0(0,2)    ; z
         LR    6,3
         L     7,0(0,3)
         LR    8,7
         LA    8,1(0,8)
         ST    8,0(0,6)
         L     3,0(0,5)
         IC    5,0(0,7)
         ICM   5,B'1110',@lit_9_60
         SLL   5,8(0)
         ALR   3,5
         ST    3,0(0,4)
* ***         z->state->mode = CHECK1;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,11(0,0)
         ST    3,0(0,4)
* ***       case CHECK1:
* ***         {if(z->avail_in==0)return r;r=f;}
@L46     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,0(0,3)
         LTR   4,4
         BNE   @L47
         L     15,120(0,13)
         B     @ret_lab_9
         DS    0D
@lit_9_60  DC F'0' 0x00000000
@lit_9_59  DC F'1' 0x00000001
@lit_9_63 DC XL8'8995839699998583' incorrec
         DC XL8'A3408481A3814083' t.data.c
         DC XL5'8885839200' heck.
         DC    X'00'
@lit_9_64  DC F'-3' 0xfffffffd
@lit_9_65  DC F'-2' 0xfffffffe
@lit_9_67  DC F'13' 0x0000000d
@lit_region_diff_9_2_1  DC A(@REGION_9_2-@REGION_9_1)
@L47     DS    0H
         L     2,80(0,13)
         L     3,4(0,2)    ; f
         ST    3,120(0,13) ; r
* ***         z->state->sub.check.need += (uLong)(z->avail_in--,z->tot\
* al_in++,*z->next_in++);
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         LR    4,5
         L     6,0(0,2)    ; z
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,8
         BCTR  6,0
         ST    6,0(0,7)
         L     3,0(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    6,3
         L     7,0(0,3)
         LR    3,7
         AL    3,@lit_9_59
         ST    3,0(0,6)
         L     3,0(0,2)    ; z
         LR    6,3
         L     7,0(0,3)
         LR    8,7
         LA    8,1(0,8)
         ST    8,0(0,6)
         L     3,0(0,5)
         IC    5,0(0,7)
         ICM   5,B'1110',@lit_9_60
         ALR   3,5
         ST    3,0(0,4)
* ***
* ***   if (z->state->sub.check.was != z->state->sub.check.need)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         L     3,0(0,4)
         L     4,0(0,2)    ; z
         LA    4,28(0,4)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    5,4(0,5)    ; offset of sub in internal_state
         LA    5,4(0,5)    ; offset of need in 0000002
         L     4,0(0,5)
         CLR   3,4
         BE    @L48
* ***         {
* ***           z->state->mode = BAD;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,13(0,0)
         ST    3,0(0,4)
* ***           z->msg = (char*)"incorrect data check";
         L     3,0(0,2)    ; z
         LA    3,24(0,3)   ; offset of msg in z_stream_s
         LA    4,@lit_9_63
         ST    4,0(0,3)    ; offset of msg in z_stream_s
* ***           z->state->sub.marker = 5;
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of sub in internal_state
         LA    3,5(0,0)
         ST    3,0(0,4)    ; offset of sub in internal_state
* ***           break;
         B     @L16
* ***         }
* ***         ;
@L48     DS    0H
* ***         z->state->mode = DONE;
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    3,12(0,0)
         ST    3,0(0,4)
* ***       case DONE:
* ***         return 1;
@L49     DS    0H
         LA    15,1(0,0)
         B     @ret_lab_9
* ***       case BAD:
* ***         return (-3);
@L50     DS    0H
         L     15,@lit_9_64
         B     @ret_lab_9
* ***       default:
* ***         return (-2);
@L51     DS    0H
         L     15,@lit_9_65
         B     @ret_lab_9
* ***     }
* ***
* ***
* ***   # 275
* ***   }
@L16     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; z
         LA    3,28(0,3)   ; offset of state in z_stream_s
         L     4,0(0,3)
         L     3,0(0,4)
         C     3,@lit_9_60
         BL    @L51
         C     3,@lit_9_67
         BH    @L51
         S     3,@lit_9_60
         SLL   3,3(0)
         LA    4,@@gen_label52
         B     0(4,3)
@@gen_label52 DS    0H
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L18
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L22
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L26
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L28
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L30
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L32
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L34
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L35
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L40
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L42
         DROP  12
         USING @REGION_9_2,12
         SL    12,@lit_region_diff_9_2_1
         DROP  12
         USING @REGION_9_1,12
         B     @L44
         DROP  12
         USING @REGION_9_2,12
         B     @L46
         DC    XL4'00000000'
         B     @L49
         DC    XL4'00000000'
         B     @L50
         DC    XL4'00000000'
@ret_lab_9 DS  0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ziflate"
*      (FUNCTION #9)
*
@AUTO#ziflate DSECT
         DS    XL120
ziflate#r#0 DS 1F          ; r
ziflate#b#0 DS 1F          ; b
*
@ZLIB07  CSECT
*
*
*
zifsetd  #PROLOG CINDEX=15,BASER=12,FRAME=128,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,8(0,1)
         LR    5,2
         L     3,4(0,1)
         LR    4,3
         L     6,0(0,1)
         LR    2,6
* ***     uInt length = dictLength;
         LR    7,5         ; length
         LR    3,7         ; length
* ***
* ***   if (z == 0 || z->state == 0 || z->state->mode != DICT0)
         LR    7,2         ; #0
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label56
         LA    7,28(0,2)   ; offset of state in z_stream_s
         L     8,0(0,7)
         LA    7,0(0,0)
         CR    8,7
         BE    @@gen_label56
@@gen_label55 DS 0H
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         L     6,0(0,7)
         C     6,@lit_15_103
         BE    @L52
@@gen_label56 DS 0H
* ***       return (-2);
         L     15,@lit_15_104
         B     @ret_lab_15
         DS    0D
@FRAMESIZE_15  DC F'128'
@lit_15_103  DC F'6' 0x00000006
@lit_15_104  DC F'-2' 0xfffffffe
@lit_15_105  DC A(zadler32)
@lit_15_106  DC F'-3' 0xfffffffd
@lit_15_107  DC A(ifsd)
* ***
* ***   if (zadler32(1L, dictionary, dictLength) != z->adler) return (\
* -3);
@L52     DS    0H
         LA    6,1(0,0)
         LR    7,4
         LR    8,5
         STM   6,8,112(13)
         LA    1,112(0,13)
         L     15,@lit_15_105 ; zadler32
         BALR  14,15
         LA    6,48(0,2)   ; offset of adler in z_stream_s
         L     7,0(0,6)
         CLR   15,7
         BE    @L53
         L     15,@lit_15_106
         B     @ret_lab_15
* ***     z->adler = 1L;
@L53     DS    0H
         LA    6,48(0,2)   ; offset of adler in z_stream_s
         LA    7,1(0,0)
         ST    7,0(0,6)    ; offset of adler in z_stream_s
* ***
* ***   if (length >= ((uInt)1<<z->state->wbits))
         LR    6,3
         LA    7,1(0,0)
         LA    8,28(0,2)   ; offset of state in z_stream_s
         L     9,0(0,8)
         LA    9,16(0,9)   ; offset of wbits in internal_state
         L     8,0(0,9)
         SLL   7,0(8)
         CLR   6,7
         BL    @L54
* ***     {
* ***       length = (1<<z->state->wbits)-1;
         LA    6,1(0,0)
         LA    7,28(0,2)   ; offset of state in z_stream_s
         L     8,0(0,7)
         LA    8,16(0,8)   ; offset of wbits in internal_state
         L     7,0(0,8)
         SLL   6,0(7)
         BCTR  6,0
         LR    3,6         ; length
* ***       dictionary += dictLength - length;
         LR    6,5         ; length
         LR    7,3
         SLR   6,7
         LA    6,0(4,6)
         LR    4,6         ; dictionary
* ***     }
* ***     ifsd(z->state->blocks, dictionary, length);
@L54     DS    0H
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,20(0,7)   ; offset of blocks in internal_state
         L     6,0(0,7)
         LR    7,4
         LR    8,3
         STM   6,8,112(13)
         LA    1,112(0,13)
         L     15,@lit_15_107 ; ifsd
         BALR  14,15
* ***     z->state->mode = BLOCKS;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    6,7(0,0)
         ST    6,0(0,7)
* ***     return 0;
         LA    15,0(0,0)
         B     @ret_lab_15
* ***   }
@ret_lab_15 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifsetd"
*      (FUNCTION #15)
*
@AUTO#zifsetd DSECT
         DS    XL104
zifsetd#length#0 DS 1F     ; length
*
@ZLIB07  CSECT
*
*
*
zifsync  #PROLOG CINDEX=16,BASER=12,FRAME=144,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     6,0(0,1)
         LR    2,6
* ***     uInt n;
* ***     Bytef *p;
* ***     uInt m;
* ***     uLong r, w;
* ***
* ***
* ***   if (z == 0 || z->state == 0)
         LR    7,2         ; #0
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label60
         LA    7,28(0,2)   ; offset of state in z_stream_s
         L     8,0(0,7)
         LA    7,0(0,0)
         CR    8,7
         BNE   @L55
@@gen_label60 DS 0H
* ***       return (-2);
         L     15,@lit_16_109
         B     @ret_lab_16
         DS    0D
@FRAMESIZE_16  DC F'144'
@lit_16_109  DC F'-2' 0xfffffffe
@lit_16_110  DC F'13' 0x0000000d
@lit_16_111  DC F'-5' 0xfffffffb
@lit_16_112  DC A(@DATA)
@lit_16_113  DC F'1' 0x00000001
@lit_16_114  DC F'4' 0x00000004
@lit_16_116  DC F'-3' 0xfffffffd
@lit_16_117  DC A(zifreset)
* ***     if (z->state->mode != BAD)
@L55     DS    0H
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         L     6,0(0,7)
         C     6,@lit_16_110
         BE    @L56
* ***     {
* ***       z->state->mode = BAD;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    6,13(0,0)
         ST    6,0(0,7)
* ***       z->state->sub.marker = 0;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,4(0,7)    ; offset of sub in internal_state
         LA    6,0(0,0)
         ST    6,0(0,7)    ; offset of sub in internal_state
* ***     }
* ***     if ((n = z->avail_in) == 0)
@L56     DS    0H
         LA    6,4(0,2)    ; offset of avail_in in z_stream_s
         L     7,0(0,6)
         LR    5,7         ; n
         LTR   7,7
         BNE   @L57
* ***       return (-5);
         L     15,@lit_16_111
         B     @ret_lab_16
* ***     p = z->next_in;
@L57     DS    0H
         L     6,0(0,2)
         LR    4,6         ; p
* ***     m = z->state->sub.marker;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,4(0,7)    ; offset of sub in internal_state
         L     6,0(0,7)
         LR    3,6         ; m
* ***
* ***
* ***   while (n && m < 4)
         B     @L59
@L58     DS    0H
* ***       static const Byte markÝ4¨ = {0, 0, 0xff, 0xff};
* ***       if (*p == markÝm¨)
         L     6,@lit_16_112
         LR    7,3
         LA    6,0(6,7)
         CLC   0(1,4),0(6)
         BNE   @L62
* ***         m++;
         LR    6,3
         AL    6,@lit_16_113
         LR    3,6         ; m
* ***       else if (*p)
         B     @L63
@L62     DS    0H
         TM    0(4),255
         BZ    @L64
* ***         m = 0;
         LA    6,0(0,0)
         LR    3,6         ; m
* ***       else
* ***         m = 4 - m;
         B     @L63
@L64     DS    0H
         LA    6,4(0,0)
         SLR   6,3
         LR    3,6         ; m
* ***       p++, n--;
@L63     DS    0H
         LA    4,1(0,4)
         LR    6,5
         BCTR  6,0
         LR    5,6         ; n
* ***     }
@L59     DS    0H
         LR    6,5
         LTR   6,6
         BZ    @@gen_label66
         LR    6,3
         CL    6,@lit_16_114
         BL    @L58
@@gen_label66 DS 0H
* ***     {
* ***
* ***
* ***   z->total_in += p - z->next_in;
         LA    6,8(0,2)    ; offset of total_in in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,4         ; z
         L     9,0(0,2)
         SLR   6,9
         ALR   8,6
         ST    8,0(0,7)
* ***     z->next_in = p;
         LR    6,2         ; p
         LR    7,4
         ST    7,0(0,6)    ; z
* ***     z->avail_in = n;
         LA    6,4(0,2)    ; offset of avail_in in z_stream_s
         LR    7,5
         ST    7,0(0,6)    ; offset of avail_in in z_stream_s
* ***     z->state->sub.marker = m;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    7,4(0,7)    ; offset of sub in internal_state
         LR    6,3
         ST    6,0(0,7)    ; offset of sub in internal_state
* ***
* ***
* ***   if (m != 4)
         LR    6,3
         CL    6,@lit_16_114
         BE    @L66
* ***       return (-3);
         L     15,@lit_16_116
         B     @ret_lab_16
* ***     r = z->total_in; w = z->total_out;
@L66     DS    0H
         LA    6,8(0,2)    ; offset of total_in in z_stream_s
         L     7,0(0,6)
         ST    7,124(0,13) ; r
         LA    6,20(0,2)   ; offset of total_out in z_stream_s
         L     8,0(0,6)
         ST    8,128(0,13) ; w
* ***     zifreset(z);
         LR    6,2
         ST    6,136(0,13)
         LA    1,136(0,13)
         L     15,@lit_16_117 ; zifreset
         BALR  14,15
* ***     z->total_in = r; z->total_out = w;
         LA    6,8(0,2)    ; offset of total_in in z_stream_s
         L     7,124(0,13) ; r
         ST    7,0(0,6)    ; offset of total_in in z_stream_s
         LA    6,20(0,2)   ; offset of total_out in z_stream_s
         L     7,128(0,13) ; w
         ST    7,0(0,6)    ; offset of total_out in z_stream_s
* ***     z->state->mode = BLOCKS;
         LA    6,28(0,2)   ; offset of state in z_stream_s
         L     7,0(0,6)
         LA    6,7(0,0)
         ST    6,0(0,7)
* ***     return 0;
         LA    15,0(0,0)
         B     @ret_lab_16
* ***   }
@ret_lab_16 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifsync"
*      (FUNCTION #16)
*
@AUTO#zifsync DSECT
         DS    XL112
zifsync#n#0 DS 1F          ; n
zifsync#p#0 DS 1A          ; p
zifsync#m#0 DS 1F          ; m
zifsync#r#0 DS 1F          ; r
zifsync#w#0 DS 1F          ; w
*
@ZLIB07  CSECT
*
*
*
zifsyncp #PROLOG CINDEX=45,BASER=12,FRAME=112,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***     if (z == 0 || z->state == 0 || z->state->blocks == 0)
         LR    4,2         ; #0
         LA    5,0(0,0)
         CR    4,5
         BE    @@gen_label71
         LA    4,28(0,2)   ; offset of state in z_stream_s
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @@gen_label71
@@gen_label70 DS 0H
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of blocks in internal_state
         L     3,0(0,4)
         LA    4,0(0,0)
         CR    3,4
         BNE   @L67
@@gen_label71 DS 0H
* ***       return (-2);
         L     15,@lit_45_119
         B     @ret_lab_45
         DS    0D
@FRAMESIZE_45  DC F'112'
@lit_45_119  DC F'-2' 0xfffffffe
@lit_45_120  DC A(ifbsyncp)
* ***     return ifbsyncp(z->state->blocks);
@L67     DS    0H
         LA    3,28(0,2)   ; offset of state in z_stream_s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of blocks in internal_state
         L     3,0(0,4)
         ST    3,104(0,13)
         LA    1,104(0,13)
         L     15,@lit_45_120 ; ifbsyncp
         BALR  14,15
         B     @ret_lab_45
* ***   }
@ret_lab_45 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zifsyncp"
*      (FUNCTION #45)
*
@AUTO#zifsyncp DSECT
         DS    XL104
*
@ZLIB07  CSECT
*
*  Non-Re-Entrant Data Section
*
@ZLIB07 CSECT
@DATA    DS 0D
         DC    2X'00'
         DC    X'FFFF'                             ..
*
         END

*
*  Compiled by DCC Version 1.31.00
*           on Wed Jan 10 16:22:30 2001
*

*
*
*
*    Code Section
*
@ZLIB01 CSECT
@ZLIB01 AMODE ANY
@ZLIB01 RMODE ANY
         EXTRN zdflate
         EXTRN zdfend
         EXTRN zdfini
*
*
*
zcmp2    #PROLOG CINDEX=19,BASER=12,FRAME=192,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    5,2
         L     4,16(0,1)
         L     6,4(0,1)
         LR    3,6
* ***       z_stream stream;
* ***       int err;
* ***
* ***   stream.next_in = (Bytef*)source;
         LA    7,112(0,13) ; &stream
         L     8,8(0,1)    ; source
         ST    8,0(0,7)
* ***       stream.avail_in = (uInt)sourceLen;
         LA    6,112(0,13) ; &stream
         LA    6,4(0,6)    ; offset of avail_in in z_stream_s
         L     7,12(0,1)   ; sourceLen
         ST    7,0(0,6)    ; offset of avail_in in z_stream_s
* ***
* ***
* ***
* ***       # 37
* ***   stream.next_out = dest;
         LA    6,112(0,13) ; &stream
         LA    6,12(0,6)   ; offset of next_out in z_stream_s
         LR    7,5
         ST    7,0(0,6)    ; offset of next_out in z_stream_s
* ***       stream.avail_out = (uInt)*destLen;
         LA    6,112(0,13) ; &stream
         LA    6,16(0,6)   ; offset of avail_out in z_stream_s
         L     7,0(0,3)
         ST    7,0(0,6)    ; offset of avail_out in z_stream_s
* ***       if ((uLong)stream.avail_out != *destLen) return (-5);
         LA    6,112(0,13) ; &stream
         LA    6,16(0,6)   ; offset of avail_out in z_stream_s
         L     7,0(0,6)
         L     6,0(0,3)
         CLR   7,6
         BE    @L0
         L     15,@lit_19_1
         B     @ret_lab_19
         DS    0D
@FRAMESIZE_19  DC F'192'
@lit_19_1  DC F'-5' 0xfffffffb
@lit_19_2 DC XL6'F14BF14BF300' 1.1.3.
@lit_19_3  DC A(zdfini)
@lit_19_5  DC F'1' 0x00000001
@lit_19_4  DC A(zdflate)
@lit_19_6  DC A(zdfend)
* ***
* ***   stream.zalloc = (alloc_func)0;
@L0      DS    0H
         LA    6,112(0,13) ; &stream
         LA    6,32(0,6)   ; offset of zalloc in z_stream_s
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of zalloc in z_stream_s
* ***       stream.zfree = (free_func)0;
         LA    6,112(0,13) ; &stream
         LA    6,36(0,6)   ; offset of zfree in z_stream_s
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of zfree in z_stream_s
* ***       stream.opaque = (voidpf)0;
         LA    6,112(0,13) ; &stream
         LA    6,40(0,6)   ; offset of opaque in z_stream_s
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of opaque in z_stream_s
* ***
* ***   err = zdfini((&stream), (level), "1.1.3", sizeof(z_stream));
         LA    6,112(0,13) ; &stream
         LR    7,4
         LA    8,@lit_19_2
         LA    9,56(0,0)
         STM   6,9,176(13)
         LA    1,176(0,13)
         L     15,@lit_19_3 ; zdfini
         BALR  14,15
         LR    2,15        ; err
* ***       if (err != 0) return err;
         LTR   2,2
         BE    @L1
         LR    15,2
         B     @ret_lab_19
* ***
* ***   err = zdflate(&stream, 4);
@L1      DS    0H
         LA    6,112(0,13) ; &stream
         LA    7,4(0,0)
         STM   6,7,176(13)
         LA    1,176(0,13)
         L     15,@lit_19_4 ; zdflate
         BALR  14,15
         LR    2,15        ; err
* ***       if (err != 1) {
         C     2,@lit_19_5
         BE    @L2
* ***           zdfend(&stream);
         LA    6,112(0,13) ; &stream
         ST    6,176(0,13)
         LA    1,176(0,13)
         L     15,@lit_19_6 ; zdfend
         BALR  14,15
* ***           return err == 0 ? (-5) : err;
         LTR   2,2
         BNE   @@gen_label4
         L     6,@lit_19_1
         B     @@gen_label5
@@gen_label4 DS 0H
         LR    6,2
@@gen_label5 DS 0H
         LR    15,6
         B     @ret_lab_19
* ***       }
* ***       *destLen = stream.total_out;
@L2      DS    0H
         LR    6,3         ; &stream
         LA    7,112(0,13) ; &stream
         LA    7,20(0,7)   ; offset of total_out in z_stream_s
         L     8,0(0,7)
         ST    8,0(0,6)    ; destLen
* ***
* ***   err = zdfend(&stream);
         LA    6,112(0,13) ; &stream
         ST    6,176(0,13)
         LA    1,176(0,13)
         L     15,@lit_19_6 ; zdfend
         BALR  14,15
         LR    2,15        ; err
* ***       return err;
         LR    15,2
         B     @ret_lab_19
* ***   }
@ret_lab_19 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zcmp2"
*      (FUNCTION #19)
*
@AUTO#zcmp2 DSECT
         DS    XL112
zcmp2#stream#0 DS 56XL1    ; stream
zcmp2#err#0 DS 1F          ; err
*
@ZLIB01  CSECT
*
*
*
zcmp     #PROLOG CINDEX=18,BASER=12,FRAME=136,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    5,2
         L     3,4(0,1)
         LR    4,3
         L     6,8(0,1)
         LR    3,6
         L     7,12(0,1)
         LR    2,7
* ***       return zcmp2(dest, destLen, source, sourceLen, (-1));
         LR    8,5
         LR    9,4
         LR    10,3
         LR    11,2
         L     0,@lit_18_10
         STM   8,11,112(13)
         ST    0,128(0,13)
         LA    1,112(0,13)
         L     15,@lit_18_11 ; zcmp2
         BALR  14,15
         B     @ret_lab_18
         DS    0D
@lit_18_11  DC A(zcmp2)
@lit_18_10  DC F'-1' 0xffffffff
@FRAMESIZE_18  DC F'136'
* ***   }
@ret_lab_18 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "zcmp"
*      (FUNCTION #18)
*
@AUTO#zcmp DSECT
         DS    XL112
*
@ZLIB01  CSECT
*
*  Non-Re-Entrant Data Section
*
@ZLIB01 CSECT
@DATA    DS 0D
*
         END

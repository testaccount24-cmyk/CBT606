         MACRO
&NAME    #PROLOG  &CINDEX=,&BASER=12,&FRAME=0,&ENTRY=YES,&CSECT=YES,   X
               &PROFILE=YES,&SAVE=(14,12),&MAIN=NO
.* --------------------------------------------------------------------
.* Declare global symbols
.* --------------------------------------------------------------------
         COPY     #GLOBAL
         GBLB     &GPROF
         GBLC     &$SPFR
         GBLC     &$SPSA
         GBLC     &$SPBR
         GBLB     &$SPPR
         GBLB     &$SPMA
         GBLA     &$SPCT
.* --------------------------------------------------------------------
.* Declare local symbols
.* --------------------------------------------------------------------
         LCLC     &$REGLBL
         LCLA     &I
.* --------------------------------------------------------------------
.* Bump count
.* --------------------------------------------------------------------
&$SPCT   SETA     &$SPCT+1
.* --------------------------------------------------------------------
.* Generate local label prefix - format: $NNNN
.* --------------------------------------------------------------------
&L       SETC     '$&$SPCT'
.* --------------------------------------------------------------------
.* Remember requested base register
.* --------------------------------------------------------------------
&$SPBR   SETC     '&BASER'
.* --------------------------------------------------------------------
.* Remember frame parameter
.* --------------------------------------------------------------------
&$SPFR   SETC     '&FRAME'
.* --------------------------------------------------------------------
.* Remember main setting
.* --------------------------------------------------------------------
&$SPMA   SETB     ('&MAIN' EQ 'YES')
.* --------------------------------------------------------------------
.* Remember profile setting
.* --------------------------------------------------------------------
&$SPPR   SETB     (&GPROF AND ('&PROFILE' EQ 'YES'))
.* --------------------------------------------------------------------
.* Generate entry
.* --------------------------------------------------------------------
         AIF      ('&CSECT' EQ 'NO').NCSECT
&NAME    CSECT                              Start control section
         AGO      .ENTRY
.NCSECT  ANOP
&NAME    DS       0D                        Entry label
.ENTRY   AIF      ('&ENTRY' EQ 'NO').NENTRY
         ENTRY    &NAME                     Declare entry point
.NENTRY  ANOP
.* --------------------------------------------------------------------
.* Generate region label for Systems/C generated code
.* --------------------------------------------------------------------
         AIF      ('&CINDEX' EQ '').NOCI
@REGION_&CINDEX._1 EQU *                    Start of region
.NOCI    ANOP
.* --------------------------------------------------------------------
.* Save registers (or not)
.* --------------------------------------------------------------------
&$SPSA   SETC     ''
         AIF      ('&SAVE' EQ 'NO').NSAVE
&$SPSA   SETC     '&SAVE'
         SAVE     &SAVE                     Save registers
.NSAVE   ANOP
.* --------------------------------------------------------------------
.* Load base register (or not)
.* --------------------------------------------------------------------
         AIF      (('&$SPBR' EQ '15') OR ('&$SPBR' EQ 'R15')).NBASE
         LR       &$SPBR,R15                Get base register
.NBASE   ANOP
         USING    &NAME,&$SPBR              Establish base
.* --------------------------------------------------------------------
.* Generate frame information
.* --------------------------------------------------------------------
         AIF      ('&$SPFR' EQ 'NO').NFRAME
         B        &L.$4                     Jump over length fields
         AIF      (D'$$STKLST).NDSTKL
         EXTRN    $$STKLST                  Need the stack list
.NDSTKL  ANOP
&L.$1    DC       A($$STKLST)               Ptr to stack list
&L.$1A   DC       A(&L.$FL)                 Needed frame length
&L.$2    DC       V($$GETSTK)               Ptr to stack expansion rtn
.* --------------------------------------------------------------------
.* Generate library init information
.* --------------------------------------------------------------------
         AIF      (NOT &$SPMA).NMAIN1
&L.$LI   DC       V($$LIBI)                 Ptr to library init rtn
.NMAIN1  ANOP
.* --------------------------------------------------------------------
.* Generate profiling information
.* --------------------------------------------------------------------
         AIF      (NOT &$SPPR).NOPROFD
&L.$PRP  DC       V($$PROFP)                Profile VCON
&L.$PR   DC       XL($PDLEN)'00'            Profile data
         ORG      &L.$PR+($PDNEXT-$PROFD)   Back up to next ptr
         DC       A(1)                      Initialize
         ORG      &L.$PR+($PDNAME-$PROFD)   Back up to next ptr
         DC       CL(L'$PDNAME)'&NAME'      Initialize
         ORG      ,                         Reset location ctr
         DS       0H
.NOPROFD ANOP
.* --------------------------------------------------------------------
.* Get new stack when needed
.* --------------------------------------------------------------------
&L.$3    L        R0,&L.$1A                 Get stack expansion rtn
         L        R12,&L.$2                 Get stack expansion rtn
         BR       R12                       Go get a new stack
.* --------------------------------------------------------------------
.* Get new stack when needed
.* --------------------------------------------------------------------
&L.$4    LM       R14,R15,&L.$1             Load stack ptr & needed len
         ICM      R14,B'1111',0(R14)        Get first node ptr
         BZ       &L.$3                     Zero, go get a new node
         L        R0,8(R14)                 Get stack used
         ALR      R15,R0                    Add to needed
         CL       R15,4(R14)                Enough left?
         BH       &L.$3                     No, go get a new stack
         ST       R15,8(R14)                Store new used value
         ALR      R14,R0                    Calc frame ptr
         ST       R14,8(R13)                Chain save areas
         ST       R13,4(R14)                   ...
         LR       R13,R14                   Load frame reg
         USING    &L.$FR,R13                Map frame
.* --------------------------------------------------------------------
.* Generate library init code
.* --------------------------------------------------------------------
         AIF      (NOT &$SPMA).NMAIN2
         L        R15,&L.$LI                Get library init ptr
         BALR     R14,R15                   Call it
         L        R1,4(R13)                 Get previous save area
         LM       R14,R1,12(R1)             Reload destroyed registers
.NMAIN2  ANOP
.* --------------------------------------------------------------------
.* Generate profiling code
.* --------------------------------------------------------------------
         AIF      (NOT &$SPPR).NOPROF
         LA       R1,&L.$PR                 Get ptr to profile parms
         L        R15,&L.$PRP               Get profile prolog ptr
         BALR     R14,R15                   Call it
         L        R1,4(R13)                 Get previous save area
         LM       R14,R1,12(R1)             Reload destroyed registers
.NOPROF  ANOP
.NFRAME  ANOP
         MEND

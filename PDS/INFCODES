*
*  Compiled by DCC Version 1.31.00
*           on Wed Jan 10 16:22:42 2001
*

*
*
*
*    Code Section
*
@ZLIB05 CSECT
@ZLIB05 AMODE ANY
@ZLIB05 RMODE ANY
         EXTRN ifmask
         EXTRN ifflush
         EXTRN iffast
*
*
*
ifcnew   #PROLOG CINDEX=89,BASER=12,FRAME=136,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,8(0,1)
         LR    5,2
         L     3,12(0,1)
         LR    4,3
         L     6,16(0,1)
         LR    3,6
* ***     inflate_codes_statef *c;
* ***
* ***   if ((c = (inflate_codes_statef *)
* ***          (*((z)->zalloc))((z)->opaque, (1), (sizeof(struct infla\
* te_codes_state)))) != 0)
         LA    7,40(0,3)   ; offset of opaque in z_stream_s
         L     8,0(0,7)
         LA    7,1(0,0)
         LA    9,28(0,0)
         ST    8,120(0,13)
         ST    7,124(0,13)
         ST    9,128(0,13)
         LA    7,32(0,3)   ; offset of zalloc in z_stream_s
         L     8,0(0,7)
         LA    1,120(0,13)
         L     7,72(0,13)
         LR    15,8
         BALR  14,15
         LR    2,15        ; c
         LA    6,0(0,0)
         CR    15,6
         BE    @L0
* ***     {
* ***       c->mode = START;
         LR    6,2         ; #0
         LA    8,0(0,0)
         ST    8,0(0,6)    ; c
* ***       c->lbits = (Byte)bl;
         LA    6,16(0,2)   ; offset of lbits in inflate_codes_state
         L     8,80(0,13)
         L     9,0(0,8)    ; bl
         STC   9,0(0,6)    ; offset of lbits in inflate_codes_state
* ***       c->dbits = (Byte)bd;
         LA    6,17(0,2)   ; offset of dbits in inflate_codes_state
         L     10,4(0,8)   ; bd
         STC   10,0(0,6)   ; offset of dbits in inflate_codes_state
* ***       c->ltree = tl;
         LA    6,20(0,2)   ; offset of ltree in inflate_codes_state
         LR    11,5
         ST    11,0(0,6)   ; offset of ltree in inflate_codes_state
* ***       c->dtree = td;
         LA    6,24(0,2)   ; offset of dtree in inflate_codes_state
         LR    9,4
         ST    9,0(0,6)    ; offset of dtree in inflate_codes_state
* ***       ;
* ***     }
* ***     return c;
@L0      DS    0H
         LR    6,2
         LR    15,6
         B     @ret_lab_89
         DS    0D
@FRAMESIZE_89  DC F'136'
* ***   }
@ret_lab_89 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifcnew"
*      (FUNCTION #89)
*
@AUTO#ifcnew DSECT
         DS    XL112
ifcnew#c#0 DS  1A          ; c
*
@ZLIB05  CSECT
*
*
*
ifcodes  #PROLOG CINDEX=90,BASER=12,FRAME=192,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
* ***     uInt j;
* ***     inflate_huft *t;
* ***     uInt e;
* ***     uLong b;
* ***     uInt k;
* ***     Bytef *p;
* ***     uInt n;
* ***     Bytef *q;
* ***     uInt m;
* ***     Bytef *f;
* ***     inflate_codes_statef *c = s->sub.decode.codes;
         L     2,0(0,1)    ; s
         LA    2,4(0,2)    ; offset of sub in inflate_blocks_state
         L     3,0(0,2)
         ST    3,160(0,13) ; c
* ***
* ***
* ***   {{p=z->next_in;n=z->avail_in;b=s->bitb;k=s->bitk;} {q=s->write\
* ;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}}
         L     2,4(0,1)    ; z
         L     4,0(0,2)
         ST    4,140(0,13) ; p
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     5,0(0,2)
         ST    5,144(0,13) ; n
         L     2,0(0,1)    ; s
         LA    2,32(0,2)   ; offset of bitb in inflate_blocks_state
         L     6,0(0,2)
         ST    6,132(0,13) ; b
         L     2,0(0,1)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     7,0(0,2)
         ST    7,136(0,13) ; k
         L     2,0(0,1)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     8,0(0,2)
         ST    8,148(0,13) ; q
         L     2,0(0,1)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     9,0(0,2)
         CR    8,9
         BNL   @@gen_label2
         L     2,0(0,1)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     9,0(0,2)
         SLR   9,8
         BCTR  9,0
         B     @@gen_label3
         DS    0D
@FRAMESIZE_90  DC F'192'
@lit_region_diff_90_1_2  DC A(@REGION_90_2-@REGION_90_1)
@lit_90_2  DC F'258' 0x00000102
@lit_90_3  DC F'10' 0x0000000a
@lit_90_6  DC A(iffast)
@lit_90_5  DC F'0' 0x00000000
@lit_90_7  DC F'1' 0x00000001
@lit_region_diff_90_1_3  DC A(@REGION_90_3-@REGION_90_1)
@lit_90_9  DC A(ifflush)
@lit_90_11  DC F'8' 0x00000008
@lit_90_12  DC A(ifmask)
@lit_90_14 DC XL8'8995A58193898440' invalid.
         DC XL8'9389A38599819361' literal.
         DC XL8'93859587A3884083' length.c
         DC XL4'96848500' ode.
@lit_90_15  DC F'-3' 0xfffffffd
@lit_90_27 DC XL8'8995A58193898440' invalid.
         DC XL8'8489A2A381958385' distance
         DC XL6'408396848500' .code.
@@gen_label2 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    9,4
@@gen_label3 DS 0H
         ST    9,152(0,13) ; m
* ***
* ***
* ***   while (1) switch (c->mode)
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***     {
* ***       case START:
* ***
* ***   if (m >= 258 && n >= 10)
@L7      DS    0H
         L     2,152(0,13) ; m
         CL    2,@lit_90_2
         BL    @L8
         L     3,144(0,13) ; n
         CL    3,@lit_90_3
         BL    @L8
@@gen_label5 DS 0H
* ***         {
* ***           {{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-\
* z->next_in;z->next_in=p;} {s->write=q;}}
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
* ***           r = iffast(c->lbits, c->dbits, c->ltree, c->dtree, s, \
* z);
         L     3,160(0,13) ; c
         LA    3,16(0,3)   ; offset of lbits in inflate_codes_state
         IC    4,0(0,3)
         ICM   4,B'1110',@lit_90_5
         L     3,160(0,13) ; c
         LA    3,17(0,3)   ; offset of dbits in inflate_codes_state
         IC    5,0(0,3)
         ICM   5,B'1110',@lit_90_5
         L     3,160(0,13) ; c
         LA    3,20(0,3)   ; offset of ltree in inflate_codes_state
         L     6,0(0,3)
         L     3,160(0,13) ; c
         LA    3,24(0,3)   ; offset of dtree in inflate_codes_state
         L     7,0(0,3)
         L     3,0(0,2)    ; s
         L     8,4(0,2)    ; z
         STM   4,7,168(13)
         ST    3,184(0,13)
         ST    8,188(0,13)
         LA    1,168(0,13)
         L     15,@lit_90_6 ; iffast
         BALR  14,15
         ST    15,8(0,2)   ; r
* ***           {{p=z->next_in;n=z->avail_in;b=s->bitb;k=s->bitk;} {q=\
* s->write;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}}
         L     3,4(0,2)    ; z
         L     4,0(0,3)
         ST    4,140(0,13) ; p
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     5,0(0,3)
         ST    5,144(0,13) ; n
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     6,0(0,3)
         ST    6,132(0,13) ; b
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     7,0(0,3)
         ST    7,136(0,13) ; k
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     8,0(0,3)
         ST    8,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     9,0(0,3)
         CR    8,9
         BNL   @@gen_label8
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     9,0(0,3)
         SLR   9,8
         BCTR  9,0
         B     @@gen_label9
@@gen_label8 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    9,4
@@gen_label9 DS 0H
         ST    9,152(0,13) ; m
* ***           if (r != 0)
         L     2,80(0,13)
         L     3,8(0,2)    ; r
         LTR   3,3
         BE    @L8
* ***           {
* ***             c->mode = r == 1 ? WASH : BADCODE;
         C     3,@lit_90_7
         BNE   @@gen_label12
         LA    4,7(0,0)
         B     @@gen_label13
@@gen_label12 DS 0H
         LA    2,9(0,0)
         LR    4,2
@@gen_label13 DS 0H
         L     2,160(0,13) ; c
         ST    4,0(0,2)    ; c
* ***             break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***           }
* ***         }
@L9      DS    0H
* ***
* ***   c->sub.code.need = c->lbits;
@L8      DS    0H
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of need in 0000008
         L     3,160(0,13) ; c
         LA    3,16(0,3)   ; offset of lbits in inflate_codes_state
         IC    4,0(0,3)
         ICM   4,B'1110',@lit_90_5
         ST    4,0(0,2)    ; offset of need in 0000008
* ***         c->sub.code.tree = c->ltree;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         L     3,160(0,13) ; c
         LA    3,20(0,3)   ; offset of ltree in inflate_codes_state
         L     4,0(0,3)
         ST    4,0(0,2)    ; offset of sub in inflate_codes_state
* ***         c->mode = LEN;
         L     2,160(0,13) ; c
         LA    3,1(0,0)
         ST    3,0(0,2)    ; c
* ***       case LEN:
* ***         j = c->sub.code.need;
@L10     DS    0H
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of need in 0000008
         L     3,0(0,2)
         ST    3,120(0,13) ; j
* ***         {while(k<(j)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {z\
* ->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}}\
*  return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
         B     @L12
@L11     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L15
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L16
@L15     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_9 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_1_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_1,12
@L16     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_90_5
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_90_11
         ST    4,136(0,13) ; k
@L12     DS    0H
         L     2,136(0,13) ; k
         CL    2,120(0,13)
         BL    @L11
* ***         t = c->sub.code.tree + ((uInt)b & ifmaskÝj¨);
         L     3,160(0,13) ; c
         LA    3,8(0,3)    ; offset of sub in inflate_codes_state
         L     4,0(0,3)
         L     3,120(0,13) ; j
         L     5,@lit_90_12
         SLL   3,2(0)
         LA    3,0(3,5)
         L     5,0(0,3)
         N     5,132(0,13)
         SLL   5,3(0)
         LA    4,0(4,5)
         ST    4,124(0,13) ; t
* ***         {b>>=(t->word.what.Bits);k-=(t->word.what.Bits);}
         L     3,132(0,13) ; b
         LA    4,1(0,4)    ; offset of Bits in 0000001
         LA    5,0(0,0)
         IC    5,0(0,4)
         SRL   3,0(5)
         ST    3,132(0,13) ; b
         L     4,124(0,13) ; t
         LA    4,1(0,4)    ; offset of Bits in 0000001
         LA    5,0(0,0)
         IC    5,0(0,4)
         SLR   2,5
         ST    2,136(0,13) ; k
* ***         e = (uInt)(t->word.what.Exop);
         L     4,124(0,13) ; t
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_90_5
         ST    5,128(0,13) ; e
* ***         if (e == 0)
         LTR   5,5
         BNE   @L17
* ***         {
* ***           c->sub.lit = t->base;
         L     6,160(0,13) ; c
         LA    6,8(0,6)    ; offset of sub in inflate_codes_state
         LA    4,4(0,4)    ; offset of base in inflate_huft_s
         L     7,0(0,4)
         ST    7,0(0,6)    ; offset of sub in inflate_codes_state
* ***           ;
* ***           # 133
* ***   c->mode = LIT;
         L     2,160(0,13) ; c
         LA    3,6(0,0)
         ST    3,0(0,2)    ; c
* ***           break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***         }
* ***         if (e & 16)
@L17     DS    0H
         LA    2,16(0,0)
         N     2,128(0,13)
         LTR   2,2
         BZ    @L18
* ***         {
* ***           c->sub.copy.get = e & 15;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    3,15(0,0)
         N     3,128(0,13)
         ST    3,0(0,2)    ; offset of sub in inflate_codes_state
* ***           c->len = t->base;
         L     2,160(0,13) ; c
         LA    2,4(0,2)    ; offset of len in inflate_codes_state
         L     3,124(0,13) ; t
         LA    3,4(0,3)    ; offset of base in inflate_huft_s
         L     4,0(0,3)
         ST    4,0(0,2)    ; offset of len in inflate_codes_state
* ***           c->mode = LENEXT;
         L     2,160(0,13) ; c
         LA    3,2(0,0)
         ST    3,0(0,2)    ; c
* ***           break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***         }
* ***         if ((e & 64) == 0)
@L18     DS    0H
         LA    2,64(0,0)
         N     2,128(0,13)
         LTR   2,2
         BNE   @L19
* ***         {
* ***           c->sub.code.need = e;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of need in 0000008
         L     3,128(0,13) ; e
         ST    3,0(0,2)    ; offset of need in 0000008
* ***           c->sub.code.tree = t + t->base;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         L     3,124(0,13) ; t
         LA    4,4(0,3)    ; offset of base in inflate_huft_s
         L     5,0(0,4)
         SLL   5,3(0)
         LA    3,0(3,5)
         ST    3,0(0,2)    ; offset of sub in inflate_codes_state
* ***           break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***         }
* ***         if (e & 32)
@L19     DS    0H
         LA    2,32(0,0)
         N     2,128(0,13)
         LTR   2,2
         BZ    @L20
* ***         {
* ***           ;
* ***           c->mode = WASH;
         L     2,160(0,13) ; c
         LA    3,7(0,0)
         ST    3,0(0,2)    ; c
* ***           break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***         }
* ***         c->mode = BADCODE;
@L20     DS    0H
         L     2,160(0,13) ; c
         LA    3,9(0,0)
         ST    3,0(0,2)    ; c
* ***         z->msg = (char*)"invalid literal/length code";
         L     3,80(0,13)
         L     4,4(0,3)    ; z
         LA    4,24(0,4)   ; offset of msg in z_stream_s
         LA    5,@lit_90_14
         ST    5,0(0,4)    ; offset of msg in z_stream_s
* ***         r = (-3);
         L     2,@lit_90_15
         ST    2,8(0,3)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,168(0,13)
         ST    4,172(0,13)
         MVC   176(4,13),8(3)
         LA    1,168(0,13)
         L     15,@lit_90_9 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_1_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_1,12
* ***       case LENEXT:
* ***         j = c->sub.copy.get;
@L21     DS    0H
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         L     3,0(0,2)
         ST    3,120(0,13) ; j
* ***         {while(k<(j)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {z\
* ->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}}\
*  return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
         B     @L23
@L22     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L26
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L27
@L26     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_9 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_1_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_1,12
@L27     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_90_5
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_90_11
         ST    4,136(0,13) ; k
@L23     DS    0H
         L     2,136(0,13) ; k
         CL    2,120(0,13)
         BL    @L22
* ***         c->len += (uInt)b & ifmaskÝj¨;
         L     3,160(0,13) ; c
         LA    3,4(0,3)    ; offset of len in inflate_codes_state
         LR    4,3
         L     5,0(0,3)
         L     3,120(0,13) ; j
         L     6,@lit_90_12
         SLL   3,2(0)
         LA    3,0(3,6)
         L     6,0(0,3)
         N     6,132(0,13)
         ALR   5,6
         ST    5,0(0,4)
* ***         {b>>=(j);k-=(j);}
         L     2,132(0,13) ; b
         L     3,120(0,13) ; j
         SRL   2,0(3)
         ST    2,132(0,13) ; b
         L     4,136(0,13) ; k
         SL    4,120(0,13)
         ST    4,136(0,13) ; k
* ***         c->sub.code.need = c->dbits;
         L     5,160(0,13) ; c
         LA    5,8(0,5)    ; offset of sub in inflate_codes_state
         LA    5,4(0,5)    ; offset of need in 0000008
         L     6,160(0,13) ; c
         LA    6,17(0,6)   ; offset of dbits in inflate_codes_state
         IC    7,0(0,6)
         ICM   7,B'1110',@lit_90_5
         ST    7,0(0,5)    ; offset of need in 0000008
* ***         c->sub.code.tree = c->dtree;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         L     3,160(0,13) ; c
         LA    3,24(0,3)   ; offset of dtree in inflate_codes_state
         L     4,0(0,3)
         ST    4,0(0,2)    ; offset of sub in inflate_codes_state
* ***         ;
* ***         c->mode = DIST;
         L     2,160(0,13) ; c
         LA    3,3(0,0)
         ST    3,0(0,2)    ; c
* ***       case DIST:
* ***         j = c->sub.code.need;
@L28     DS    0H
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of need in 0000008
         L     3,0(0,2)
         ST    3,120(0,13) ; j
* ***         {while(k<(j)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {z\
* ->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}}\
*  return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
         B     @L30
@L29     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BZ    @L33
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         B     @L34
@L33     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_9 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_1_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_1,12
@L34     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_90_5
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_90_11
         ST    4,136(0,13) ; k
@L30     DS    0H
         L     2,136(0,13) ; k
         CL    2,120(0,13)
         BL    @L29
* ***         t = c->sub.code.tree + ((uInt)b & ifmaskÝj¨);
         L     3,160(0,13) ; c
         LA    3,8(0,3)    ; offset of sub in inflate_codes_state
         L     4,0(0,3)
         L     3,120(0,13) ; j
         L     5,@lit_90_12
         SLL   3,2(0)
         LA    3,0(3,5)
         L     5,0(0,3)
         N     5,132(0,13)
         SLL   5,3(0)
         LA    4,0(4,5)
         ST    4,124(0,13) ; t
* ***         {b>>=(t->word.what.Bits);k-=(t->word.what.Bits);}
         L     3,132(0,13) ; b
         LA    4,1(0,4)    ; offset of Bits in 0000001
         LA    5,0(0,0)
         IC    5,0(0,4)
         SRL   3,0(5)
         ST    3,132(0,13) ; b
         L     4,124(0,13) ; t
         LA    4,1(0,4)    ; offset of Bits in 0000001
         LA    5,0(0,0)
         IC    5,0(0,4)
         SLR   2,5
         ST    2,136(0,13) ; k
* ***         e = (uInt)(t->word.what.Exop);
         L     4,124(0,13) ; t
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_90_5
         ST    5,128(0,13) ; e
* ***         if (e & 16)
         LA    6,16(0,0)
         N     6,128(0,13)
         LTR   6,6
         BZ    @L35
* ***         {
* ***           c->sub.copy.get = e & 15;
         L     6,160(0,13) ; c
         LA    6,8(0,6)    ; offset of sub in inflate_codes_state
         LA    7,15(0,0)
         N     7,128(0,13)
         ST    7,0(0,6)    ; offset of sub in inflate_codes_state
* ***           c->sub.copy.dist = t->base;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of dist in 0000009
         LA    4,4(0,4)    ; offset of base in inflate_huft_s
         L     3,0(0,4)
         ST    3,0(0,2)    ; offset of dist in 0000009
* ***           c->mode = DISTEXT;
         L     2,160(0,13) ; c
         LA    3,4(0,0)
         ST    3,0(0,2)    ; c
* ***           break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***         }
* ***         if ((e & 64) == 0)
@L35     DS    0H
         LA    2,64(0,0)
         N     2,128(0,13)
         LTR   2,2
         BNE   @L36
* ***         {
* ***           c->sub.code.need = e;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of need in 0000008
         L     3,128(0,13) ; e
         ST    3,0(0,2)    ; offset of need in 0000008
* ***           c->sub.code.tree = t + t->base;
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         L     3,124(0,13) ; t
         LA    4,4(0,3)    ; offset of base in inflate_huft_s
         L     5,0(0,4)
         SLL   5,3(0)
         LA    3,0(3,5)
         ST    3,0(0,2)    ; offset of sub in inflate_codes_state
* ***           break;
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L5
         DROP  12
         USING @REGION_90_1,12
* ***         }
* ***         c->mode = BADCODE;
@L36     DS    0H
         L     2,160(0,13) ; c
         LA    3,9(0,0)
         ST    3,0(0,2)    ; c
* ***         z->msg = (char*)"invalid distance code";
         L     3,80(0,13)
         L     4,4(0,3)    ; z
         LA    4,24(0,4)   ; offset of msg in z_stream_s
         LA    5,@lit_90_27
         ST    5,0(0,4)    ; offset of msg in z_stream_s
* ***         r = (-3);
         L     2,@lit_90_15
         ST    2,8(0,3)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,168(0,13)
         ST    4,172(0,13)
         MVC   176(4,13),8(3)
         LA    1,168(0,13)
         L     15,@lit_90_9 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_1_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_1,12
* ***       case DISTEXT:
* ***         j = c->sub.copy.get;
@L37     DS    0H
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         L     3,0(0,2)
         ST    3,120(0,13) ; j
* ***         {while(k<(j)){{if(n)r=0;else {{{s->bitb=b;s->bitk=k;} {z\
* ->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;} {s->write=q;}}\
*  return ifflush(s,z,r);}};b|=((uLong)(n--,*p++))<<k;k+=8;}}
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L39
         DROP  12
         USING @REGION_90_1,12
@L38     DS    0H
         L     2,144(0,13) ; n
         LTR   2,2
         BNZ   *+12  Around region break
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L42
         DROP  12
         USING @REGION_90_1,12
         L     3,80(0,13)
         LA    4,0(0,0)
         ST    4,8(0,3)    ; r
         AL    12,@lit_region_diff_90_1_2
         DROP  12
         USING @REGION_90_2,12
         B     @L43
         DROP  12
         USING @REGION_90_1,12
@REGION_90_2 DS 0H
         DROP  12
         USING @REGION_90_2,12
@L42     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
         DS    0D
@lit_region_diff_90_2_3  DC A(@REGION_90_3-@REGION_90_2)
@lit_90_30  DC A(ifflush)
@lit_90_32  DC F'8' 0x00000008
@lit_90_31  DC F'0' 0x00000000
@lit_region_diff_90_2_1  DC A(@REGION_90_2-@REGION_90_1)
@lit_90_33  DC A(ifmask)
@lit_90_38  DC F'7' 0x00000007
@lit_90_40  DC F'1' 0x00000001
@lit_90_44  DC F'-3' 0xfffffffd
@lit_90_46  DC F'-2' 0xfffffffe
@lit_90_49  DC F'9' 0x00000009
@L43     DS    0H
         L     2,144(0,13) ; n
         BCTR  2,0
         ST    2,144(0,13) ; n
         L     3,140(0,13) ; p
         LR    4,3
         LA    3,1(0,3)
         ST    3,140(0,13) ; p
         IC    5,0(0,4)
         ICM   5,B'1110',@lit_90_31
         L     4,136(0,13) ; k
         SLL   5,0(4)
         O     5,132(0,13)
         ST    5,132(0,13) ; b
         AL    4,@lit_90_32
         ST    4,136(0,13) ; k
@L39     DS    0H
         L     2,136(0,13) ; k
         CL    2,120(0,13)
         BNL   *+12  Around region break
         SL    12,@lit_region_diff_90_2_1
         DROP  12
         USING @REGION_90_1,12
         B     @L38
         DROP  12
         USING @REGION_90_2,12
* ***         c->sub.copy.dist += (uInt)b & ifmaskÝj¨;
         L     3,160(0,13) ; c
         LA    3,8(0,3)    ; offset of sub in inflate_codes_state
         LA    3,4(0,3)    ; offset of dist in 0000009
         LR    4,3
         L     5,0(0,3)
         L     3,120(0,13) ; j
         L     6,@lit_90_33
         SLL   3,2(0)
         LA    3,0(3,6)
         L     6,0(0,3)
         N     6,132(0,13)
         ALR   5,6
         ST    5,0(0,4)
* ***         {b>>=(j);k-=(j);}
         L     2,132(0,13) ; b
         L     3,120(0,13) ; j
         SRL   2,0(3)
         ST    2,132(0,13) ; b
         L     4,136(0,13) ; k
         SL    4,120(0,13)
         ST    4,136(0,13) ; k
* ***         ;
* ***         c->mode = COPY;
         L     5,160(0,13) ; c
         LA    6,5(0,0)
         ST    6,0(0,5)    ; c
* ***       case COPY:
* ***
* ***   f = (uInt)(q - s->window) < c->sub.copy.dist ?
@L44     DS    0H
* ***             s->end - (c->sub.copy.dist - (q - s->window)) :
         L     2,148(0,13) ; q
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,40(0,4)   ; offset of window in inflate_blocks_state
         L     5,0(0,4)
         SLR   2,5
         L     4,160(0,13) ; c
         LA    4,8(0,4)    ; offset of sub in inflate_codes_state
         LA    4,4(0,4)    ; offset of dist in 0000009
         L     5,0(0,4)
         CLR   2,5
         BNL   @@gen_label29
* ***             q - c->sub.copy.dist;
         L     2,0(0,3)    ; s
         LA    2,44(0,2)   ; offset of end in inflate_blocks_state
         L     4,0(0,2)
         L     2,160(0,13) ; c
         LA    2,8(0,2)    ; offset of sub in inflate_codes_state
         LA    2,4(0,2)    ; offset of dist in 0000009
         L     5,0(0,2)
         L     2,148(0,13) ; q
         L     6,0(0,3)    ; s
         LA    6,40(0,6)   ; offset of window in inflate_blocks_state
         L     7,0(0,6)
         SLR   2,7
         SLR   5,2
         SLR   4,5
         B     @@gen_label30
@@gen_label29 DS 0H
         L     2,148(0,13) ; q
         L     3,160(0,13) ; c
         LA    3,8(0,3)    ; offset of sub in inflate_codes_state
         LA    3,4(0,3)    ; offset of dist in 0000009
         L     4,0(0,3)
         SLR   2,4
         LR    4,2
@@gen_label30 DS 0H
         ST    4,156(0,13) ; f
* ***
* ***
* ***
* ***
* ***         # 208
* ***   while (c->len)
         B     @L46
@L45     DS    0H
* ***           {if(m==0){{if(q==s->end&&s->read!=s->window){q=s->wind\
* ow;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}} if(m==0){{{s->w\
* rite=q;} r=ifflush(s,z,r); {q=s->write;m=(uInt)(uInt)(q<s->read?s->r\
* ead-q-1:s->end-q);}} {if(q==s->end&&s->read!=s->window){q=s->window;\
* m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}} if(m==0) {{{s->bit\
* b=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=\
* p;} {s->write=q;}} return ifflush(s,z,r);}}}r=0;}
         L     2,152(0,13) ; m
         LTR   2,2
         BNE   @L49
         L     3,148(0,13) ; q
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,44(0,5)   ; offset of end in inflate_blocks_state
         L     6,0(0,5)
         CR    3,6
         BNE   @L50
         L     5,0(0,4)    ; s
         LA    5,48(0,5)   ; offset of read in inflate_blocks_state
         L     6,0(0,5)
         L     5,0(0,4)    ; s
         LA    5,40(0,5)   ; offset of window in inflate_blocks_state
         L     7,0(0,5)
         CR    6,7
         BE    @L50
@@gen_label33 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,40(0,3)   ; offset of window in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label36
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label37
@@gen_label36 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label37 DS 0H
         ST    5,152(0,13) ; m
@L50     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BNE   @L49
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,52(0,4)   ; offset of write in inflate_blocks_state
         L     5,148(0,13) ; q
         ST    5,0(0,4)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,168(0,13)
         ST    4,172(0,13)
         MVC   176(4,13),8(3)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         ST    15,8(0,3)   ; r
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,0(0,2)
         ST    4,148(0,13) ; q
         L     2,0(0,3)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     5,0(0,2)
         CR    4,5
         BNL   @@gen_label40
         L     2,0(0,3)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     5,0(0,2)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label41
@@gen_label40 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label41 DS 0H
         ST    5,152(0,13) ; m
         L     2,148(0,13) ; q
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,44(0,4)   ; offset of end in inflate_blocks_state
         L     6,0(0,4)
         CR    2,6
         BNE   @L52
         L     4,0(0,3)    ; s
         LA    4,48(0,4)   ; offset of read in inflate_blocks_state
         L     6,0(0,4)
         L     4,0(0,3)    ; s
         LA    4,40(0,4)   ; offset of window in inflate_blocks_state
         L     7,0(0,4)
         CR    6,7
         BE    @L52
@@gen_label43 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,40(0,3)   ; offset of window in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label46
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label47
@@gen_label46 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label47 DS 0H
         ST    5,152(0,13) ; m
@L52     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BNE   @L49
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,168(0,13)
         ST    4,172(0,13)
         MVC   176(4,13),8(3)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
@L49     DS    0H
         L     2,80(0,13)
         LA    3,0(0,0)
         ST    3,8(0,2)    ; r
* ***           {*q++=(Byte)(*f++);m--;}
         L     4,148(0,13) ; q
         LR    5,4
         LA    4,1(0,4)
         ST    4,148(0,13) ; q
         L     6,156(0,13) ; f
         LR    7,6
         LA    6,1(0,6)
         ST    6,156(0,13) ; f
         IC    8,0(0,7)
         STC   8,0(0,5)
         L     5,152(0,13) ; m
         BCTR  5,0
         ST    5,152(0,13) ; m
* ***           if (f == s->end)
         L     7,0(0,2)    ; s
         LA    7,44(0,7)   ; offset of end in inflate_blocks_state
         L     8,0(0,7)
         CR    6,8
         BNE   @L54
* ***             f = s->window;
         L     7,0(0,2)    ; s
         LA    7,40(0,7)   ; offset of window in inflate_blocks_state
         L     8,0(0,7)
         ST    8,156(0,13) ; f
* ***           c->len--;
@L54     DS    0H
         L     2,160(0,13) ; c
         LA    2,4(0,2)    ; offset of len in inflate_codes_state
         LR    3,2
         L     4,0(0,2)
         LR    2,4
         BCTR  2,0
         ST    2,0(0,3)
* ***         }
@L46     DS    0H
* ***         {
         L     2,160(0,13) ; c
         LA    2,4(0,2)    ; offset of len in inflate_codes_state
         L     3,0(0,2)
         LTR   3,3
         BNZ   @L45
* ***         c->mode = START;
         L     2,160(0,13) ; c
         LA    3,0(0,0)
         ST    3,0(0,2)    ; c
* ***         break;
         B     @L5
* ***       case LIT:
* ***         {if(m==0){{if(q==s->end&&s->read!=s->window){q=s->window\
* ;m=(uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}} if(m==0){{{s->wri\
* te=q;} r=ifflush(s,z,r); {q=s->write;m=(uInt)(uInt)(q<s->read?s->rea\
* d-q-1:s->end-q);}} {if(q==s->end&&s->read!=s->window){q=s->window;m=\
* (uInt)(uInt)(q<s->read?s->read-q-1:s->end-q);}} if(m==0) {{{s->bitb=\
* b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;\
* } {s->write=q;}} return ifflush(s,z,r);}}}r=0;}
@L55     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BNE   @L56
         L     3,148(0,13) ; q
         L     4,80(0,13)
         L     5,0(0,4)    ; s
         LA    5,44(0,5)   ; offset of end in inflate_blocks_state
         L     6,0(0,5)
         CR    3,6
         BNE   @L57
         L     5,0(0,4)    ; s
         LA    5,48(0,5)   ; offset of read in inflate_blocks_state
         L     6,0(0,5)
         L     5,0(0,4)    ; s
         LA    5,40(0,5)   ; offset of window in inflate_blocks_state
         L     7,0(0,5)
         CR    6,7
         BE    @L57
@@gen_label53 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,40(0,3)   ; offset of window in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label56
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label57
@@gen_label56 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label57 DS 0H
         ST    5,152(0,13) ; m
@L57     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BNE   @L56
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,52(0,4)   ; offset of write in inflate_blocks_state
         L     5,148(0,13) ; q
         ST    5,0(0,4)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,168(0,13)
         ST    4,172(0,13)
         MVC   176(4,13),8(3)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         ST    15,8(0,3)   ; r
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,0(0,2)
         ST    4,148(0,13) ; q
         L     2,0(0,3)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     5,0(0,2)
         CR    4,5
         BNL   @@gen_label60
         L     2,0(0,3)    ; s
         LA    2,48(0,2)   ; offset of read in inflate_blocks_state
         L     5,0(0,2)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label61
@@gen_label60 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label61 DS 0H
         ST    5,152(0,13) ; m
         L     2,148(0,13) ; q
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,44(0,4)   ; offset of end in inflate_blocks_state
         L     6,0(0,4)
         CR    2,6
         BNE   @L59
         L     4,0(0,3)    ; s
         LA    4,48(0,4)   ; offset of read in inflate_blocks_state
         L     6,0(0,4)
         L     4,0(0,3)    ; s
         LA    4,40(0,4)   ; offset of window in inflate_blocks_state
         L     7,0(0,4)
         CR    6,7
         BE    @L59
@@gen_label63 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,40(0,3)   ; offset of window in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label66
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label67
@@gen_label66 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label67 DS 0H
         ST    5,152(0,13) ; m
@L59     DS    0H
         L     2,152(0,13) ; m
         LTR   2,2
         BNE   @L56
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     2,0(0,3)    ; s
         LA    2,28(0,2)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,2)    ; offset of bitk in inflate_blocks_state
         L     2,4(0,3)    ; z
         LA    2,4(0,2)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,2)    ; offset of avail_in in z_stream_s
         L     2,4(0,3)    ; z
         LA    2,8(0,2)    ; offset of total_in in z_stream_s
         LR    4,2
         L     5,0(0,2)
         L     2,140(0,13) ; p
         L     6,4(0,3)    ; z
         L     7,0(0,6)
         SLR   2,7
         ALR   5,2
         ST    5,0(0,4)
         L     2,140(0,13) ; p
         ST    2,0(0,6)    ; z
         L     2,0(0,3)    ; s
         LA    2,52(0,2)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,2)    ; offset of write in inflate_blocks_state
         L     2,0(0,3)    ; s
         L     4,4(0,3)    ; z
         ST    2,168(0,13)
         ST    4,172(0,13)
         MVC   176(4,13),8(3)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
@L56     DS    0H
         L     2,80(0,13)
         LA    3,0(0,0)
         ST    3,8(0,2)    ; r
* ***         {*q++=(Byte)(c->sub.lit);m--;}
         L     4,148(0,13) ; q
         LR    5,4
         LA    4,1(0,4)
         ST    4,148(0,13) ; q
         L     6,160(0,13) ; c
         LA    6,8(0,6)    ; offset of sub in inflate_codes_state
         L     7,0(0,6)
         STC   7,0(0,5)
         L     5,152(0,13) ; m
         BCTR  5,0
         ST    5,152(0,13) ; m
* ***         c->mode = START;
         L     6,160(0,13) ; c
         LA    7,0(0,0)
         ST    7,0(0,6)    ; c
* ***         break;
         B     @L5
* ***       case WASH:
* ***         if (k > 7)
@L61     DS    0H
         L     2,136(0,13) ; k
         CL    2,@lit_90_38
         BNH   @L62
* ***         {
* ***
* ***           k -= 8;
         SL    2,@lit_90_32
         ST    2,136(0,13) ; k
* ***           n++;
         L     3,144(0,13) ; n
         AL    3,@lit_90_40
         ST    3,144(0,13) ; n
* ***           p--;
         L     4,140(0,13) ; p
         BCTR  4,0
         ST    4,140(0,13) ; p
* ***         }
* ***         {{s->write=q;} r=ifflush(s,z,r); {q=s->write;m=(uInt)(uI\
* nt)(q<s->read?s->read-q-1:s->end-q);}}
@L62     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         ST    15,8(0,2)   ; r
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,0(0,3)
         ST    4,148(0,13) ; q
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         CR    4,5
         BNL   @@gen_label71
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     5,0(0,3)
         SLR   5,4
         BCTR  5,0
         B     @@gen_label72
@@gen_label71 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,44(0,3)   ; offset of end in inflate_blocks_state
         L     4,0(0,3)
         L     3,148(0,13) ; q
         SLR   4,3
         LR    5,4
@@gen_label72 DS 0H
         ST    5,152(0,13) ; m
* ***         if (s->read != s->write)
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,48(0,3)   ; offset of read in inflate_blocks_state
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     6,0(0,3)
         CR    4,6
         BE    @L63
* ***           {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p\
* -z->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     3,0(0,2)    ; s
         LA    3,32(0,3)   ; offset of bitb in inflate_blocks_state
         L     4,132(0,13) ; b
         ST    4,0(0,3)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
* ***         c->mode = END;
@L63     DS    0H
         L     2,160(0,13) ; c
         LA    3,8(0,0)
         ST    3,0(0,2)    ; c
* ***       case END:
* ***         r = 1;
@L64     DS    0H
         L     2,80(0,13)
         LA    3,1(0,0)
         ST    3,8(0,2)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
* ***       case BADCODE:
* ***         r = (-3);
@L65     DS    0H
         L     2,80(0,13)
         L     3,@lit_90_44
         ST    3,8(0,2)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
* ***       default:
* ***         r = (-2);
@L66     DS    0H
         L     2,80(0,13)
         L     3,@lit_90_46
         ST    3,8(0,2)    ; r
* ***         {{{s->bitb=b;s->bitk=k;} {z->avail_in=n;z->total_in+=p-z\
* ->next_in;z->next_in=p;} {s->write=q;}} return ifflush(s,z,r);}
         L     4,0(0,2)    ; s
         LA    4,32(0,4)   ; offset of bitb in inflate_blocks_state
         L     5,132(0,13) ; b
         ST    5,0(0,4)    ; offset of bitb in inflate_blocks_state
         L     3,0(0,2)    ; s
         LA    3,28(0,3)   ; offset of bitk in inflate_blocks_state
         L     4,136(0,13) ; k
         ST    4,0(0,3)    ; offset of bitk in inflate_blocks_state
         L     3,4(0,2)    ; z
         LA    3,4(0,3)    ; offset of avail_in in z_stream_s
         L     4,144(0,13) ; n
         ST    4,0(0,3)    ; offset of avail_in in z_stream_s
         L     3,4(0,2)    ; z
         LA    3,8(0,3)    ; offset of total_in in z_stream_s
         LR    4,3
         L     5,0(0,3)
         L     3,140(0,13) ; p
         L     6,4(0,2)    ; z
         L     7,0(0,6)
         SLR   3,7
         ALR   5,3
         ST    5,0(0,4)
         L     3,140(0,13) ; p
         ST    3,0(0,6)    ; z
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of write in inflate_blocks_state
         L     4,148(0,13) ; q
         ST    4,0(0,3)    ; offset of write in inflate_blocks_state
         L     3,0(0,2)    ; s
         L     4,4(0,2)    ; z
         STM   3,4,168(13)
         MVC   176(4,13),8(2)
         LA    1,168(0,13)
         L     15,@lit_90_30 ; ifflush
         BALR  14,15
         AL    12,@lit_region_diff_90_2_3
         DROP  12
         USING @REGION_90_3,12
         B     @ret_lab_90
         DROP  12
         USING @REGION_90_2,12
* ***     }
* ***
* ***
* ***   # 248
* ***   }
@L5      DS    0H
         L     2,160(0,13) ; c
         L     3,0(0,2)
         C     3,@lit_90_31
         BL    @L66
         C     3,@lit_90_49
         BH    @L66
         S     3,@lit_90_31
         SLL   3,3(0)
         LA    4,@@gen_label74
         B     0(4,3)
@@gen_label74 DS    0H
         SL    12,@lit_region_diff_90_2_1
         DROP  12
         USING @REGION_90_1,12
         B     @L7
         DROP  12
         USING @REGION_90_2,12
         SL    12,@lit_region_diff_90_2_1
         DROP  12
         USING @REGION_90_1,12
         B     @L10
         DROP  12
         USING @REGION_90_2,12
         SL    12,@lit_region_diff_90_2_1
         DROP  12
         USING @REGION_90_1,12
         B     @L21
         DROP  12
         USING @REGION_90_2,12
         SL    12,@lit_region_diff_90_2_1
         DROP  12
         USING @REGION_90_1,12
         B     @L28
         DROP  12
         USING @REGION_90_2,12
         SL    12,@lit_region_diff_90_2_1
         DROP  12
         USING @REGION_90_1,12
         B     @L37
         DROP  12
         USING @REGION_90_2,12
         B     @L44
         DC    XL4'00000000'
         B     @L55
         DC    XL4'00000000'
         B     @L61
         DC    XL4'00000000'
         B     @L64
         DC    XL4'00000000'
         B     @L65
         DC    XL4'00000000'
@REGION_90_3 DS 0H
         DROP  12
         USING @REGION_90_3,12
@ret_lab_90 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifcodes"
*      (FUNCTION #90)
*
@AUTO#ifcodes DSECT
         DS    XL120
ifcodes#j#0 DS 1F          ; j
ifcodes#t#0 DS 1A          ; t
ifcodes#e#0 DS 1F          ; e
ifcodes#b#0 DS 1F          ; b
ifcodes#k#0 DS 1F          ; k
ifcodes#p#0 DS 1A          ; p
ifcodes#n#0 DS 1F          ; n
ifcodes#q#0 DS 1A          ; q
ifcodes#m#0 DS 1F          ; m
ifcodes#f#0 DS 1A          ; f
ifcodes#c#0 DS 1A          ; c
*
@ZLIB05  CSECT
*
*
*
ifcfree  #PROLOG CINDEX=91,BASER=12,FRAME=112,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    3,2
         L     4,4(0,1)
         LR    2,4
* ***     (*((z)->zfree))((z)->opaque, (voidpf)(c));
         LA    5,40(0,2)   ; offset of opaque in z_stream_s
         L     6,0(0,5)
         LR    5,3
         ST    6,104(0,13)
         ST    5,108(0,13)
         LA    5,36(0,2)   ; offset of zfree in z_stream_s
         L     6,0(0,5)
         LA    1,104(0,13)
         L     5,72(0,13)
         LR    15,6
         BALR  14,15
* ***     ;
* ***   }
@ret_lab_91 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
         DS    0D
@FRAMESIZE_91  DC F'112'
*
*   DSECT for automatic variables in "ifcfree"
*      (FUNCTION #91)
*
@AUTO#ifcfree DSECT
         DS    XL104
*
@ZLIB05  CSECT
*
*  Non-Re-Entrant Data Section
*
@ZLIB05 CSECT
@DATA    DS 0D
*
         END

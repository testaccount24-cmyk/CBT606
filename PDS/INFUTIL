*
*  Compiled by DCC Version 1.31.00
*           on Wed Jan 10 16:22:55 2001
*

*
*
*
*    Code Section
*
@ZLIB09 CSECT
@ZLIB09 AMODE ANY
@ZLIB09 RMODE ANY
*
*
*
ifflush  #PROLOG CINDEX=92,BASER=12,FRAME=152,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,4(0,1)
         LR    5,2
         L     6,0(0,1)
         LR    3,6
* ***     uInt n;
* ***     Bytef *p;
* ***     Bytef *q;
* ***
* ***
* ***   p = z->next_out;
         LA    7,12(0,5)   ; offset of next_out in z_stream_s
         L     8,0(0,7)
         ST    8,124(0,13) ; p
* ***     q = s->read;
         LA    7,48(0,3)   ; offset of read in inflate_blocks_state
         L     9,0(0,7)
         LR    4,9         ; q
* ***
* ***
* ***   n = (uInt)((q <= s->write ? s->write : s->end) - q);
         LR    7,4         ; s
         LA    9,52(0,3)   ; offset of write in inflate_blocks_state
         L     10,0(0,9)
         CR    7,10
         BH    @@gen_label1
         LA    7,52(0,3)   ; offset of write in inflate_blocks_state
         L     9,0(0,7)
         B     @@gen_label2
         DS    0D
@FRAMESIZE_92  DC F'152'
@lit_92_1  DC F'-5' 0xfffffffb
@lit_92_2  DC F'256' 0x00000100
@lit_92_4  DC XL6'D20060007000'
@@gen_label1 DS 0H
         LA    6,44(0,3)   ; offset of end in inflate_blocks_state
         L     7,0(0,6)
         LR    9,7
@@gen_label2 DS 0H
         LR    6,4
         SLR   9,6
         LR    2,9         ; n
* ***     if (n > z->avail_out) n = z->avail_out;
         LR    6,2         ; z
         LA    7,16(0,5)   ; offset of avail_out in z_stream_s
         L     8,0(0,7)
         CLR   6,8
         BNH   @L0
         LA    6,16(0,5)   ; offset of avail_out in z_stream_s
         L     7,0(0,6)
         LR    2,7         ; n
* ***     if (n && r == (-5)) r = 0;
@L0      DS    0H
         LR    6,2
         LTR   6,6
         BZ    @L1
         L     6,80(0,13)
         L     7,8(0,6)    ; r
         C     7,@lit_92_1
         BNE   @L1
@@gen_label5 DS 0H
         L     6,80(0,13)
         LA    7,0(0,0)
         ST    7,8(0,6)    ; r
* ***
* ***
* ***   z->avail_out -= n;
@L1      DS    0H
         LA    6,16(0,5)   ; offset of avail_out in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,2
         SLR   8,6
         ST    8,0(0,7)
* ***     z->total_out += n;
         LA    6,20(0,5)   ; offset of total_out in z_stream_s
         LR    7,6
         L     8,0(0,6)
         ALR   8,2
         ST    8,0(0,7)
* ***
* ***
* ***   if (s->checkfn != 0)
         LA    6,56(0,3)   ; offset of checkfn in inflate_blocks_state
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BE    @L2
* ***       z->adler = s->check = (*s->checkfn)(s->check, q, n);
         LA    6,60(0,3)   ; offset of check in inflate_blocks_state
         L     7,0(0,6)
         LR    6,4
         LR    8,2
         ST    7,136(0,13)
         ST    6,140(0,13)
         ST    8,144(0,13)
         LA    6,56(0,3)   ; offset of checkfn in inflate_blocks_state
         L     7,0(0,6)
         LA    1,136(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LA    7,48(0,5)   ; offset of adler in z_stream_s
         LA    8,60(0,3)   ; offset of check in inflate_blocks_state
         ST    15,0(0,8)   ; offset of check in inflate_blocks_state
         ST    15,0(0,7)   ; offset of adler in z_stream_s
* ***
* ***
* ***   __memcpy(p,q,n);
@L2      DS    0H
         L     6,124(0,13) ; p
         LR    7,4
         LR    8,2
         LR    9,6
@@gen_label8 DS 0H
         LTR   8,8
         BZ    @@gen_label9
         CL    8,@lit_92_2
         BH    @@gen_label10
         LR    10,8
         B     @@gen_label11
@@gen_label10 DS 0H
         L     10,@lit_92_2
@@gen_label11 DS 0H
         SLR   8,10
         BCTR  10,0
         EX    10,@lit_92_4
         LA    6,1(10,6)
         LA    7,1(10,7)
         B     @@gen_label8
@@gen_label9 DS 0H
* ***     p += n;
         L     6,124(0,13) ; p
         LR    7,2
         LA    6,0(6,7)
         ST    6,124(0,13) ; p
* ***     q += n;
         LR    7,2
         LA    7,0(4,7)
         LR    4,7         ; q
* ***
* ***
* ***   if (q == s->end)
         LR    7,4         ; s
         LA    8,44(0,3)   ; offset of end in inflate_blocks_state
         L     9,0(0,8)
         CR    7,9
         BNE   @L3
* ***     {
* ***
* ***   q = s->window;
         LA    7,40(0,3)   ; offset of window in inflate_blocks_state
         L     8,0(0,7)
         LR    4,8         ; q
* ***       if (s->write == s->end)
         LA    7,52(0,3)   ; offset of write in inflate_blocks_state
         L     8,0(0,7)
         LA    7,44(0,3)   ; offset of end in inflate_blocks_state
         L     9,0(0,7)
         CR    8,9
         BNE   @L4
* ***         s->write = s->window;
         LA    7,52(0,3)   ; offset of write in inflate_blocks_state
         LA    8,40(0,3)   ; offset of window in inflate_blocks_state
         L     9,0(0,8)
         ST    9,0(0,7)    ; offset of write in inflate_blocks_state
* ***
* ***
* ***   n = (uInt)(s->write - q);
@L4      DS    0H
         LA    6,52(0,3)   ; offset of write in inflate_blocks_state
         L     7,0(0,6)
         LR    6,4
         SLR   7,6
         LR    2,7         ; n
* ***       if (n > z->avail_out) n = z->avail_out;
         LR    6,2         ; z
         LA    7,16(0,5)   ; offset of avail_out in z_stream_s
         L     8,0(0,7)
         CLR   6,8
         BNH   @L5
         LA    6,16(0,5)   ; offset of avail_out in z_stream_s
         L     7,0(0,6)
         LR    2,7         ; n
* ***       if (n && r == (-5)) r = 0;
@L5      DS    0H
         LR    6,2
         LTR   6,6
         BZ    @L6
         L     6,80(0,13)
         L     7,8(0,6)    ; r
         C     7,@lit_92_1
         BNE   @L6
@@gen_label16 DS 0H
         L     6,80(0,13)
         LA    7,0(0,0)
         ST    7,8(0,6)    ; r
* ***
* ***
* ***   z->avail_out -= n;
@L6      DS    0H
         LA    6,16(0,5)   ; offset of avail_out in z_stream_s
         LR    7,6
         L     8,0(0,6)
         LR    6,2
         SLR   8,6
         ST    8,0(0,7)
* ***       z->total_out += n;
         LA    6,20(0,5)   ; offset of total_out in z_stream_s
         LR    7,6
         L     8,0(0,6)
         ALR   8,2
         ST    8,0(0,7)
* ***
* ***
* ***   if (s->checkfn != 0)
         LA    6,56(0,3)   ; offset of checkfn in inflate_blocks_state
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BE    @L7
* ***         z->adler = s->check = (*s->checkfn)(s->check, q, n);
         LA    6,60(0,3)   ; offset of check in inflate_blocks_state
         L     7,0(0,6)
         LR    6,4
         LR    8,2
         ST    7,136(0,13)
         ST    6,140(0,13)
         ST    8,144(0,13)
         LA    6,56(0,3)   ; offset of checkfn in inflate_blocks_state
         L     7,0(0,6)
         LA    1,136(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LA    7,48(0,5)   ; offset of adler in z_stream_s
         LA    8,60(0,3)   ; offset of check in inflate_blocks_state
         ST    15,0(0,8)   ; offset of check in inflate_blocks_state
         ST    15,0(0,7)   ; offset of adler in z_stream_s
* ***
* ***
* ***   __memcpy(p,q,n);
@L7      DS    0H
         L     6,124(0,13) ; p
         LR    7,4
         LR    8,2
         LR    9,6
@@gen_label19 DS 0H
         LTR   8,8
         BZ    @@gen_label20
         CL    8,@lit_92_2
         BH    @@gen_label21
         LR    10,8
         B     @@gen_label22
@@gen_label21 DS 0H
         L     10,@lit_92_2
@@gen_label22 DS 0H
         SLR   8,10
         BCTR  10,0
         EX    10,@lit_92_4
         LA    6,1(10,6)
         LA    7,1(10,7)
         B     @@gen_label19
@@gen_label20 DS 0H
* ***       p += n;
         L     6,124(0,13) ; p
         LR    7,2
         LA    6,0(6,7)
         ST    6,124(0,13) ; p
* ***       q += n;
         LR    7,2
         LA    7,0(4,7)
         LR    4,7         ; q
* ***     }
* ***
* ***
* ***   z->next_out = p;
@L3      DS    0H
         LA    6,12(0,5)   ; offset of next_out in z_stream_s
         L     7,124(0,13) ; p
         ST    7,0(0,6)    ; offset of next_out in z_stream_s
* ***     s->read = q;
         LA    6,48(0,3)   ; offset of read in inflate_blocks_state
         LR    7,4
         ST    7,0(0,6)    ; offset of read in inflate_blocks_state
* ***
* ***
* ***   return r;
         L     6,80(0,13)
         L     15,8(0,6)
         B     @ret_lab_92
* ***   }
@ret_lab_92 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ifflush"
*      (FUNCTION #92)
*
@AUTO#ifflush DSECT
         DS    XL120
ifflush#n#0 DS 1F          ; n
ifflush#p#0 DS 1A          ; p
ifflush#q#0 DS 1A          ; q
*
@ZLIB09  CSECT
*
*  Non-Re-Entrant Data Section
*
@ZLIB09 CSECT
@DATA    DS 0D
         ENTRY ifmask
ifmask   DC    4X'00'
         DC    X'0000000100000003000000070000000F' ................
         DC    X'0000001F0000003F0000007F000000FF' ................
         DC    X'000001FF000003FF000007FF00000FFF' ................
         DC    X'00001FFF00003FFF00007FFF0000FFFF' ................
*
         END

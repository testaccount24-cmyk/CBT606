*
*  Compiled by DCC Version 1.31.00
*           on Wed Jan 10 16:23:12 2001
*

*
*
*
*    Code Section
*
@BZLIB01 CSECT
@BZLIB01 AMODE ANY
@BZLIB01 RMODE ANY
         EXTRN free
         EXTRN malloc
         EXTRN bzinterr
         EXTRN bzrnums
         EXTRN bzcrctab
         EXTRN bzcmpblk
         EXTRN bzdecmp
*
*
*
bzcfgok  #PROLOG CINDEX=28,BASER=12,FRAME=88,ENTRY=NO
* ******* End of Prologue
* *
* ***      if (sizeof(int) != 4) return 0;
         B     @L2
         DS    0D
@FRAMESIZE_28  DC F'88'
         LA    15,0(0,0)
* ***      if (sizeof(short) != 2) return 0;
         LA    15,0(0,0)
* ***      if (sizeof(char) != 1) return 0;
         LA    15,0(0,0)
* ***      return 1;
@L2      DS    0H
         LA    15,1(0,0)
         B     @ret_lab_28
* ***   }
@ret_lab_28 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzcfgok"
*      (FUNCTION #28)
*
@AUTO#bzcfgok DSECT
         DS    XL88
*
@BZLIB01 CSECT
*
*
*
defbza   #PROLOG CINDEX=29,BASER=12,FRAME=120,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     4,4(0,1)
         L     3,8(0,1)
* ***      void* v = malloc ( items * size );
         LR    5,4         ; size
         LR    6,3
         LR    11,5
         MR    10,6
         ST    11,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_29_2 ; malloc
         BALR  14,15
         LR    2,15        ; v
* ***      return v;
         LR    5,2
         LR    15,5
         B     @ret_lab_29
         DS    0D
@lit_29_2  DC A(malloc)
@FRAMESIZE_29  DC F'120'
* ***   }
@ret_lab_29 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "defbza"
*      (FUNCTION #29)
*
@AUTO#defbza DSECT
         DS    XL104
defbza#v#0 DS  1A          ; v
*
@BZLIB01 CSECT
*
*
*
defbzf   #PROLOG CINDEX=30,BASER=12,FRAME=104,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,4(0,1)
         LR    2,3
* ***      if (addr != 0) free ( addr );
         LR    4,2         ; #0
         LA    5,0(0,0)
         CR    4,5
         BE    @ret_lab_30
         LR    4,2
         ST    4,96(0,13)
         LA    1,96(0,13)
         L     15,@lit_30_4 ; free
         BALR  14,15
* ***   }
@ret_lab_30 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
         DS    0D
@FRAMESIZE_30  DC F'104'
@lit_30_4  DC A(free)
*
*   DSECT for automatic variables in "defbzf"
*      (FUNCTION #30)
*
@AUTO#defbzf DSECT
         DS    XL96
*
@BZLIB01 CSECT
*
*
*
prepnblk #PROLOG CINDEX=31,BASER=12,FRAME=112,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     4,0(0,1)
         LR    2,4
* ***      Int32 i;
* ***      s->nblock = 0;
         LA    5,68(0,2)   ; offset of nblock in 0000001
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of nblock in 0000001
* ***      s->numZ = 0;
         LA    5,76(0,2)   ; offset of numZ in 0000001
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of numZ in 0000001
* ***      s->state_out_pos = 0;
         LA    5,80(0,2)   ; offset of state_out_pos in 0000001
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of state_out_pos in 0000001
* ***      { s->blockCRC = 0xffffffffL; };
         LA    5,608(0,2)  ; offset of blockCRC in 0000001
         L     6,@lit_31_6
         ST    6,0(0,5)    ; offset of blockCRC in 0000001
* ***      # 140
* ***   for (i = 0; i < 256; i++) s->inUseÝi¨ = ((Bool)0);
         LA    3,0(0,0)    ; i
         B     @L5
         DS    0D
@lit_31_6  DC F'-1' 0xffffffff
@FRAMESIZE_31  DC F'112'
@lit_31_7  DC F'1' 0x00000001
@lit_31_8  DC F'256' 0x00000100
@L4      DS    0H
         LA    4,88(0,2)   ; offset of inUse in 0000001
         LR    5,3
         LA    4,0(4,5)
         LA    5,0(0,0)
         STC   5,0(0,4)
         A     3,@lit_31_7
@L5      DS    0H
         C     3,@lit_31_8
         BL    @L4
* ***      s->blockNo++;
         LA    4,620(0,2)  ; offset of blockNo in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_31_7
         ST    4,0(0,5)
* ***   }
@ret_lab_31 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "prepnblk"
*      (FUNCTION #31)
*
@AUTO#prepnblk DSECT
         DS    XL104
prepnblk#i#0 DS 1F         ; i
*
@BZLIB01 CSECT
*
*
*
initrl   #PROLOG CINDEX=32,BASER=12,FRAME=96,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***      s->state_in_ch = 256;
         LA    4,52(0,2)   ; offset of state_in_ch in 0000001
         LA    5,256(0,0)
         ST    5,0(0,4)    ; offset of state_in_ch in 0000001
* ***      s->state_in_len = 0;
         LA    4,56(0,2)   ; offset of state_in_len in 0000001
         LA    5,0(0,0)
         ST    5,0(0,4)    ; offset of state_in_len in 0000001
* ***   }
@ret_lab_32 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
         DS    0D
@FRAMESIZE_32  DC F'96'
*
*   DSECT for automatic variables in "initrl"
*      (FUNCTION #32)
*
@AUTO#initrl DSECT
         DS    XL96
*
@BZLIB01 CSECT
*
*
*
ismtyrl  #PROLOG CINDEX=33,BASER=12,FRAME=96,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***      if (s->state_in_ch < 256 && s->state_in_len > 0)
         LA    4,52(0,2)   ; offset of state_in_ch in 0000001
         L     5,0(0,4)
         CL    5,@lit_33_12
         BNL   @L8
         LA    4,56(0,2)   ; offset of state_in_len in 0000001
         L     5,0(0,4)
         LTR   5,5
         BNH   @L8
@@gen_label3 DS 0H
* ***         return ((Bool)0); else
         LA    15,0(0,0)
         B     @ret_lab_33
         DS    0D
@lit_33_12  DC F'256' 0x00000100
@FRAMESIZE_33  DC F'96'
* ***         return ((Bool)1);
@L8      DS    0H
         LA    15,1(0,0)
         B     @ret_lab_33
* ***   }
@ret_lab_33 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "ismtyrl"
*      (FUNCTION #33)
*
@AUTO#ismtyrl DSECT
         DS    XL96
*
@BZLIB01 CSECT
*
*
*
bzcompi  #PROLOG CINDEX=10,BASER=12,FRAME=136,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     5,4(0,1)
         L     4,12(0,1)
         L     2,0(0,1)
         LR    3,2
* ***      Int32 n;
* ***      EState* s;
* ***
* ***   if (!bzcfgok()) return (-9);
         L     15,@lit_10_14 ; bzcfgok
         BALR  14,15
         LTR   15,15
         BNZ   @L10
         L     15,@lit_10_15
         B     @ret_lab_10
         DS    0D
@lit_10_14  DC A(bzcfgok)
@FRAMESIZE_10  DC F'136'
@lit_10_15  DC F'-9' 0xfffffff7
@lit_10_16  DC F'1' 0x00000001
@lit_10_17  DC F'9' 0x00000009
@lit_10_18  DC F'250' 0x000000fa
@lit_10_19  DC F'-2' 0xfffffffe
@lit_10_20  DC A(defbza)
@lit_10_21  DC A(defbzf)
@lit_10_22  DC F'55728' 0x0000d9b0
@lit_10_23  DC F'-3' 0xfffffffd
@lit_10_26  DC F'262148' 0x00040004
@lit_10_25  DC F'34' 0x00000022
@lit_10_24  DC F'100000' 0x000186a0
@lit_10_31  DC A(prepnblk)
@lit_10_30  DC A(initrl)
@lit_10_29  DC F'19' 0x00000013
* ***
* ***   if (strm == 0 ||
@L10     DS    0H
* ***          blockSize100k < 1 || blockSize100k > 9 ||
* ***          workFactor < 0 || workFactor > 250)
         LR    6,3         ; #0
         LA    7,0(0,0)
         CR    6,7
         BE    @@gen_label12
         C     5,@lit_10_16
         BL    @@gen_label12
@@gen_label7 DS 0H
         C     5,@lit_10_17
         BH    @@gen_label12
@@gen_label9 DS 0H
         LTR   4,4
         BL    @@gen_label12
@@gen_label11 DS 0H
         C     4,@lit_10_18
         BNH   @L11
@@gen_label12 DS 0H
* ***        return (-2);
         L     15,@lit_10_19
         B     @ret_lab_10
* ***
* ***   if (workFactor == 0) workFactor = 30;
@L11     DS    0H
         LTR   4,4
         BNE   @L12
         LA    4,30(0,0)   ; workFactor
* ***      if (strm->bzalloc == 0) strm->bzalloc = defbza;
@L12     DS    0H
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L13
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,@lit_10_20
         ST    7,0(0,6)    ; offset of bzalloc in 0000000
* ***      if (strm->bzfree == 0) strm->bzfree = defbzf;
@L13     DS    0H
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L14
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,@lit_10_21
         ST    7,0(0,6)    ; offset of bzfree in 0000000
* ***
* ***   s = (strm->bzalloc)(strm->opaque,(sizeof(EState)),1);
@L14     DS    0H
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         L     6,@lit_10_22
         LA    8,1(0,0)
         ST    7,120(0,13)
         ST    6,124(0,13)
         ST    8,128(0,13)
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LR    2,15        ; s
* ***      if (s == 0) return (-3);
         LR    7,2         ; #0
         LA    8,0(0,0)
         CR    7,8
         BNE   @L15
         L     15,@lit_10_23
         B     @ret_lab_10
* ***      s->strm = strm;
@L15     DS    0H
         LR    6,2         ; strm
         LR    7,3
         ST    7,0(0,6)    ; s
* ***
* ***   s->arr1 = 0;
         LA    6,16(0,2)   ; offset of arr1 in 0000001
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of arr1 in 0000001
* ***      s->arr2 = 0;
         LA    6,20(0,2)   ; offset of arr2 in 0000001
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of arr2 in 0000001
* ***      s->ftab = 0;
         LA    6,24(0,2)   ; offset of ftab in 0000001
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of ftab in 0000001
* ***
* ***   n = 100000 * blockSize100k;
         LR    6,5
         L     10,@lit_10_24
         LR    11,6
         MR    10,10
         ST    11,112(0,13) ; n
* ***      s->arr1 = (strm->bzalloc)(strm->opaque,(n * sizeof(UInt32))\
* ,1);
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         SLL   11,2(0)
         LA    6,1(0,0)
         ST    7,120(0,13)
         ST    11,124(0,13)
         ST    6,128(0,13)
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LA    7,16(0,2)   ; offset of arr1 in 0000001
         ST    15,0(0,7)   ; offset of arr1 in 0000001
* ***      s->arr2 = (strm->bzalloc)(strm->opaque,((n+(2 + 12 + 18 + 2\
* )) * sizeof(UInt32)),1);
         LA    7,44(0,3)   ; offset of opaque in 0000000
         L     8,0(0,7)
         L     7,112(0,13) ; n
         A     7,@lit_10_25
         SLL   7,2(0)
         LA    9,1(0,0)
         ST    8,120(0,13)
         ST    7,124(0,13)
         ST    9,128(0,13)
         LA    7,36(0,3)   ; offset of bzalloc in 0000000
         L     8,0(0,7)
         LA    1,120(0,13)
         LR    15,8
         BALR  14,15
         LA    7,20(0,2)   ; offset of arr2 in 0000001
         ST    15,0(0,7)   ; offset of arr2 in 0000001
* ***      s->ftab = (strm->bzalloc)(strm->opaque,(65537 * sizeof(UInt\
* 32)),1);
         LA    7,44(0,3)   ; offset of opaque in 0000000
         L     8,0(0,7)
         L     7,@lit_10_26
         LA    9,1(0,0)
         ST    8,120(0,13)
         ST    7,124(0,13)
         ST    9,128(0,13)
         LA    7,36(0,3)   ; offset of bzalloc in 0000000
         L     8,0(0,7)
         LA    1,120(0,13)
         LR    15,8
         BALR  14,15
         LA    7,24(0,2)   ; offset of ftab in 0000001
         ST    15,0(0,7)   ; offset of ftab in 0000001
* ***
* ***   if (s->arr1 == 0 || s->arr2 == 0 || s->ftab == 0) {
         LA    7,16(0,2)   ; offset of arr1 in 0000001
         L     8,0(0,7)
         LA    7,0(0,0)
         CR    8,7
         BE    @@gen_label20
         LA    7,20(0,2)   ; offset of arr2 in 0000001
         L     8,0(0,7)
         LA    7,0(0,0)
         CR    8,7
         BE    @@gen_label20
@@gen_label19 DS 0H
         LA    6,24(0,2)   ; offset of ftab in 0000001
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L16
@@gen_label20 DS 0H
* ***         if (s->arr1 != 0) (strm->bzfree)(strm->opaque,(s->arr1))\
* ;
         LA    6,16(0,2)   ; offset of arr1 in 0000001
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BE    @L17
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         LA    6,16(0,2)   ; offset of arr1 in 0000001
         L     8,0(0,6)
         STM   7,8,120(13)
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
* ***         if (s->arr2 != 0) (strm->bzfree)(strm->opaque,(s->arr2))\
* ;
@L17     DS    0H
         LA    6,20(0,2)   ; offset of arr2 in 0000001
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BE    @L18
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         LA    6,20(0,2)   ; offset of arr2 in 0000001
         L     8,0(0,6)
         STM   7,8,120(13)
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
* ***         if (s->ftab != 0) (strm->bzfree)(strm->opaque,(s->ftab))\
* ;
@L18     DS    0H
         LA    6,24(0,2)   ; offset of ftab in 0000001
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BE    @L19
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         LA    6,24(0,2)   ; offset of ftab in 0000001
         L     8,0(0,6)
         STM   7,8,120(13)
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
* ***         if (s != 0) (strm->bzfree)(strm->opaque,(s));
@L19     DS    0H
         LR    6,2         ; #0
         LA    7,0(0,0)
         CR    6,7
         BE    @L20
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         LR    6,2
         ST    7,120(0,13)
         ST    6,124(0,13)
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
* ***         return (-3);
@L20     DS    0H
         L     15,@lit_10_23
         B     @ret_lab_10
* ***      }
* ***
* ***   s->blockNo = 0;
@L16     DS    0H
         LA    6,620(0,2)  ; offset of blockNo in 0000001
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of blockNo in 0000001
* ***      s->state = 2;
         LA    6,8(0,2)    ; offset of state in 0000001
         LA    7,2(0,0)
         ST    7,0(0,6)    ; offset of state in 0000001
* ***      s->mode = 2;
         LA    6,4(0,2)    ; offset of mode in 0000001
         LA    7,2(0,0)
         ST    7,0(0,6)    ; offset of mode in 0000001
* ***      s->combinedCRC = 0;
         LA    6,612(0,2)  ; offset of combinedCRC in 0000001
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of combinedCRC in 0000001
* ***      s->blockSize100k = blockSize100k;
         LA    6,624(0,2)  ; offset of blockSize100k in 0000001
         ST    5,0(0,6)    ; offset of blockSize100k in 0000001
* ***      s->nblockMAX = 100000 * blockSize100k - 19;
         LA    6,72(0,2)   ; offset of nblockMAX in 0000001
         LR    7,5
         L     10,@lit_10_24
         LR    11,7
         MR    10,10
         S     11,@lit_10_29
         ST    11,0(0,6)   ; offset of nblockMAX in 0000001
* ***      s->verbosity = verbosity;
         LA    6,616(0,2)  ; offset of verbosity in 0000001
         L     7,80(0,13)
         L     8,8(0,7)    ; verbosity
         ST    8,0(0,6)    ; offset of verbosity in 0000001
* ***      s->workFactor = workFactor;
         LA    6,48(0,2)   ; offset of workFactor in 0000001
         ST    4,0(0,6)    ; offset of workFactor in 0000001
* ***
* ***   s->block = (UChar*)s->arr2;
         LA    6,36(0,2)   ; offset of block in 0000001
         LA    8,20(0,2)   ; offset of arr2 in 0000001
         L     9,0(0,8)
         ST    9,0(0,6)    ; offset of block in 0000001
* ***      s->mtfv = (UInt16*)s->arr1;
         LA    6,40(0,2)   ; offset of mtfv in 0000001
         LA    8,16(0,2)   ; offset of arr1 in 0000001
         L     9,0(0,8)
         ST    9,0(0,6)    ; offset of mtfv in 0000001
* ***      s->zbits = 0;
         LA    6,44(0,2)   ; offset of zbits in 0000001
         LA    8,0(0,0)
         ST    8,0(0,6)    ; offset of zbits in 0000001
* ***      s->ptr = (UInt32*)s->arr1;
         LA    6,32(0,2)   ; offset of ptr in 0000001
         LA    8,16(0,2)   ; offset of arr1 in 0000001
         L     9,0(0,8)
         ST    9,0(0,6)    ; offset of ptr in 0000001
* ***
* ***   strm->state = s;
         LA    6,32(0,3)   ; offset of state in 0000000
         LR    8,2
         ST    8,0(0,6)    ; offset of state in 0000000
* ***      strm->total_in_lo32 = 0;
         LA    6,8(0,3)    ; offset of total_in_lo32 in 0000000
         LA    8,0(0,0)
         ST    8,0(0,6)    ; offset of total_in_lo32 in 0000000
* ***      strm->total_in_hi32 = 0;
         LA    6,12(0,3)   ; offset of total_in_hi32 in 0000000
         LA    8,0(0,0)
         ST    8,0(0,6)    ; offset of total_in_hi32 in 0000000
* ***      strm->total_out_lo32 = 0;
         LA    6,24(0,3)   ; offset of total_out_lo32 in 0000000
         LA    8,0(0,0)
         ST    8,0(0,6)    ; offset of total_out_lo32 in 0000000
* ***      strm->total_out_hi32 = 0;
         LA    6,28(0,3)   ; offset of total_out_hi32 in 0000000
         LA    8,0(0,0)
         ST    8,0(0,6)    ; offset of total_out_hi32 in 0000000
* ***      initrl ( s );
         LR    6,2
         ST    6,120(0,13)
         LA    1,120(0,13)
         L     15,@lit_10_30 ; initrl
         BALR  14,15
* ***      prepnblk ( s );
         LR    6,2
         ST    6,120(0,13)
         LA    1,120(0,13)
         L     15,@lit_10_31 ; prepnblk
         BALR  14,15
* ***      return 0;
         LA    15,0(0,0)
         B     @ret_lab_10
* ***   }
@ret_lab_10 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzcompi"
*      (FUNCTION #10)
*
@AUTO#bzcompi DSECT
         DS    XL112
bzcompi#n#0 DS 1F          ; n
bzcompi#s#0 DS 1A          ; s
*
@BZLIB01 CSECT
*
*
*
addp2b   #PROLOG CINDEX=34,BASER=12,FRAME=120,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     4,0(0,1)
         LR    2,4
* ***      Int32 i;
* ***      UChar ch = (UChar)(s->state_in_ch);
         LA    5,52(0,2)   ; offset of state_in_ch in 0000001
         L     6,0(0,5)
         STC   6,116(0,13) ; ch
* ***      for (i = 0; i < s->state_in_len; i++) {
         LA    3,0(0,0)    ; i
         B     @L22
         DS    0D
@FRAMESIZE_34  DC F'120'
@lit_34_35  DC F'1' 0x00000001
@lit_34_34  DC A(bzcrctab)
@lit_34_33  DC F'0' 0x00000000
@lit_34_47  DC F'4' 0x00000004
@lit_34_51  DC F'2' 0x00000002
@lit_34_52  DC F'3' 0x00000003
@L21     DS    0H
* ***         { s->blockCRC = (s->blockCRC << 8) ¬ bzcrctabÝ(s->blockC\
* RC >> 24) ¬ ((UChar)ch)¨; };
         LA    4,608(0,2)  ; offset of blockCRC in 0000001
         LA    5,608(0,2)  ; offset of blockCRC in 0000001
         L     6,0(0,5)
         SLL   6,8(0)
         LA    5,608(0,2)  ; offset of blockCRC in 0000001
         L     7,0(0,5)
         SRL   7,24(0)
         IC    5,116(0,13) ; ch
         ICM   5,B'1110',@lit_34_33
         XR    7,5
         L     5,@lit_34_34
         SLL   7,2(0)
         LA    7,0(7,5)
         L     5,0(0,7)
         XR    6,5
         ST    6,0(0,4)    ; offset of blockCRC in 0000001
* ***      # 238
* ***   }
         A     3,@lit_34_35
@L22     DS    0H
         LA    4,56(0,2)   ; offset of state_in_len in 0000001
         L     5,0(0,4)
         CR    3,5
         BL    @L21
* ***      s->inUseÝs->state_in_ch¨ = ((Bool)1);
         LA    4,88(0,2)   ; offset of inUse in 0000001
         LA    5,52(0,2)   ; offset of state_in_ch in 0000001
         L     6,0(0,5)
         LA    4,0(4,6)
         LA    5,1(0,0)
         STC   5,0(0,4)
* ***      switch (s->state_in_len) {
         B     @L25
* ***         case 1:
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
@L27     DS    0H
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            break;
         B     @ret_lab_34
* ***         case 2:
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
@L28     DS    0H
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            break;
         B     @ret_lab_34
* ***         case 3:
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
@L29     DS    0H
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            break;
         B     @ret_lab_34
* ***         default:
* ***            s->inUseÝs->state_in_len-4¨ = ((Bool)1);
@L30     DS    0H
         LA    4,88(0,2)   ; offset of inUse in 0000001
         LA    5,56(0,2)   ; offset of state_in_len in 0000001
         L     6,0(0,5)
         S     6,@lit_34_47
         LA    4,0(4,6)
         LA    5,1(0,0)
         STC   5,0(0,4)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         IC    4,116(0,13) ; ch
         STC   4,0(0,5)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            s->blockÝs->nblock¨ = ((UChar)(s->state_in_len-4));
         LA    4,36(0,2)   ; offset of block in 0000001
         L     5,0(0,4)
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     6,0(0,4)
         LA    5,0(5,6)
         LA    4,56(0,2)   ; offset of state_in_len in 0000001
         L     6,0(0,4)
         S     6,@lit_34_47
         STC   6,0(0,5)
* ***            s->nblock++;
         LA    4,68(0,2)   ; offset of nblock in 0000001
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_34_35
         ST    4,0(0,5)
* ***            break;
         B     @ret_lab_34
* ***      }
* ***   }
@L25     DS    0H
         LA    4,56(0,2)   ; offset of state_in_len in 0000001
         L     5,0(0,4)
         C     5,@lit_34_35
         BL    @L30
         C     5,@lit_34_35
         BE    @L27
         C     5,@lit_34_51
         BE    @L28
         C     5,@lit_34_52
         BE    @L29
         B     @L30
@ret_lab_34 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "addp2b"
*      (FUNCTION #34)
*
@AUTO#addp2b DSECT
         DS    XL112
addp2b#i#0 DS  1F          ; i
addp2b#ch#0 DS 1CL1        ; ch
*
@BZLIB01 CSECT
*
*
*
flushrl  #PROLOG CINDEX=35,BASER=12,FRAME=104,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***      if (s->state_in_ch < 256) addp2b ( s );
         LA    4,52(0,2)   ; offset of state_in_ch in 0000001
         L     5,0(0,4)
         CL    5,@lit_35_54
         BNL   @L31
         LR    4,2
         ST    4,96(0,13)
         LA    1,96(0,13)
         L     15,@lit_35_55 ; addp2b
         BALR  14,15
* ***      initrl ( s );
@L31     DS    0H
         LR    3,2
         ST    3,96(0,13)
         LA    1,96(0,13)
         L     15,@lit_35_56 ; initrl
         BALR  14,15
* ***   }
@ret_lab_35 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
         DS    0D
@lit_35_54  DC F'256' 0x00000100
@FRAMESIZE_35  DC F'104'
@lit_35_55  DC A(addp2b)
@lit_35_56  DC A(initrl)
*
*   DSECT for automatic variables in "flushrl"
*      (FUNCTION #35)
*
@AUTO#flushrl DSECT
         DS    XL96
*
@BZLIB01 CSECT
*
*
*
cpyistop #PROLOG CINDEX=36,BASER=12,FRAME=136,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
* ***      Bool progress_in = ((Bool)0);
         MVI   112(13),0   ; progress_in
* ***
* ***   if (s->mode == 2) {
         L     2,0(0,1)    ; s
         LA    2,4(0,2)    ; offset of mode in 0000001
         L     3,0(0,2)
         C     3,@lit_36_58
         BNE   @L46
* ***
* ***
* ***   while (((Bool)1)) {
@L33     DS    0H
* ***
* ***   if (s->nblock >= s->nblockMAX) break;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,68(0,3)   ; offset of nblock in 0000001
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,72(0,3)   ; offset of nblockMAX in 0000001
         L     5,0(0,3)
         CR    4,5
         BL    @L37
         B     @L45
         DS    0D
@lit_36_58  DC F'2' 0x00000002
@FRAMESIZE_36  DC F'136'
@lit_36_59  DC F'0' 0x00000000
@lit_36_60  DC F'1' 0x00000001
@lit_36_62  DC A(bzcrctab)
@lit_36_64  DC F'255' 0x000000ff
@lit_36_65  DC F'256' 0x00000100
@lit_36_66  DC A(addp2b)
* ***
* ***   if (s->strm->avail_in == 0) break;
@L37     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of avail_in in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L38
         B     @L45
* ***            progress_in = ((Bool)1);
@L38     DS    0H
         MVI   112(13),1   ; progress_in
* ***            { UInt32 zchh = (UInt32)((UInt32)(*((UChar*)(s->strm-\
* >next_in)))); if (zchh != s->state_in_ch && s->state_in_len == 1) { \
* UChar ch = (UChar)(s->state_in_ch); { s->blockCRC = (s->blockCRC << \
* 8) ¬ bzcrctabÝ(s->blockCRC >> 24) ¬ ((UChar)ch)¨; }; s->inUseÝs->sta\
* te_in_ch¨ = ((Bool)1); s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;\
*  s->state_in_ch = zchh; } else if (zchh != s->state_in_ch || s->stat\
* e_in_len == 255) { if (s->state_in_ch < 256) addp2b ( s ); s->state_\
* in_ch = zchh; s->state_in_len = 1; } else { s->state_in_len++; } };
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         L     5,0(0,4)
         IC    4,0(0,5)
         ICM   4,B'1110',@lit_36_59
         ST    4,116(0,13) ; zchh
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     5,0(0,3)
         CLR   4,5
         BE    @L39
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of state_in_len in 0000001
         L     5,0(0,3)
         C     5,@lit_36_60
         BNE   @L39
@@gen_label32 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,0(0,3)
         STC   4,120(0,13) ; ch
         L     3,0(0,2)    ; s
         LA    3,608(0,3)  ; offset of blockCRC in 0000001
         L     5,0(0,2)    ; s
         LA    5,608(0,5)  ; offset of blockCRC in 0000001
         L     6,0(0,5)
         SLL   6,8(0)
         L     5,0(0,2)    ; s
         LA    5,608(0,5)  ; offset of blockCRC in 0000001
         L     7,0(0,5)
         SRL   7,24(0)
         IC    5,120(0,13) ; ch
         ICM   5,B'1110',@lit_36_59
         XR    7,5
         L     5,@lit_36_62
         SLL   7,2(0)
         LA    7,0(7,5)
         L     5,0(0,7)
         XR    6,5
         ST    6,0(0,3)    ; offset of blockCRC in 0000001
         L     3,0(0,2)    ; s
         LA    3,88(0,3)   ; offset of inUse in 0000001
         L     5,0(0,2)    ; s
         LA    5,52(0,5)   ; offset of state_in_ch in 0000001
         L     6,0(0,5)
         LA    3,0(3,6)
         LA    5,1(0,0)
         STC   5,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,36(0,3)   ; offset of block in 0000001
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,68(0,3)   ; offset of nblock in 0000001
         L     5,0(0,3)
         LA    4,0(4,5)
         IC    3,120(0,13) ; ch
         STC   3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,68(0,3)   ; offset of nblock in 0000001
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_36_60
         ST    3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,116(0,13) ; zchh
         ST    4,0(0,3)    ; offset of state_in_ch in 0000001
         B     @L40
@L39     DS    0H
         L     2,116(0,13) ; zchh
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,52(0,4)   ; offset of state_in_ch in 0000001
         L     5,0(0,4)
         CLR   2,5
         BNE   @@gen_label34
         L     4,0(0,3)    ; s
         LA    4,56(0,4)   ; offset of state_in_len in 0000001
         L     5,0(0,4)
         C     5,@lit_36_64
         BNE   @L41
@@gen_label34 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,0(0,3)
         CL    4,@lit_36_65
         BNL   @L42
         L     3,0(0,2)    ; s
         ST    3,128(0,13)
         LA    1,128(0,13)
         L     15,@lit_36_66 ; addp2b
         BALR  14,15
@L42     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,116(0,13) ; zchh
         ST    4,0(0,3)    ; offset of state_in_ch in 0000001
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of state_in_len in 0000001
         LA    4,1(0,0)
         ST    4,0(0,3)    ; offset of state_in_len in 0000001
         B     @L40
@L41     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of state_in_len in 0000001
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_36_60
         ST    3,0(0,4)
@L40     DS    0H
* ***            # 319
* ***   s->strm->next_in++;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         LA    4,1(0,4)
         ST    4,0(0,5)
* ***            s->strm->avail_in--;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of avail_in in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
* ***            s->strm->total_in_lo32++;
         L     4,0(0,3)
         LA    4,8(0,4)    ; offset of total_in_lo32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_36_60
         ST    4,0(0,5)
* ***            if (s->strm->total_in_lo32 == 0) s->strm->total_in_hi\
* 32++;
         L     4,0(0,3)
         LA    4,8(0,4)    ; offset of total_in_lo32 in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L33
         L     4,0(0,3)
         LA    4,12(0,4)   ; offset of total_in_hi32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_36_60
         ST    4,0(0,5)
* ***         }
         B     @L33
@L35     DS    0H
* ***
* ***   } else {
@L32     DS    0H
* ***
* ***
* ***   while (((Bool)1)) {
@L46     DS    0H
* ***
* ***   if (s->nblock >= s->nblockMAX) break;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,68(0,3)   ; offset of nblock in 0000001
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,72(0,3)   ; offset of nblockMAX in 0000001
         L     5,0(0,3)
         CR    4,5
         BL    @L50
         B     @L45
* ***
* ***   if (s->strm->avail_in == 0) break;
@L50     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of avail_in in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L51
         B     @L45
* ***
* ***   if (s->avail_in_expect == 0) break;
@L51     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of avail_in_expect in 0000001
         L     4,0(0,3)
         LTR   4,4
         BNE   @L52
         B     @L45
* ***            progress_in = ((Bool)1);
@L52     DS    0H
         MVI   112(13),1   ; progress_in
* ***            { UInt32 zchh = (UInt32)((UInt32)(*((UChar*)(s->strm-\
* >next_in)))); if (zchh != s->state_in_ch && s->state_in_len == 1) { \
* UChar ch = (UChar)(s->state_in_ch); { s->blockCRC = (s->blockCRC << \
* 8) ¬ bzcrctabÝ(s->blockCRC >> 24) ¬ ((UChar)ch)¨; }; s->inUseÝs->sta\
* te_in_ch¨ = ((Bool)1); s->blockÝs->nblock¨ = (UChar)ch; s->nblock++;\
*  s->state_in_ch = zchh; } else if (zchh != s->state_in_ch || s->stat\
* e_in_len == 255) { if (s->state_in_ch < 256) addp2b ( s ); s->state_\
* in_ch = zchh; s->state_in_len = 1; } else { s->state_in_len++; } };
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         L     5,0(0,4)
         IC    4,0(0,5)
         ICM   4,B'1110',@lit_36_59
         ST    4,116(0,13) ; zchh
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     5,0(0,3)
         CLR   4,5
         BE    @L53
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of state_in_len in 0000001
         L     5,0(0,3)
         C     5,@lit_36_60
         BNE   @L53
@@gen_label43 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,0(0,3)
         STC   4,120(0,13) ; ch
         L     3,0(0,2)    ; s
         LA    3,608(0,3)  ; offset of blockCRC in 0000001
         L     5,0(0,2)    ; s
         LA    5,608(0,5)  ; offset of blockCRC in 0000001
         L     6,0(0,5)
         SLL   6,8(0)
         L     5,0(0,2)    ; s
         LA    5,608(0,5)  ; offset of blockCRC in 0000001
         L     7,0(0,5)
         SRL   7,24(0)
         IC    5,120(0,13) ; ch
         ICM   5,B'1110',@lit_36_59
         XR    7,5
         L     5,@lit_36_62
         SLL   7,2(0)
         LA    7,0(7,5)
         L     5,0(0,7)
         XR    6,5
         ST    6,0(0,3)    ; offset of blockCRC in 0000001
         L     3,0(0,2)    ; s
         LA    3,88(0,3)   ; offset of inUse in 0000001
         L     5,0(0,2)    ; s
         LA    5,52(0,5)   ; offset of state_in_ch in 0000001
         L     6,0(0,5)
         LA    3,0(3,6)
         LA    5,1(0,0)
         STC   5,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,36(0,3)   ; offset of block in 0000001
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,68(0,3)   ; offset of nblock in 0000001
         L     5,0(0,3)
         LA    4,0(4,5)
         IC    3,120(0,13) ; ch
         STC   3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,68(0,3)   ; offset of nblock in 0000001
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_36_60
         ST    3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,116(0,13) ; zchh
         ST    4,0(0,3)    ; offset of state_in_ch in 0000001
         B     @L54
@L53     DS    0H
         L     2,116(0,13) ; zchh
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,52(0,4)   ; offset of state_in_ch in 0000001
         L     5,0(0,4)
         CLR   2,5
         BNE   @@gen_label45
         L     4,0(0,3)    ; s
         LA    4,56(0,4)   ; offset of state_in_len in 0000001
         L     5,0(0,4)
         C     5,@lit_36_64
         BNE   @L55
@@gen_label45 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,0(0,3)
         CL    4,@lit_36_65
         BNL   @L56
         L     3,0(0,2)    ; s
         ST    3,128(0,13)
         LA    1,128(0,13)
         L     15,@lit_36_66 ; addp2b
         BALR  14,15
@L56     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,52(0,3)   ; offset of state_in_ch in 0000001
         L     4,116(0,13) ; zchh
         ST    4,0(0,3)    ; offset of state_in_ch in 0000001
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of state_in_len in 0000001
         LA    4,1(0,0)
         ST    4,0(0,3)    ; offset of state_in_len in 0000001
         B     @L54
@L55     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of state_in_len in 0000001
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_36_60
         ST    3,0(0,4)
@L54     DS    0H
* ***            # 337
* ***   s->strm->next_in++;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         LA    4,1(0,4)
         ST    4,0(0,5)
* ***            s->strm->avail_in--;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,4(0,4)    ; offset of avail_in in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
* ***            s->strm->total_in_lo32++;
         L     4,0(0,3)
         LA    4,8(0,4)    ; offset of total_in_lo32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_36_60
         ST    4,0(0,5)
* ***            if (s->strm->total_in_lo32 == 0) s->strm->total_in_hi\
* 32++;
         L     4,0(0,3)
         LA    4,8(0,4)    ; offset of total_in_lo32 in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L58
         L     4,0(0,3)
         LA    4,12(0,4)   ; offset of total_in_hi32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_36_60
         ST    4,0(0,5)
* ***            s->avail_in_expect--;
@L58     DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of avail_in_expect in 0000001
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***         }
         B     @L46
@L48     DS    0H
* ***      }
* ***      return progress_in;
@L45     DS    0H
         IC    2,112(0,13) ; progress_in
         LR    15,2
         ICM   15,B'1110',@lit_36_59
         B     @ret_lab_36
* ***   }
@ret_lab_36 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "cpyistop"
*      (FUNCTION #36)
*
@AUTO#cpyistop DSECT
         DS    XL112
cpyistop#progress_in#0 DS 1CL1 ; progress_in
         ORG   @AUTO#cpyistop+116
cpyistop#zchh#3 DS 1F      ; zchh
         ORG   @AUTO#cpyistop+116
cpyistop#zchh#10 DS 1F     ; zchh
cpyistop#ch#4 DS 1CL1      ; ch
         ORG   @AUTO#cpyistop+120
cpyistop#ch#11 DS 1CL1     ; ch
*
@BZLIB01 CSECT
*
*
*
cpyostop #PROLOG CINDEX=37,BASER=12,FRAME=112,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     3,0(0,1)
         LR    2,3
* ***      Bool progress_out = ((Bool)0);
         MVI   104(13),0   ; progress_out
* ***
* ***   while (((Bool)1)) {
@L59     DS    0H
* ***
* ***
* ***   if (s->strm->avail_out == 0) break;
         L     3,0(0,2)
         LA    3,20(0,3)   ; offset of avail_out in 0000000
         L     4,0(0,3)
         LTR   4,4
         BNE   @L63
         B     @L61
         DS    0D
@FRAMESIZE_37  DC F'112'
@lit_37_84  DC F'1' 0x00000001
@lit_37_86  DC F'0' 0x00000000
* ***
* ***
* ***   if (s->state_out_pos >= s->numZ) break;
@L63     DS    0H
         LA    3,80(0,2)   ; offset of state_out_pos in 0000001
         L     4,0(0,3)
         LA    3,76(0,2)   ; offset of numZ in 0000001
         L     5,0(0,3)
         CR    4,5
         BL    @L64
         B     @L61
* ***
* ***   progress_out = ((Bool)1);
@L64     DS    0H
         MVI   104(13),1   ; progress_out
* ***         *(s->strm->next_out) = s->zbitsÝs->state_out_pos¨;
         L     3,0(0,2)
         LA    3,16(0,3)   ; offset of next_out in 0000000
         L     4,0(0,3)
         LA    3,44(0,2)   ; offset of zbits in 0000001
         L     5,0(0,3)
         LA    3,80(0,2)   ; offset of state_out_pos in 0000001
         L     6,0(0,3)
         LA    5,0(5,6)
         IC    3,0(0,5)
         STC   3,0(0,4)
* ***         s->state_out_pos++;
         LA    3,80(0,2)   ; offset of state_out_pos in 0000001
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_37_84
         ST    3,0(0,4)
* ***         s->strm->avail_out--;
         L     3,0(0,2)
         LA    3,20(0,3)   ; offset of avail_out in 0000000
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***         s->strm->next_out++;
         L     3,0(0,2)
         LA    3,16(0,3)   ; offset of next_out in 0000000
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         LA    3,1(0,3)
         ST    3,0(0,4)
* ***         s->strm->total_out_lo32++;
         L     3,0(0,2)
         LA    3,24(0,3)   ; offset of total_out_lo32 in 0000000
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_37_84
         ST    3,0(0,4)
* ***         if (s->strm->total_out_lo32 == 0) s->strm->total_out_hi3\
* 2++;
         L     3,0(0,2)
         LA    3,24(0,3)   ; offset of total_out_lo32 in 0000000
         L     4,0(0,3)
         LTR   4,4
         BNE   @L59
         L     3,0(0,2)
         LA    3,28(0,3)   ; offset of total_out_hi32 in 0000000
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         AL    3,@lit_37_84
         ST    3,0(0,4)
* ***      }
         B     @L59
@L61     DS    0H
* ***
* ***   return progress_out;
         IC    3,104(0,13) ; progress_out
         LR    15,3
         ICM   15,B'1110',@lit_37_86
         B     @ret_lab_37
* ***   }
@ret_lab_37 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "cpyostop"
*      (FUNCTION #37)
*
@AUTO#cpyostop DSECT
         DS    XL104
cpyostop#progress_out#0 DS 1CL1 ; progress_out
*
@BZLIB01 CSECT
*
*
*
hancmp   #PROLOG CINDEX=38,BASER=12,FRAME=120,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    3,2
* ***      Bool progress_in = ((Bool)0);
         MVI   104(13),0   ; progress_in
* ***      Bool progress_out = ((Bool)0);
         MVI   105(13),0   ; progress_out
* ***      EState* s = strm->state;
         LA    4,32(0,3)   ; offset of state in 0000000
         L     5,0(0,4)
         LR    2,5         ; s
* ***
* ***   while (((Bool)1)) {
@L66     DS    0H
* ***
* ***   if (s->state == 1) {
         LA    4,8(0,2)    ; offset of state in 0000001
         L     5,0(0,4)
         C     5,@lit_38_88
         BNE   @L70
* ***            progress_out |= cpyostop ( s );
         LR    4,2
         ST    4,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_89 ; cpyostop
         BALR  14,15
         IC    4,105(0,13) ; progress_out
         ICM   4,B'1110',@lit_38_91
         LR    5,15
         ICM   5,B'1110',@lit_38_91
         OR    4,5
         STC   4,105(0,13) ; progress_out
* ***            if (s->state_out_pos < s->numZ) break;
         LA    5,80(0,2)   ; offset of state_out_pos in 0000001
         L     6,0(0,5)
         LA    5,76(0,2)   ; offset of numZ in 0000001
         L     7,0(0,5)
         CR    6,7
         BNL   @L71
         B     @L68
         DS    0D
@FRAMESIZE_38  DC F'120'
@lit_38_88  DC F'1' 0x00000001
@lit_38_91  DC F'0' 0x00000000
@lit_38_89  DC A(cpyostop)
@lit_38_92  DC F'4' 0x00000004
@lit_38_93  DC A(ismtyrl)
@lit_38_96  DC F'3' 0x00000003
@lit_38_95  DC A(prepnblk)
@lit_38_99  DC F'2' 0x00000002
@lit_38_100  DC A(cpyistop)
@lit_38_104  DC A(flushrl)
@lit_38_107  DC A(bzcmpblk)
* ***            if (s->mode == 4 &&
@L71     DS    0H
* ***                s->avail_in_expect == 0 &&
* ***                ismtyrl(s)) break;
         LA    4,4(0,2)    ; offset of mode in 0000001
         L     5,0(0,4)
         C     5,@lit_38_92
         BNE   @L72
         LA    4,12(0,2)   ; offset of avail_in_expect in 0000001
         L     5,0(0,4)
         LTR   5,5
         BNE   @L72
@@gen_label57 DS 0H
         LR    4,2
         ST    4,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_93 ; ismtyrl
         BALR  14,15
         LR    4,15
         ICM   4,B'1110',@lit_38_91
         LTR   4,4
         BNZ   @L68
         B     @L72
* ***            prepnblk ( s );
@L72     DS    0H
         LR    4,2
         ST    4,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_95 ; prepnblk
         BALR  14,15
* ***            s->state = 2;
         LA    4,8(0,2)    ; offset of state in 0000001
         LA    5,2(0,0)
         ST    5,0(0,4)    ; offset of state in 0000001
* ***            if (s->mode == 3 &&
* ***                s->avail_in_expect == 0 &&
* ***                ismtyrl(s)) break;
         LA    4,4(0,2)    ; offset of mode in 0000001
         L     5,0(0,4)
         C     5,@lit_38_96
         BNE   @L70
         LA    4,12(0,2)   ; offset of avail_in_expect in 0000001
         L     5,0(0,4)
         LTR   5,5
         BNE   @L70
@@gen_label62 DS 0H
         LR    4,2
         ST    4,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_93 ; ismtyrl
         BALR  14,15
         LR    4,15
         ICM   4,B'1110',@lit_38_91
         LTR   4,4
         BNZ   @L68
         B     @L70
* ***         }
@L73     DS    0H
* ***
* ***   if (s->state == 2) {
@L70     DS    0H
         LA    4,8(0,2)    ; offset of state in 0000001
         L     5,0(0,4)
         C     5,@lit_38_99
         BNE   @L66
* ***            progress_in |= cpyistop ( s );
         LR    4,2
         ST    4,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_100 ; cpyistop
         BALR  14,15
         IC    4,104(0,13) ; progress_in
         ICM   4,B'1110',@lit_38_91
         LR    5,15
         ICM   5,B'1110',@lit_38_91
         OR    4,5
         STC   4,104(0,13) ; progress_in
* ***            if (s->mode != 2 && s->avail_in_expect == 0) {
         LA    5,4(0,2)    ; offset of mode in 0000001
         L     6,0(0,5)
         C     6,@lit_38_99
         BE    @L75
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         L     6,0(0,5)
         LTR   6,6
         BNE   @L75
@@gen_label68 DS 0H
* ***               flushrl ( s );
         LR    4,2
         ST    4,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_104 ; flushrl
         BALR  14,15
* ***               bzcmpblk ( s, (Bool)(s->mode == 4) );
         LR    4,2
         LA    5,4(0,2)    ; offset of mode in 0000001
         L     6,0(0,5)
         C     6,@lit_38_92
         ST    4,88(0,13)
         BNE   @@gen_label70
         LA    4,1(0,0)
         B     @@gen_label71
@@gen_label70 DS 0H
         LA    4,0(0,0)
@@gen_label71 DS 0H
         L     5,88(0,13)
         ST    5,112(0,13)
         ICM   4,B'1110',@lit_38_91
         ST    4,116(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_107 ; bzcmpblk
         BALR  14,15
* ***               s->state = 1;
         LA    4,8(0,2)    ; offset of state in 0000001
         LA    5,1(0,0)
         ST    5,0(0,4)    ; offset of state in 0000001
* ***            }
* ***            else
* ***            if (s->nblock >= s->nblockMAX) {
         B     @L66
@L75     DS    0H
         LA    4,68(0,2)   ; offset of nblock in 0000001
         L     5,0(0,4)
         LA    4,72(0,2)   ; offset of nblockMAX in 0000001
         L     6,0(0,4)
         CR    5,6
         BL    @L77
* ***               bzcmpblk ( s, ((Bool)0) );
         LR    4,2
         LA    5,0(0,0)
         ST    4,112(0,13)
         ICM   5,B'1110',@lit_38_91
         ST    5,116(0,13)
         LA    1,112(0,13)
         L     15,@lit_38_107 ; bzcmpblk
         BALR  14,15
* ***               s->state = 1;
         LA    4,8(0,2)    ; offset of state in 0000001
         LA    5,1(0,0)
         ST    5,0(0,4)    ; offset of state in 0000001
* ***            }
* ***            else
* ***            if (s->strm->avail_in == 0) {
         B     @L66
@L77     DS    0H
         L     4,0(0,2)
         LA    4,4(0,4)    ; offset of avail_in in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L66
* ***               break;
         B     @L68
* ***            }
* ***         }
@L76     DS    0H
* ***
* ***   }
@L68     DS    0H
* ***
* ***   return progress_in || progress_out;
         IC    4,104(0,13) ; progress_in
         ICM   4,B'1110',@lit_38_91
         LTR   4,4
         BNZ   @@gen_label75
         IC    4,105(0,13) ; progress_out
         ICM   4,B'1110',@lit_38_91
         LTR   4,4
         BZ    @@gen_label76
@@gen_label75 DS 0H
         LA    4,1(0,0)
         B     @@gen_label77
@@gen_label76 DS 0H
         LA    4,0(0,0)
@@gen_label77 DS 0H
         LR    15,4
         ICM   15,B'1110',@lit_38_91
         B     @ret_lab_38
* ***   }
@ret_lab_38 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "hancmp"
*      (FUNCTION #38)
*
@AUTO#hancmp DSECT
         DS    XL104
hancmp#progress_in#0 DS 1CL1 ; progress_in
hancmp#progress_out#0 DS 1CL1 ; progress_out
         ORG   @AUTO#hancmp+108
hancmp#s#0 DS  1A          ; s
*
@BZLIB01 CSECT
*
*
*
bzcomp   #PROLOG CINDEX=11,BASER=12,FRAME=120,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     4,4(0,1)
         L     2,0(0,1)
         LR    3,2
* ***      Bool progress;
* ***      EState* s;
* ***      if (strm == 0) return (-2);
         LR    5,3         ; #0
         LA    6,0(0,0)
         CR    5,6
         BNE   @L80
         L     15,@lit_11_114
         B     @ret_lab_11
         DS    0D
@FRAMESIZE_11  DC F'120'
@lit_11_114  DC F'-2' 0xfffffffe
@lit_11_117  DC F'-1' 0xffffffff
@lit_11_119  DC F'0' 0x00000000
@lit_11_118  DC A(hancmp)
@lit_11_121  DC F'1' 0x00000001
@lit_11_122  DC F'2' 0x00000002
@lit_11_129  DC A(ismtyrl)
@lit_11_141  DC F'4' 0x00000004
* ***      s = strm->state;
@L80     DS    0H
         LA    5,32(0,3)   ; offset of state in 0000000
         L     6,0(0,5)
         LR    2,6         ; s
* ***      if (s == 0) return (-2);
         LR    5,2         ; #0
         LA    6,0(0,0)
         CR    5,6
         BNE   @L81
         L     15,@lit_11_114
         B     @ret_lab_11
* ***      if (s->strm != strm) return (-2);
@L81     DS    0H
         L     5,0(0,2)
         LR    6,3
         CR    5,6
         BE    @L83
         L     15,@lit_11_114
         B     @ret_lab_11
* ***
* ***   preswitch:
@L82     DS    0H
* ***      switch (s->mode) {
* ***
* ***   case 1:
* ***            return (-1);
@L85     DS    0H
         L     15,@lit_11_117
         B     @ret_lab_11
* ***
* ***   case 2:
* ***            if (action == 0) {
@L86     DS    0H
         LTR   4,4
         BNE   @L87
* ***               progress = hancmp ( strm );
         LR    5,3
         ST    5,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_11_118 ; hancmp
         BALR  14,15
         STC   15,104(0,13) ; progress
* ***               return progress ? 1 : (-2);
         IC    5,104(0,13) ; progress
         ICM   5,B'1110',@lit_11_119
         LTR   5,5
         BZ    @@gen_label83
         LA    5,1(0,0)
         B     @@gen_label84
@@gen_label83 DS 0H
         L     5,@lit_11_114
@@gen_label84 DS 0H
         LR    15,5
         B     @ret_lab_11
* ***            }
* ***            else
* ***       if (action == 1) {
@L87     DS    0H
         C     4,@lit_11_121
         BNE   @L89
* ***               s->avail_in_expect = strm->avail_in;
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         LA    6,4(0,3)    ; offset of avail_in in 0000000
         L     7,0(0,6)
         ST    7,0(0,5)    ; offset of avail_in_expect in 0000001
* ***               s->mode = 3;
         LA    5,4(0,2)    ; offset of mode in 0000001
         LA    6,3(0,0)
         ST    6,0(0,5)    ; offset of mode in 0000001
* ***               goto preswitch;
         B     @L83
* ***            }
* ***            else
* ***            if (action == 2) {
@L89     DS    0H
         C     4,@lit_11_122
         BNE   @L91
* ***               s->avail_in_expect = strm->avail_in;
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         LA    6,4(0,3)    ; offset of avail_in in 0000000
         L     7,0(0,6)
         ST    7,0(0,5)    ; offset of avail_in_expect in 0000001
* ***               s->mode = 4;
         LA    5,4(0,2)    ; offset of mode in 0000001
         LA    6,4(0,0)
         ST    6,0(0,5)    ; offset of mode in 0000001
* ***               goto preswitch;
         B     @L83
* ***            }
* ***            else
* ***               return (-2);
@L91     DS    0H
         L     15,@lit_11_114
         B     @ret_lab_11
* ***
* ***   case 3:
@L88     DS    0H
* ***            if (action != 1) return (-1);
@L93     DS    0H
         C     4,@lit_11_121
         BE    @L94
         L     15,@lit_11_117
         B     @ret_lab_11
* ***            if (s->avail_in_expect != s->strm->avail_in)
@L94     DS    0H
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         L     6,0(0,5)
         L     5,0(0,2)
         LA    5,4(0,5)    ; offset of avail_in in 0000000
         L     7,0(0,5)
         CLR   6,7
         BE    @L95
* ***               return (-1);
         L     15,@lit_11_117
         B     @ret_lab_11
* ***            progress = hancmp ( strm );
@L95     DS    0H
         LR    5,3
         ST    5,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_11_118 ; hancmp
         BALR  14,15
         STC   15,104(0,13) ; progress
* ***            if (s->avail_in_expect > 0 || !ismtyrl(s) ||
* ***                s->state_out_pos < s->numZ) return 2;
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         L     6,0(0,5)
         CL    6,@lit_11_119
         BH    @@gen_label91
         LR    5,2
         ST    5,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_11_129 ; ismtyrl
         BALR  14,15
         LR    5,15
         ICM   5,B'1110',@lit_11_119
         LTR   5,5
         BZ    @@gen_label91
@@gen_label90 DS 0H
         LA    5,80(0,2)   ; offset of state_out_pos in 0000001
         L     6,0(0,5)
         LA    5,76(0,2)   ; offset of numZ in 0000001
         L     7,0(0,5)
         CR    6,7
         BNL   @L96
@@gen_label91 DS 0H
         LA    15,2(0,0)
         B     @ret_lab_11
* ***            s->mode = 2;
@L96     DS    0H
         LA    5,4(0,2)    ; offset of mode in 0000001
         LA    6,2(0,0)
         ST    6,0(0,5)    ; offset of mode in 0000001
* ***            return 1;
         LA    15,1(0,0)
         B     @ret_lab_11
* ***
* ***   case 4:
* ***            if (action != 2) return (-1);
@L97     DS    0H
         C     4,@lit_11_122
         BE    @L98
         L     15,@lit_11_117
         B     @ret_lab_11
* ***            if (s->avail_in_expect != s->strm->avail_in)
@L98     DS    0H
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         L     6,0(0,5)
         L     5,0(0,2)
         LA    5,4(0,5)    ; offset of avail_in in 0000000
         L     7,0(0,5)
         CLR   6,7
         BE    @L99
* ***               return (-1);
         L     15,@lit_11_117
         B     @ret_lab_11
* ***            progress = hancmp ( strm );
@L99     DS    0H
         LR    5,3
         ST    5,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_11_118 ; hancmp
         BALR  14,15
         STC   15,104(0,13) ; progress
* ***            if (!progress) return (-1);
         IC    5,104(0,13) ; progress
         ICM   5,B'1110',@lit_11_119
         LTR   5,5
         BNZ   @L100
         L     15,@lit_11_117
         B     @ret_lab_11
* ***            if (s->avail_in_expect > 0 || !ismtyrl(s) ||
@L100    DS    0H
* ***                s->state_out_pos < s->numZ) return 3;
         LA    5,12(0,2)   ; offset of avail_in_expect in 0000001
         L     6,0(0,5)
         CL    6,@lit_11_119
         BH    @@gen_label98
         LR    5,2
         ST    5,112(0,13)
         LA    1,112(0,13)
         L     15,@lit_11_129 ; ismtyrl
         BALR  14,15
         LR    5,15
         ICM   5,B'1110',@lit_11_119
         LTR   5,5
         BZ    @@gen_label98
@@gen_label97 DS 0H
         LA    5,80(0,2)   ; offset of state_out_pos in 0000001
         L     6,0(0,5)
         LA    5,76(0,2)   ; offset of numZ in 0000001
         L     7,0(0,5)
         CR    6,7
         BNL   @L101
@@gen_label98 DS 0H
         LA    15,3(0,0)
         B     @ret_lab_11
* ***            s->mode = 1;
@L101    DS    0H
         LA    5,4(0,2)    ; offset of mode in 0000001
         LA    6,1(0,0)
         ST    6,0(0,5)    ; offset of mode in 0000001
* ***            return 4;
         LA    15,4(0,0)
         B     @ret_lab_11
* ***      }
* ***      return 0;
@L83     DS    0H
         LA    5,4(0,2)    ; offset of mode in 0000001
         L     6,0(0,5)
         C     6,@lit_11_121
         BL    @L84
         C     6,@lit_11_141
         BH    @L84
         S     6,@lit_11_121
         SLL   6,3(0)
         LA    5,@@gen_label100
         B     0(5,6)
@@gen_label100 DS    0H
         B     @L85
         DC    XL4'00000000'
         B     @L86
         DC    XL4'00000000'
         B     @L93
         DC    XL4'00000000'
         B     @L97
         DC    XL4'00000000'
@L84     DS    0H
         LA    15,0(0,0)
         B     @ret_lab_11
* ***   }
@ret_lab_11 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzcomp"
*      (FUNCTION #11)
*
@AUTO#bzcomp DSECT
         DS    XL104
bzcomp#progress#0 DS 1CL1  ; progress
         ORG   @AUTO#bzcomp+108
bzcomp#s#0 DS  1A          ; s
*
@BZLIB01 CSECT
*
*
*
bzcompe  #PROLOG CINDEX=12,BASER=12,FRAME=120,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     4,0(0,1)
         LR    2,4
* ***      EState* s;
* ***      if (strm == 0) return (-2);
         LR    5,2         ; #0
         LA    6,0(0,0)
         CR    5,6
         BNE   @L102
         L     15,@lit_12_145
         B     @ret_lab_12
         DS    0D
@FRAMESIZE_12  DC F'120'
@lit_12_145  DC F'-2' 0xfffffffe
* ***      s = strm->state;
@L102    DS    0H
         LA    4,32(0,2)   ; offset of state in 0000000
         L     5,0(0,4)
         LR    3,5         ; s
* ***      if (s == 0) return (-2);
         LR    4,3         ; #0
         LA    5,0(0,0)
         CR    4,5
         BNE   @L103
         L     15,@lit_12_145
         B     @ret_lab_12
* ***      if (s->strm != strm) return (-2);
@L103    DS    0H
         L     4,0(0,3)
         LR    5,2
         CR    4,5
         BE    @L104
         L     15,@lit_12_145
         B     @ret_lab_12
* ***
* ***   if (s->arr1 != 0) (strm->bzfree)(strm->opaque,(s->arr1));
@L104    DS    0H
         LA    4,16(0,3)   ; offset of arr1 in 0000001
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @L105
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,16(0,3)   ; offset of arr1 in 0000001
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***      if (s->arr2 != 0) (strm->bzfree)(strm->opaque,(s->arr2));
@L105    DS    0H
         LA    4,20(0,3)   ; offset of arr2 in 0000001
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @L106
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,20(0,3)   ; offset of arr2 in 0000001
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***      if (s->ftab != 0) (strm->bzfree)(strm->opaque,(s->ftab));
@L106    DS    0H
         LA    4,24(0,3)   ; offset of ftab in 0000001
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @L107
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,24(0,3)   ; offset of ftab in 0000001
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***      (strm->bzfree)(strm->opaque,(strm->state));
@L107    DS    0H
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,32(0,2)   ; offset of state in 0000000
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***
* ***   strm->state = 0;
         LA    5,32(0,2)   ; offset of state in 0000000
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of state in 0000000
* ***
* ***   return 0;
         LA    15,0(0,0)
         B     @ret_lab_12
* ***   }
@ret_lab_12 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzcompe"
*      (FUNCTION #12)
*
@AUTO#bzcompe DSECT
         DS    XL104
bzcompe#s#0 DS 1A          ; s
*
@BZLIB01 CSECT
*
*
*
bzdcompi #PROLOG CINDEX=13,BASER=12,FRAME=136,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     5,8(0,1)
         L     4,4(0,1)
         L     2,0(0,1)
         LR    3,2
* ***      DState* s;
* ***
* ***   if (!bzcfgok()) return (-9);
         L     15,@lit_13_149 ; bzcfgok
         BALR  14,15
         LTR   15,15
         BNZ   @L108
         L     15,@lit_13_150
         B     @ret_lab_13
         DS    0D
@lit_13_149  DC A(bzcfgok)
@FRAMESIZE_13  DC F'136'
@lit_13_150  DC F'-9' 0xfffffff7
@lit_13_151  DC F'-2' 0xfffffffe
@lit_13_152  DC F'1' 0x00000001
@lit_13_154  DC F'4' 0x00000004
@lit_13_156  DC A(defbza)
@lit_13_157  DC A(defbzf)
@lit_13_158  DC F'64116' 0x0000fa74
@lit_13_159  DC F'-3' 0xfffffffd
* ***
* ***   if (strm == 0) return (-2);
@L108    DS    0H
         LR    6,3         ; #0
         LA    7,0(0,0)
         CR    6,7
         BNE   @L109
         L     15,@lit_13_151
         B     @ret_lab_13
* ***      if (small != 0 && small != 1) return (-2);
@L109    DS    0H
         LTR   5,5
         BE    @L110
         C     5,@lit_13_152
         BE    @L110
@@gen_label110 DS 0H
         L     15,@lit_13_151
         B     @ret_lab_13
* ***      if (verbosity < 0 || verbosity > 4) return (-2);
@L110    DS    0H
         LTR   4,4
         BL    @@gen_label112
         C     4,@lit_13_154
         BNH   @L111
@@gen_label112 DS 0H
         L     15,@lit_13_151
         B     @ret_lab_13
* ***
* ***   if (strm->bzalloc == 0) strm->bzalloc = defbza;
@L111    DS    0H
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L112
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,@lit_13_156
         ST    7,0(0,6)    ; offset of bzalloc in 0000000
* ***      if (strm->bzfree == 0) strm->bzfree = defbzf;
@L112    DS    0H
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,0(0,6)
         LA    6,0(0,0)
         CR    7,6
         BNE   @L113
         LA    6,40(0,3)   ; offset of bzfree in 0000000
         L     7,@lit_13_157
         ST    7,0(0,6)    ; offset of bzfree in 0000000
* ***
* ***   s = (strm->bzalloc)(strm->opaque,(sizeof(DState)),1);
@L113    DS    0H
         LA    6,44(0,3)   ; offset of opaque in 0000000
         L     7,0(0,6)
         L     6,@lit_13_158
         LA    8,1(0,0)
         ST    7,120(0,13)
         ST    6,124(0,13)
         ST    8,128(0,13)
         LA    6,36(0,3)   ; offset of bzalloc in 0000000
         L     7,0(0,6)
         LA    1,120(0,13)
         L     6,72(0,13)
         LR    15,7
         BALR  14,15
         LR    2,15        ; s
* ***      if (s == 0) return (-3);
         LR    7,2         ; #0
         LA    8,0(0,0)
         CR    7,8
         BNE   @L114
         L     15,@lit_13_159
         B     @ret_lab_13
* ***      s->strm = strm;
@L114    DS    0H
         LR    6,2         ; strm
         LR    7,3
         ST    7,0(0,6)    ; s
* ***      strm->state = s;
         LA    6,32(0,3)   ; offset of state in 0000000
         LR    7,2
         ST    7,0(0,6)    ; offset of state in 0000000
* ***      s->state = 10;
         LA    6,4(0,2)    ; offset of state in 0000002
         LA    7,10(0,0)
         ST    7,0(0,6)    ; offset of state in 0000002
* ***      s->bsLive = 0;
         LA    6,32(0,2)   ; offset of bsLive in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of bsLive in 0000002
* ***      s->bsBuff = 0;
         LA    6,28(0,2)   ; offset of bsBuff in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of bsBuff in 0000002
* ***      s->calculatedCombinedCRC = 0;
         LA    6,3172(0,2) ; offset of calculatedCombinedCRC in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of calculatedCombinedCRC in 0000002
* ***      strm->total_in_lo32 = 0;
         LA    6,8(0,3)    ; offset of total_in_lo32 in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of total_in_lo32 in 0000000
* ***      strm->total_in_hi32 = 0;
         LA    6,12(0,3)   ; offset of total_in_hi32 in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of total_in_hi32 in 0000000
* ***      strm->total_out_lo32 = 0;
         LA    6,24(0,3)   ; offset of total_out_lo32 in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of total_out_lo32 in 0000000
* ***      strm->total_out_hi32 = 0;
         LA    6,28(0,3)   ; offset of total_out_hi32 in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of total_out_hi32 in 0000000
* ***      s->smallDecompress = (Bool)small;
         LA    6,40(0,2)   ; offset of smallDecompress in 0000002
         STC   5,0(0,6)    ; offset of smallDecompress in 0000002
* ***      s->ll4 = 0;
         LA    6,3156(0,2) ; offset of ll4 in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of ll4 in 0000002
* ***      s->ll16 = 0;
         LA    6,3152(0,2) ; offset of ll16 in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of ll16 in 0000002
* ***      s->tt = 0;
         LA    6,3148(0,2) ; offset of tt in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of tt in 0000002
* ***      s->currBlockNo = 0;
         LA    6,44(0,2)   ; offset of currBlockNo in 0000002
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of currBlockNo in 0000002
* ***      s->verbosity = verbosity;
         LA    6,48(0,2)   ; offset of verbosity in 0000002
         ST    4,0(0,6)    ; offset of verbosity in 0000002
* ***
* ***   return 0;
         LA    15,0(0,0)
         B     @ret_lab_13
* ***   }
@ret_lab_13 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzdcompi"
*      (FUNCTION #13)
*
@AUTO#bzdcompi DSECT
         DS    XL112
bzdcompi#s#0 DS 1A         ; s
*
@BZLIB01 CSECT
*
*
*
rle2ofst #PROLOG CINDEX=39,BASER=12,FRAME=168,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
* ***      UChar k1;
* ***
* ***   if (s->blockRandomised) {
         L     2,0(0,1)    ; s
         LA    2,16(0,2)   ; offset of blockRandomised in 0000002
         TM    0(2),255
         BZ    @L115
* ***
* ***   while (((Bool)1)) {
         B     @L120
         DS    0D
@FRAMESIZE_39  DC F'168'
@lit_region_diff_39_1_2  DC A(@REGION_39_2-@REGION_39_1)
@lit_39_162  DC F'1' 0x00000001
@lit_39_161  DC A(bzcrctab)
@lit_39_164  DC F'64064' 0x0000fa40
@lit_39_166  DC F'255' 0x000000ff
@lit_39_169  DC F'512' 0x00000200
@lit_39_167  DC A(bzrnums)
@lit_39_171  DC F'0' 0x00000000
@lit_39_207  DC F'4' 0x00000004
@L116    DS    0H
* ***
* ***   while (((Bool)1)) {
@L120    DS    0H
* ***               if (s->strm->avail_out == 0) return;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L124
         AL    12,@lit_region_diff_39_1_2
         DROP  12
         USING @REGION_39_2,12
         B     @ret_lab_39
         DROP  12
         USING @REGION_39_1,12
* ***               if (s->state_out_len == 0) break;
@L124    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L125
         B     @L122
* ***               *( (UChar*)(s->strm->next_out) ) = s->state_out_ch\
* ;
@L125    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         L     5,0(0,4)
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         IC    4,0(0,3)
         STC   4,0(0,5)
* ***               { s->calculatedBlockCRC = (s->calculatedBlockCRC <\
* < 8) ¬ bzcrctabÝ(s->calculatedBlockCRC >> 24) ¬ ((UChar)s->state_out\
* _ch)¨; };
         L     3,0(0,2)    ; s
         LA    3,3168(0,3) ; offset of calculatedBlockCRC in 0000002
         L     4,0(0,2)    ; s
         LA    4,3168(0,4) ; offset of calculatedBlockCRC in 0000002
         L     5,0(0,4)
         SLL   5,8(0)
         L     4,0(0,2)    ; s
         LA    4,3168(0,4) ; offset of calculatedBlockCRC in 0000002
         L     6,0(0,4)
         SRL   6,24(0)
         L     4,0(0,2)    ; s
         LA    4,8(0,4)    ; offset of state_out_ch in 0000002
         LA    7,0(0,0)
         IC    7,0(0,4)
         XR    6,7
         L     4,@lit_39_161
         SLL   6,2(0)
         LA    6,0(6,4)
         L     4,0(0,6)
         XR    5,4
         ST    5,0(0,3)    ; offset of calculatedBlockCRC in 0000002
* ***               # 562
* ***   s->state_out_len--;
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***               s->strm->next_out++;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         LA    4,1(0,4)
         ST    4,0(0,5)
* ***               s->strm->avail_out--;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
* ***               s->strm->total_out_lo32++;
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_39_162
         ST    4,0(0,5)
* ***               if (s->strm->total_out_lo32 == 0) s->strm->total_o\
* ut_hi32++;
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L120
         L     4,0(0,3)
         LA    4,28(0,4)   ; offset of total_out_hi32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_39_162
         ST    4,0(0,5)
* ***            }
         B     @L120
@L122    DS    0H
* ***
* ***
* ***   if (s->nblock_used == s->save_nblock+1) return;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         AL    3,@lit_39_164 ; offset of save_nblock in 0000002
         L     5,0(0,3)
         A     5,@lit_39_162
         CR    4,5
         BNE   @L127
         AL    12,@lit_region_diff_39_1_2
         DROP  12
         USING @REGION_39_2,12
         B     @ret_lab_39
         DROP  12
         USING @REGION_39_1,12
* ***
* ***
* ***   s->state_out_len = 1;
@L127    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,1(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            s->state_out_ch = s->k0;
         L     3,0(0,2)    ; s
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         L     4,0(0,2)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         STC   5,0(0,3)    ; offset of state_out_ch in 0000002
* ***            s->tPos = s->ttÝs->tPos¨; k1 = (UChar)(s->tPos & 0xff\
* ); s->tPos >>= 8;; if (s->rNToGo == 0) { s->rNToGo = bzrnumsÝs->rTPo\
* s¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = 0; } s->rNToGo--;;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3148(0,4) ; offset of tt in 0000002
         L     6,0(0,4)
         SLL   5,2(0)
         LA    5,0(5,6)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         N     4,@lit_39_166
         STC   4,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         LR    5,3
         L     6,0(0,3)
         SRL   6,8(0)
         ST    6,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,3)
         LTR   5,5
         BNE   @L128
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,2)    ; s
         LA    5,24(0,5)   ; offset of rTPos in 0000002
         L     6,0(0,5)
         L     5,@lit_39_167
         SLL   6,2(0)
         LA    6,0(6,5)
         L     5,0(0,6)
         ST    5,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    5,3
         L     6,0(0,3)
         LR    3,6
         A     3,@lit_39_162
         ST    3,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     5,0(0,3)
         C     5,@lit_39_169
         BNE   @L128
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    5,0(0,0)
         ST    5,0(0,3)    ; offset of rTPos in 0000002
@L128    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 576
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_39_162
         BNE   @@gen_label126
         LA    3,1(0,0)
         B     @@gen_label127
@@gen_label126 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label127 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_39_162
         ST    4,0(0,5)
* ***            if (s->nblock_used == s->save_nblock+1) continue;
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         AL    4,@lit_39_164 ; offset of save_nblock in 0000002
         L     6,0(0,4)
         A     6,@lit_39_162
         CR    5,6
         BNE   @L130
         B     @L120
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L130    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L131
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_39_171
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L120
@L131    DS    0H
* ***
* ***   s->state_out_len = 2;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,2(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            s->tPos = s->ttÝs->tPos¨; k1 = (UChar)(s->tPos & 0xff\
* ); s->tPos >>= 8;; if (s->rNToGo == 0) { s->rNToGo = bzrnumsÝs->rTPo\
* s¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = 0; } s->rNToGo--;;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3148(0,4) ; offset of tt in 0000002
         L     6,0(0,4)
         SLL   5,2(0)
         LA    5,0(5,6)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         N     4,@lit_39_166
         STC   4,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         LR    5,3
         L     6,0(0,3)
         SRL   6,8(0)
         ST    6,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,3)
         LTR   5,5
         BNE   @L132
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,2)    ; s
         LA    5,24(0,5)   ; offset of rTPos in 0000002
         L     6,0(0,5)
         L     5,@lit_39_167
         SLL   6,2(0)
         LA    6,0(6,5)
         L     5,0(0,6)
         ST    5,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    5,3
         L     6,0(0,3)
         LR    3,6
         A     3,@lit_39_162
         ST    3,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     5,0(0,3)
         C     5,@lit_39_169
         BNE   @L132
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    5,0(0,0)
         ST    5,0(0,3)    ; offset of rTPos in 0000002
@L132    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 582
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_39_162
         BNE   @@gen_label133
         LA    3,1(0,0)
         B     @@gen_label134
@@gen_label133 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label134 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_39_162
         ST    4,0(0,5)
* ***            if (s->nblock_used == s->save_nblock+1) continue;
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         AL    4,@lit_39_164 ; offset of save_nblock in 0000002
         L     6,0(0,4)
         A     6,@lit_39_162
         CR    5,6
         BNE   @L134
         B     @L120
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L134    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L135
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_39_171
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L120
@L135    DS    0H
* ***
* ***   s->state_out_len = 3;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,3(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            s->tPos = s->ttÝs->tPos¨; k1 = (UChar)(s->tPos & 0xff\
* ); s->tPos >>= 8;; if (s->rNToGo == 0) { s->rNToGo = bzrnumsÝs->rTPo\
* s¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = 0; } s->rNToGo--;;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3148(0,4) ; offset of tt in 0000002
         L     6,0(0,4)
         SLL   5,2(0)
         LA    5,0(5,6)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         N     4,@lit_39_166
         STC   4,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         LR    5,3
         L     6,0(0,3)
         SRL   6,8(0)
         ST    6,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,3)
         LTR   5,5
         BNE   @L136
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,2)    ; s
         LA    5,24(0,5)   ; offset of rTPos in 0000002
         L     6,0(0,5)
         L     5,@lit_39_167
         SLL   6,2(0)
         LA    6,0(6,5)
         L     5,0(0,6)
         ST    5,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    5,3
         L     6,0(0,3)
         LR    3,6
         A     3,@lit_39_162
         ST    3,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     5,0(0,3)
         C     5,@lit_39_169
         BNE   @L136
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    5,0(0,0)
         ST    5,0(0,3)    ; offset of rTPos in 0000002
@L136    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 588
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_39_162
         BNE   @@gen_label140
         LA    3,1(0,0)
         B     @@gen_label141
@@gen_label140 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label141 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_39_162
         ST    4,0(0,5)
* ***            if (s->nblock_used == s->save_nblock+1) continue;
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         AL    4,@lit_39_164 ; offset of save_nblock in 0000002
         L     6,0(0,4)
         A     6,@lit_39_162
         CR    5,6
         BNE   @L138
         B     @L120
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L138    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L139
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_39_171
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L120
@L139    DS    0H
* ***
* ***   s->tPos = s->ttÝs->tPos¨; k1 = (UChar)(s->tPos & 0xff); s->tPo\
* s >>= 8;; if (s->rNToGo == 0) { s->rNToGo = bzrnumsÝs->rTPos¨; s->rT\
* Pos++; if (s->rTPos == 512) s->rTPos = 0; } s->rNToGo--;;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3148(0,4) ; offset of tt in 0000002
         L     6,0(0,4)
         SLL   5,2(0)
         LA    5,0(5,6)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         N     4,@lit_39_166
         STC   4,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         LR    5,3
         L     6,0(0,3)
         SRL   6,8(0)
         ST    6,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,3)
         LTR   5,5
         BNE   @L140
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     5,0(0,2)    ; s
         LA    5,24(0,5)   ; offset of rTPos in 0000002
         L     6,0(0,5)
         L     5,@lit_39_167
         SLL   6,2(0)
         LA    6,0(6,5)
         L     5,0(0,6)
         ST    5,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    5,3
         L     6,0(0,3)
         LR    3,6
         A     3,@lit_39_162
         ST    3,0(0,5)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     5,0(0,3)
         C     5,@lit_39_169
         BNE   @L140
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    5,0(0,0)
         ST    5,0(0,3)    ; offset of rTPos in 0000002
@L140    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 593
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_39_162
         BNE   @@gen_label147
         LA    3,1(0,0)
         B     @@gen_label148
@@gen_label147 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label148 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_171
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_39_162
         ST    4,0(0,5)
* ***            s->state_out_len = ((Int32)k1) + 4;
         L     4,0(0,3)    ; s
         LA    4,12(0,4)   ; offset of state_out_len in 0000002
         IC    5,112(0,13) ; k1
         ICM   5,B'1110',@lit_39_171
         A     5,@lit_39_207
         ST    5,0(0,4)    ; offset of state_out_len in 0000002
* ***            s->tPos = s->ttÝs->tPos¨; s->k0 = (UChar)(s->tPos & 0\
* xff); s->tPos >>= 8;; if (s->rNToGo == 0) { s->rNToGo = bzrnumsÝs->r\
* TPos¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = 0; } s->rNToGo--;\
* ;
         L     4,0(0,3)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,3)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     6,0(0,5)
         L     5,0(0,3)    ; s
         LA    5,3148(0,5) ; offset of tt in 0000002
         L     7,0(0,5)
         SLL   6,2(0)
         LA    6,0(6,7)
         L     5,0(0,6)
         ST    5,0(0,4)    ; offset of tPos in 0000002
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,3)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     6,0(0,5)
         N     6,@lit_39_166
         ICM   6,B'1110',@lit_39_171
         ST    6,0(0,4)    ; offset of k0 in 0000002
         L     4,0(0,3)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         LR    5,4
         L     6,0(0,4)
         SRL   6,8(0)
         ST    6,0(0,5)
         L     4,0(0,3)    ; s
         LA    4,20(0,4)   ; offset of rNToGo in 0000002
         L     5,0(0,4)
         LTR   5,5
         BNE   @L142
         L     4,0(0,3)    ; s
         LA    4,20(0,4)   ; offset of rNToGo in 0000002
         L     5,0(0,3)    ; s
         LA    5,24(0,5)   ; offset of rTPos in 0000002
         L     6,0(0,5)
         L     5,@lit_39_167
         SLL   6,2(0)
         LA    6,0(6,5)
         L     5,0(0,6)
         ST    5,0(0,4)    ; offset of rNToGo in 0000002
         L     4,0(0,3)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_39_162
         ST    4,0(0,5)
         L     4,0(0,3)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         L     5,0(0,4)
         C     5,@lit_39_169
         BNE   @L142
         L     4,0(0,3)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         LA    5,0(0,0)
         ST    5,0(0,4)    ; offset of rTPos in 0000002
@L142    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 596
* ***   s->k0 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,60(0,3)   ; offset of k0 in 0000002
         LR    4,3
         L     5,0(0,2)    ; s
         LA    5,20(0,5)   ; offset of rNToGo in 0000002
         L     6,0(0,5)
         C     6,@lit_39_162
         STM   3,4,88(13)
         BNE   @@gen_label152
         LA    3,1(0,0)
         B     @@gen_label153
@@gen_label152 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label153 DS 0H
         L     2,92(0,13)
         L     4,88(0,13)
         L     5,0(0,4)
         XR    5,3
         ST    5,0(0,2)
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_39_162
         ST    3,0(0,4)
* ***         }
         B     @L120
* ***
* ***   } else {
@L115    DS    0H
* ***
* ***
* ***   UInt32 c_calculatedBlockCRC = s->calculatedBlockCRC;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,3168(0,3) ; offset of calculatedBlockCRC in 0000002
         L     4,0(0,3)
         ST    4,116(0,13) ; c_calculatedBlockCRC
* ***         UChar c_state_out_ch = s->state_out_ch;
         L     3,0(0,2)    ; s
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         IC    5,0(0,3)
         STC   5,120(0,13) ; c_state_out_ch
* ***         Int32 c_state_out_len = s->state_out_len;
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         L     6,0(0,3)
         ST    6,124(0,13) ; c_state_out_len
* ***         Int32 c_nblock_used = s->nblock_used;
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     7,0(0,3)
         ST    7,128(0,13) ; c_nblock_used
* ***         Int32 c_k0 = s->k0;
         L     3,0(0,2)    ; s
         LA    3,60(0,3)   ; offset of k0 in 0000002
         L     8,0(0,3)
         ST    8,132(0,13) ; c_k0
* ***         UInt32* c_tt = s->tt;
         L     3,0(0,2)    ; s
         LA    3,3148(0,3) ; offset of tt in 0000002
         L     9,0(0,3)
         ST    9,136(0,13) ; c_tt
* ***         UInt32 c_tPos = s->tPos;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     10,0(0,3)
         ST    10,140(0,13) ; c_tPos
* ***         char* cs_next_out = s->strm->next_out;
         L     3,0(0,2)    ; s
         L     11,0(0,3)
         LA    11,16(0,11) ; offset of next_out in 0000000
         L     1,0(0,11)
         ST    1,144(0,13) ; cs_next_out
* ***         unsigned int cs_avail_out = s->strm->avail_out;
         L     11,0(0,3)
         LA    11,20(0,11) ; offset of avail_out in 0000000
         L     0,0(0,11)
         ST    0,148(0,13) ; cs_avail_out
* ***
* ***
* ***   UInt32 avail_out_INIT = cs_avail_out;
         ST    0,152(0,13) ; avail_out_INIT
* ***         Int32 s_save_nblockPP = s->save_nblock+1;
         AL    3,@lit_39_164 ; offset of save_nblock in 0000002
         L     11,0(0,3)
         A     11,@lit_39_162
         ST    11,156(0,13) ; s_save_nblockPP
* ***         unsigned int total_out_lo32_old;
* ***
* ***   while (((Bool)1)) {
         AL    12,@lit_region_diff_39_1_2
         DROP  12
         USING @REGION_39_2,12
         B     @L145
         DROP  12
         USING @REGION_39_1,12
@REGION_39_2 DS 0H
         DROP  12
         USING @REGION_39_2,12
@L145    DS    0H
* ***
* ***
* ***   if (c_state_out_len > 0) {
         L     2,124(0,13) ; c_state_out_len
         LTR   2,2
         BNH   @L149
* ***               while (((Bool)1)) {
@L150    DS    0H
* ***                  if (cs_avail_out == 0) goto return_notr;
         L     2,148(0,13) ; cs_avail_out
         LTR   2,2
         BNE   @L154
         B     @_return_notr@39
         DS    0D
@lit_39_217  DC F'1' 0x00000001
@lit_39_219  DC A(bzcrctab)
@lit_39_218  DC F'0' 0x00000000
@lit_39_233  DC F'4' 0x00000004
* ***                  if (c_state_out_len == 1) break;
@L154    DS    0H
         L     2,124(0,13) ; c_state_out_len
         C     2,@lit_39_217
         BNE   @L155
         B     @_s_state_out_len_eq_one@39
* ***                  *( (UChar*)(cs_next_out) ) = c_state_out_ch;
@L155    DS    0H
         L     2,144(0,13) ; cs_next_out
         IC    3,120(0,13) ; c_state_out_ch
         STC   3,0(0,2)    ; cs_next_out
* ***                  { c_calculatedBlockCRC = (c_calculatedBlockCRC \
* << 8) ¬ bzcrctabÝ(c_calculatedBlockCRC >> 24) ¬ ((UChar)c_state_out_\
* ch)¨; };
         L     3,116(0,13) ; c_calculatedBlockCRC
         SLL   3,8(0)
         L     4,116(0,13) ; c_calculatedBlockCRC
         SRL   4,24(0)
         IC    5,120(0,13) ; c_state_out_ch
         ICM   5,B'1110',@lit_39_218
         XR    4,5
         L     5,@lit_39_219
         SLL   4,2(0)
         LA    4,0(4,5)
         L     5,0(0,4)
         XR    3,5
         ST    3,116(0,13) ; c_calculatedBlockCRC
* ***                  # 626
* ***   c_state_out_len--;
         L     4,124(0,13) ; c_state_out_len
         BCTR  4,0
         ST    4,124(0,13) ; c_state_out_len
* ***                  cs_next_out++;
         LA    2,1(0,2)
         ST    2,144(0,13) ; cs_next_out
* ***                  cs_avail_out--;
         L     5,148(0,13) ; cs_avail_out
         BCTR  5,0
         ST    5,148(0,13) ; cs_avail_out
* ***               }
         B     @L150
@L152    DS    0H
* ***               s_state_out_len_eq_one:
* ***               {
@_s_state_out_len_eq_one@39 DS 0H
* ***                  if (cs_avail_out == 0) {
         L     2,148(0,13) ; cs_avail_out
         LTR   2,2
         BNE   @L156
* ***                     c_state_out_len = 1; goto return_notr;
         LA    3,1(0,0)
         ST    3,124(0,13) ; c_state_out_len
         B     @_return_notr@39
* ***                  };
@L156    DS    0H
* ***                  *( (UChar*)(cs_next_out) ) = c_state_out_ch;
         L     2,144(0,13) ; cs_next_out
         IC    3,120(0,13) ; c_state_out_ch
         STC   3,0(0,2)    ; cs_next_out
* ***                  { c_calculatedBlockCRC = (c_calculatedBlockCRC \
* << 8) ¬ bzcrctabÝ(c_calculatedBlockCRC >> 24) ¬ ((UChar)c_state_out_\
* ch)¨; };
         L     3,116(0,13) ; c_calculatedBlockCRC
         SLL   3,8(0)
         L     4,116(0,13) ; c_calculatedBlockCRC
         SRL   4,24(0)
         IC    5,120(0,13) ; c_state_out_ch
         ICM   5,B'1110',@lit_39_218
         XR    4,5
         L     5,@lit_39_219
         SLL   4,2(0)
         LA    4,0(4,5)
         L     5,0(0,4)
         XR    3,5
         ST    3,116(0,13) ; c_calculatedBlockCRC
* ***                  # 637
* ***   cs_next_out++;
         LA    2,1(0,2)
         ST    2,144(0,13) ; cs_next_out
* ***                  cs_avail_out--;
         L     4,148(0,13) ; cs_avail_out
         BCTR  4,0
         ST    4,148(0,13) ; cs_avail_out
* ***               }
* ***            }
* ***
* ***   if (c_nblock_used == s_save_nblockPP) {
@L149    DS    0H
         L     2,128(0,13) ; c_nblock_used
         C     2,156(0,13)
         BNE   @L157
* ***               c_state_out_len = 0; goto return_notr;
         LA    3,0(0,0)
         ST    3,124(0,13) ; c_state_out_len
         B     @_return_notr@39
* ***            };
@L157    DS    0H
* ***            c_state_out_ch = c_k0;
         L     2,132(0,13) ; c_k0
         STC   2,120(0,13) ; c_state_out_ch
* ***            c_tPos = c_ttÝc_tPos¨; k1 = (UChar)(c_tPos & 0xff); c\
* _tPos >>= 8;; c_nblock_used++;
         L     3,140(0,13) ; c_tPos
         L     4,136(0,13) ; c_tt
         SLL   3,2(0)
         LA    3,0(3,4)
         L     5,0(0,3)
         ST    5,140(0,13) ; c_tPos
         LA    3,255(0,0)
         N     3,140(0,13)
         STC   3,112(0,13) ; k1
         SRL   5,8(0)
         ST    5,140(0,13) ; c_tPos
         L     6,128(0,13) ; c_nblock_used
         A     6,@lit_39_217
         ST    6,128(0,13) ; c_nblock_used
* ***            # 647
* ***   if (k1 != c_k0) {
         IC    7,112(0,13) ; k1
         ICM   7,B'1110',@lit_39_218
         C     7,132(0,13)
         BE    @L158
* ***               c_k0 = k1; goto s_state_out_len_eq_one;
         IC    7,112(0,13) ; k1
         ICM   7,B'1110',@lit_39_218
         ST    7,132(0,13) ; c_k0
         B     @_s_state_out_len_eq_one@39
* ***            };
@L158    DS    0H
* ***            if (c_nblock_used == s_save_nblockPP)
         L     2,128(0,13) ; c_nblock_used
         C     2,156(0,13)
         BNE   @L159
* ***               goto s_state_out_len_eq_one;
         B     @_s_state_out_len_eq_one@39
* ***
* ***   c_state_out_len = 2;
@L159    DS    0H
         LA    2,2(0,0)
         ST    2,124(0,13) ; c_state_out_len
* ***            c_tPos = c_ttÝc_tPos¨; k1 = (UChar)(c_tPos & 0xff); c\
* _tPos >>= 8;; c_nblock_used++;
         L     3,140(0,13) ; c_tPos
         L     4,136(0,13) ; c_tt
         SLL   3,2(0)
         LA    3,0(3,4)
         L     5,0(0,3)
         ST    5,140(0,13) ; c_tPos
         LA    3,255(0,0)
         N     3,140(0,13)
         STC   3,112(0,13) ; k1
         SRL   5,8(0)
         ST    5,140(0,13) ; c_tPos
         L     6,128(0,13) ; c_nblock_used
         A     6,@lit_39_217
         ST    6,128(0,13) ; c_nblock_used
* ***            # 655
* ***   if (c_nblock_used == s_save_nblockPP) continue;
         C     6,156(0,13)
         BNE   @L160
         B     @L145
* ***            if (k1 != c_k0) { c_k0 = k1; continue; };
@L160    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_218
         C     2,132(0,13)
         BE    @L161
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_218
         ST    2,132(0,13) ; c_k0
         B     @L145
@L161    DS    0H
* ***
* ***   c_state_out_len = 3;
         LA    2,3(0,0)
         ST    2,124(0,13) ; c_state_out_len
* ***            c_tPos = c_ttÝc_tPos¨; k1 = (UChar)(c_tPos & 0xff); c\
* _tPos >>= 8;; c_nblock_used++;
         L     3,140(0,13) ; c_tPos
         L     4,136(0,13) ; c_tt
         SLL   3,2(0)
         LA    3,0(3,4)
         L     5,0(0,3)
         ST    5,140(0,13) ; c_tPos
         LA    3,255(0,0)
         N     3,140(0,13)
         STC   3,112(0,13) ; k1
         SRL   5,8(0)
         ST    5,140(0,13) ; c_tPos
         L     6,128(0,13) ; c_nblock_used
         A     6,@lit_39_217
         ST    6,128(0,13) ; c_nblock_used
* ***            # 660
* ***   if (c_nblock_used == s_save_nblockPP) continue;
         C     6,156(0,13)
         BNE   @L162
         B     @L145
* ***            if (k1 != c_k0) { c_k0 = k1; continue; };
@L162    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_218
         C     2,132(0,13)
         BE    @L163
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_39_218
         ST    2,132(0,13) ; c_k0
         B     @L145
@L163    DS    0H
* ***
* ***   c_tPos = c_ttÝc_tPos¨; k1 = (UChar)(c_tPos & 0xff); c_tPos >>=\
*  8;; c_nblock_used++;
         L     2,140(0,13) ; c_tPos
         L     3,136(0,13) ; c_tt
         SLL   2,2(0)
         LA    2,0(2,3)
         L     4,0(0,2)
         ST    4,140(0,13) ; c_tPos
         LA    2,255(0,0)
         N     2,140(0,13)
         STC   2,112(0,13) ; k1
         SRL   4,8(0)
         ST    4,140(0,13) ; c_tPos
         L     5,128(0,13) ; c_nblock_used
         A     5,@lit_39_217
         ST    5,128(0,13) ; c_nblock_used
* ***            # 664
* ***   c_state_out_len = ((Int32)k1) + 4;
         IC    6,112(0,13) ; k1
         ICM   6,B'1110',@lit_39_218
         A     6,@lit_39_233
         ST    6,124(0,13) ; c_state_out_len
* ***            c_tPos = c_ttÝc_tPos¨; c_k0 = (UChar)(c_tPos & 0xff);\
*  c_tPos >>= 8;; c_nblock_used++;
         SLL   4,2(0)
         LA    4,0(4,3)
         L     7,0(0,4)
         ST    7,140(0,13) ; c_tPos
         LA    4,255(0,0)
         N     4,140(0,13)
         ICM   4,B'1110',@lit_39_218
         ST    4,132(0,13) ; c_k0
         SRL   7,8(0)
         ST    7,140(0,13) ; c_tPos
         A     5,@lit_39_217
         ST    5,128(0,13) ; c_nblock_used
* ***         # 666
* ***   }
         B     @L145
* ***
* ***   return_notr:
* ***         total_out_lo32_old = s->strm->total_out_lo32;
@_return_notr@39 DS 0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         L     5,0(0,4)
         ST    5,160(0,13) ; total_out_lo32_old
* ***         s->strm->total_out_lo32 += (avail_out_INIT - cs_avail_ou\
* t);
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         LR    6,4
         L     7,0(0,4)
         L     4,152(0,13) ; avail_out_INIT
         SL    4,148(0,13)
         ALR   7,4
         ST    7,0(0,6)
* ***         if (s->strm->total_out_lo32 < total_out_lo32_old)
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         L     5,0(0,4)
         CL    5,160(0,13)
         BNL   @L164
* ***            s->strm->total_out_hi32++;
         L     4,0(0,3)
         LA    4,28(0,4)   ; offset of total_out_hi32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_39_217
         ST    4,0(0,5)
* ***
* ***
* ***   s->calculatedBlockCRC = c_calculatedBlockCRC;
@L164    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,3168(0,3) ; offset of calculatedBlockCRC in 0000002
         L     4,116(0,13) ; c_calculatedBlockCRC
         ST    4,0(0,3)    ; offset of calculatedBlockCRC in 0000002
* ***         s->state_out_ch = c_state_out_ch;
         L     3,0(0,2)    ; s
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         IC    4,120(0,13) ; c_state_out_ch
         STC   4,0(0,3)    ; offset of state_out_ch in 0000002
* ***         s->state_out_len = c_state_out_len;
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         L     4,124(0,13) ; c_state_out_len
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***         s->nblock_used = c_nblock_used;
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,128(0,13) ; c_nblock_used
         ST    4,0(0,3)    ; offset of nblock_used in 0000002
* ***         s->k0 = c_k0;
         L     3,0(0,2)    ; s
         LA    3,60(0,3)   ; offset of k0 in 0000002
         L     4,132(0,13) ; c_k0
         ST    4,0(0,3)    ; offset of k0 in 0000002
* ***         s->tt = c_tt;
         L     3,0(0,2)    ; s
         LA    3,3148(0,3) ; offset of tt in 0000002
         L     4,136(0,13) ; c_tt
         ST    4,0(0,3)    ; offset of tt in 0000002
* ***         s->tPos = c_tPos;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,140(0,13) ; c_tPos
         ST    4,0(0,3)    ; offset of tPos in 0000002
* ***         s->strm->next_out = cs_next_out;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         L     5,144(0,13) ; cs_next_out
         ST    5,0(0,4)    ; offset of next_out in 0000000
* ***         s->strm->avail_out = cs_avail_out;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         L     5,148(0,13) ; cs_avail_out
         ST    5,0(0,4)    ; offset of avail_out in 0000000
* ***
* ***   }
* ***   }
@ret_lab_39 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "rle2ofst"
*      (FUNCTION #39)
*
@AUTO#rle2ofst DSECT
         DS    XL112
rle2ofst#k1#0 DS 1CL1      ; k1
         ORG   @AUTO#rle2ofst+116
rle2ofst#c_calculated$Block$C$R$C#13 DS 1F ; c_calculatedBlockCRC
rle2ofst#c_state_out_ch#13 DS 1CL1 ; c_state_out_ch
         ORG   @AUTO#rle2ofst+124
rle2ofst#c_state_out_len#13 DS 1F ; c_state_out_len
rle2ofst#c_nblock_used#13 DS 1F ; c_nblock_used
rle2ofst#c_k0#13 DS 1F     ; c_k0
rle2ofst#c_tt#13 DS 1A     ; c_tt
rle2ofst#c_t$Pos#13 DS 1F  ; c_tPos
rle2ofst#cs_next_out#13 DS 1A ; cs_next_out
rle2ofst#cs_avail_out#13 DS 1F ; cs_avail_out
rle2ofst#avail_out_$I$N$I$T#13 DS 1F ; avail_out_INIT
rle2ofst#s_save_nblock$P$P#13 DS 1F ; s_save_nblockPP
rle2ofst#total_out_lo32_old#13 DS 1F ; total_out_lo32_old
*
@BZLIB01 CSECT
*
*
*
bzint2f  #PROLOG CINDEX=25,BASER=12,FRAME=120,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,4(0,1)
         LR    5,2
* ***      Int32 nb, na, mid;
* ***      nb = 0;
         LA    2,0(0,0)    ; nb
* ***      na = 256;
         LA    4,256(0,0)  ; na
* ***      do {
@L165    DS    0H
* ***         mid = (nb + na) >> 1;
         LR    6,2         ; na
         AR    6,4
         SRA   6,1(0)
         LR    3,6         ; mid
* ***         if (indx >= cftabÝmid¨) nb = mid; else na = mid;
         L     6,80(0,13)
         L     7,0(0,6)    ; indx
         LR    8,3
         SLL   8,2(0)
         LA    8,0(8,5)
         L     9,0(0,8)
         CR    7,9
         BL    @L168
         LR    2,3         ; nb
         B     @L169
         DS    0D
@FRAMESIZE_25  DC F'120'
@lit_25_241  DC F'1' 0x00000001
@L168    DS    0H
         LR    4,3         ; na
* ***      }
@L169    DS    0H
* ***      while (na - nb != 1);
         LR    6,4         ; nb
         LR    7,2
         SR    6,7
         C     6,@lit_25_241
         BNE   @L165
* ***      return nb;
         LR    15,2
         B     @ret_lab_25
* ***   }
@ret_lab_25 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzint2f"
*      (FUNCTION #25)
*
@AUTO#bzint2f DSECT
         DS    XL104
bzint2f#nb#0 DS 1F         ; nb
bzint2f#na#0 DS 1F         ; na
bzint2f#mid#0 DS 1F        ; mid
*
@BZLIB01 CSECT
*
*
*
rle2osml #PROLOG CINDEX=40,BASER=12,FRAME=128,ENTRY=NO
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
* ***      UChar k1;
* ***
* ***   if (s->blockRandomised) {
         L     2,0(0,1)    ; s
         LA    2,16(0,2)   ; offset of blockRandomised in 0000002
         TM    0(2),255
         BNZ   *+12  Around region break
         AL    12,@lit_region_diff_40_1_2
         DROP  12
         USING @REGION_40_2,12
         B     @L204
         DROP  12
         USING @REGION_40_1,12
* ***
* ***   while (((Bool)1)) {
         B     @L175
         DS    0D
@lit_region_diff_40_1_2  DC A(@REGION_40_2-@REGION_40_1)
@FRAMESIZE_40  DC F'128'
@lit_40_244  DC F'1' 0x00000001
@lit_40_243  DC A(bzcrctab)
@lit_40_246  DC F'64064' 0x0000fa40
@lit_40_252  DC F'15' 0x0000000f
@lit_40_251  DC F'4' 0x00000004
@lit_40_250  DC F'0' 0x00000000
@lit_40_248  DC A(bzint2f)
@lit_40_255  DC F'512' 0x00000200
@lit_40_253  DC A(bzrnums)
@L171    DS    0H
* ***
* ***   while (((Bool)1)) {
@L175    DS    0H
* ***               if (s->strm->avail_out == 0) return;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L179
         AL    12,@lit_region_diff_40_1_2
         DROP  12
         USING @REGION_40_2,12
         B     @ret_lab_40
         DROP  12
         USING @REGION_40_1,12
* ***               if (s->state_out_len == 0) break;
@L179    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L180
         B     @L177
* ***               *( (UChar*)(s->strm->next_out) ) = s->state_out_ch\
* ;
@L180    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         L     5,0(0,4)
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         IC    4,0(0,3)
         STC   4,0(0,5)
* ***               { s->calculatedBlockCRC = (s->calculatedBlockCRC <\
* < 8) ¬ bzcrctabÝ(s->calculatedBlockCRC >> 24) ¬ ((UChar)s->state_out\
* _ch)¨; };
         L     3,0(0,2)    ; s
         LA    3,3168(0,3) ; offset of calculatedBlockCRC in 0000002
         L     4,0(0,2)    ; s
         LA    4,3168(0,4) ; offset of calculatedBlockCRC in 0000002
         L     5,0(0,4)
         SLL   5,8(0)
         L     4,0(0,2)    ; s
         LA    4,3168(0,4) ; offset of calculatedBlockCRC in 0000002
         L     6,0(0,4)
         SRL   6,24(0)
         L     4,0(0,2)    ; s
         LA    4,8(0,4)    ; offset of state_out_ch in 0000002
         LA    7,0(0,0)
         IC    7,0(0,4)
         XR    6,7
         L     4,@lit_40_243
         SLL   6,2(0)
         LA    6,0(6,4)
         L     4,0(0,6)
         XR    5,4
         ST    5,0(0,3)    ; offset of calculatedBlockCRC in 0000002
* ***               # 720
* ***   s->state_out_len--;
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***               s->strm->next_out++;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         LA    4,1(0,4)
         ST    4,0(0,5)
* ***               s->strm->avail_out--;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
* ***               s->strm->total_out_lo32++;
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_40_244
         ST    4,0(0,5)
* ***               if (s->strm->total_out_lo32 == 0) s->strm->total_o\
* ut_hi32++;
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L175
         L     4,0(0,3)
         LA    4,28(0,4)   ; offset of total_out_hi32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_40_244
         ST    4,0(0,5)
* ***            }
         B     @L175
@L177    DS    0H
* ***
* ***
* ***   if (s->nblock_used == s->save_nblock+1) return;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         AL    3,@lit_40_246 ; offset of save_nblock in 0000002
         L     5,0(0,3)
         A     5,@lit_40_244
         CR    4,5
         BNE   @L182
         AL    12,@lit_region_diff_40_1_2
         DROP  12
         USING @REGION_40_2,12
         B     @ret_lab_40
         DROP  12
         USING @REGION_40_1,12
* ***
* ***
* ***   s->state_out_len = 1;
@L182    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,1(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            s->state_out_ch = s->k0;
         L     3,0(0,2)    ; s
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         L     4,0(0,2)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         STC   5,0(0,3)    ; offset of state_out_ch in 0000002
* ***            k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt\
* 32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s\
* ->tPos) << 2) & 0x4)) & 0xF) << 16));; if (s->rNToGo == 0) { s->rNTo\
* Go = bzrnumsÝs->rTPos¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = \
* 0; } s->rNToGo--;;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_248 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_250
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_250
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_251
         SRL   5,0(7)
         N     5,@lit_40_252
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L183
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,2)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         L     5,0(0,4)
         L     4,@lit_40_253
         SLL   5,2(0)
         LA    5,0(5,4)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_244
         ST    3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     4,0(0,3)
         C     4,@lit_40_255
         BNE   @L183
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of rTPos in 0000002
@L183    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 734
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_40_244
         BNE   @@gen_label180
         LA    3,1(0,0)
         B     @@gen_label181
@@gen_label180 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label181 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_40_244
         ST    4,0(0,5)
* ***            if (s->nblock_used == s->save_nblock+1) continue;
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         AL    4,@lit_40_246 ; offset of save_nblock in 0000002
         L     6,0(0,4)
         A     6,@lit_40_244
         CR    5,6
         BNE   @L185
         B     @L175
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L185    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L186
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_250
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L175
@L186    DS    0H
* ***
* ***   s->state_out_len = 2;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,2(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt\
* 32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s\
* ->tPos) << 2) & 0x4)) & 0xF) << 16));; if (s->rNToGo == 0) { s->rNTo\
* Go = bzrnumsÝs->rTPos¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = \
* 0; } s->rNToGo--;;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_248 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_250
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_250
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_251
         SRL   5,0(7)
         N     5,@lit_40_252
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L187
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,2)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         L     5,0(0,4)
         L     4,@lit_40_253
         SLL   5,2(0)
         LA    5,0(5,4)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_244
         ST    3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     4,0(0,3)
         C     4,@lit_40_255
         BNE   @L187
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of rTPos in 0000002
@L187    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 740
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_40_244
         BNE   @@gen_label187
         LA    3,1(0,0)
         B     @@gen_label188
@@gen_label187 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label188 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_40_244
         ST    4,0(0,5)
* ***            if (s->nblock_used == s->save_nblock+1) continue;
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         AL    4,@lit_40_246 ; offset of save_nblock in 0000002
         L     6,0(0,4)
         A     6,@lit_40_244
         CR    5,6
         BNE   @L189
         B     @L175
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L189    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L190
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_250
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L175
@L190    DS    0H
* ***
* ***   s->state_out_len = 3;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,3(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt\
* 32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s\
* ->tPos) << 2) & 0x4)) & 0xF) << 16));; if (s->rNToGo == 0) { s->rNTo\
* Go = bzrnumsÝs->rTPos¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = \
* 0; } s->rNToGo--;;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_248 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_250
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_250
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_251
         SRL   5,0(7)
         N     5,@lit_40_252
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L191
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,2)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         L     5,0(0,4)
         L     4,@lit_40_253
         SLL   5,2(0)
         LA    5,0(5,4)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_244
         ST    3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     4,0(0,3)
         C     4,@lit_40_255
         BNE   @L191
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of rTPos in 0000002
@L191    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 746
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_40_244
         BNE   @@gen_label194
         LA    3,1(0,0)
         B     @@gen_label195
@@gen_label194 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label195 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_40_244
         ST    4,0(0,5)
* ***            if (s->nblock_used == s->save_nblock+1) continue;
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         AL    4,@lit_40_246 ; offset of save_nblock in 0000002
         L     6,0(0,4)
         A     6,@lit_40_244
         CR    5,6
         BNE   @L193
         B     @L175
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L193    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L194
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_250
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L175
@L194    DS    0H
* ***
* ***   k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt32)s->ll1\
* 6Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s->tPos) <\
* < 2) & 0x4)) & 0xF) << 16));; if (s->rNToGo == 0) { s->rNToGo = bzrn\
* umsÝs->rTPos¨; s->rTPos++; if (s->rTPos == 512) s->rTPos = 0; } s->r\
* NToGo--;;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_248 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_250
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_250
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_251
         SRL   5,0(7)
         N     5,@lit_40_252
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L195
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,2)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         L     5,0(0,4)
         L     4,@lit_40_253
         SLL   5,2(0)
         LA    5,0(5,4)
         L     4,0(0,5)
         ST    4,0(0,3)    ; offset of rNToGo in 0000002
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_244
         ST    3,0(0,4)
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         L     4,0(0,3)
         C     4,@lit_40_255
         BNE   @L195
         L     3,0(0,2)    ; s
         LA    3,24(0,3)   ; offset of rTPos in 0000002
         LA    4,0(0,0)
         ST    4,0(0,3)    ; offset of rTPos in 0000002
@L195    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 751
* ***   k1 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         L     4,0(0,3)
         C     4,@lit_40_244
         BNE   @@gen_label201
         LA    3,1(0,0)
         B     @@gen_label202
@@gen_label201 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label202 DS 0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_250
         XR    2,3
         STC   2,112(0,13) ; k1
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,1088(0,4) ; offset of nblock_used in 0000002
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         A     4,@lit_40_244
         ST    4,0(0,5)
* ***            s->state_out_len = ((Int32)k1) + 4;
         L     4,0(0,3)    ; s
         LA    4,12(0,4)   ; offset of state_out_len in 0000002
         IC    5,112(0,13) ; k1
         ICM   5,B'1110',@lit_40_250
         A     5,@lit_40_251
         ST    5,0(0,4)    ; offset of state_out_len in 0000002
* ***            s->k0 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((U\
* Int32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (\
* ((s->tPos) << 2) & 0x4)) & 0xF) << 16));; if (s->rNToGo == 0) { s->r\
* NToGo = bzrnumsÝs->rTPos¨; s->rTPos++; if (s->rTPos == 512) s->rTPos\
*  = 0; } s->rNToGo--;;
         L     4,0(0,3)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         LA    4,1092(0,4) ; offset of cftab in 0000002
         ST    5,120(0,13)
         ST    4,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_248 ; bzint2f
         BALR  14,15
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         ST    15,0(0,2)   ; offset of k0 in 0000002
         L     2,0(0,3)    ; s
         LA    2,56(0,2)   ; offset of tPos in 0000002
         L     4,0(0,3)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,3)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_250
         L     5,0(0,3)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,3)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_250
         L     6,0(0,3)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_251
         SRL   5,0(7)
         N     5,@lit_40_252
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,2)    ; offset of tPos in 0000002
         L     2,0(0,3)    ; s
         LA    2,20(0,2)   ; offset of rNToGo in 0000002
         L     4,0(0,2)
         LTR   4,4
         BE    *+12  Around region break
         AL    12,@lit_region_diff_40_1_2
         DROP  12
         USING @REGION_40_2,12
         B     @L197
         DROP  12
         USING @REGION_40_1,12
         AL    12,@lit_region_diff_40_1_2
@REGION_40_2 DS 0H
         DROP  12
         USING @REGION_40_2,12
         L     2,0(0,3)    ; s
         LA    2,20(0,2)   ; offset of rNToGo in 0000002
         L     4,0(0,3)    ; s
         LA    4,24(0,4)   ; offset of rTPos in 0000002
         L     5,0(0,4)
         L     4,@lit_40_311
         SLL   5,2(0)
         LA    5,0(5,4)
         L     4,0(0,5)
         ST    4,0(0,2)    ; offset of rNToGo in 0000002
         L     2,0(0,3)    ; s
         LA    2,24(0,2)   ; offset of rTPos in 0000002
         LR    4,2
         L     5,0(0,2)
         LR    2,5
         A     2,@lit_40_312
         ST    2,0(0,4)
         L     2,0(0,3)    ; s
         LA    2,24(0,2)   ; offset of rTPos in 0000002
         L     4,0(0,2)
         C     4,@lit_40_313
         BNE   @L197
         L     2,0(0,3)    ; s
         LA    2,24(0,2)   ; offset of rTPos in 0000002
         LA    4,0(0,0)
         ST    4,0(0,2)    ; offset of rTPos in 0000002
@L197    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,20(0,3)   ; offset of rNToGo in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***            # 754
* ***   s->k0 ¬= ((s->rNToGo == 1) ? 1 : 0); s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,60(0,3)   ; offset of k0 in 0000002
         LR    4,3
         L     5,0(0,2)    ; s
         LA    5,20(0,5)   ; offset of rNToGo in 0000002
         L     6,0(0,5)
         C     6,@lit_40_312
         STM   3,4,88(13)
         BNE   @@gen_label206
         LA    3,1(0,0)
         B     @@gen_label207
         DS    0D
@lit_40_313  DC F'512' 0x00000200
@lit_40_312  DC F'1' 0x00000001
@lit_40_311  DC A(bzrnums)
@lit_region_diff_40_2_1  DC A(@REGION_40_2-@REGION_40_1)
@lit_40_316  DC A(bzcrctab)
@lit_40_319  DC F'64064' 0x0000fa40
@lit_40_325  DC F'15' 0x0000000f
@lit_40_324  DC F'4' 0x00000004
@lit_40_323  DC F'0' 0x00000000
@lit_40_321  DC A(bzint2f)
@@gen_label206 DS 0H
         LA    2,0(0,0)
         LR    3,2
@@gen_label207 DS 0H
         L     2,92(0,13)
         L     4,88(0,13)
         L     5,0(0,4)
         XR    5,3
         ST    5,0(0,2)
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_312
         ST    3,0(0,4)
* ***         }
         SL    12,@lit_region_diff_40_2_1
         DROP  12
         USING @REGION_40_1,12
         B     @L175
         DROP  12
         USING @REGION_40_2,12
* ***
* ***   } else {
@L170    DS    0H
* ***
* ***   while (((Bool)1)) {
@L200    DS    0H
* ***
* ***   while (((Bool)1)) {
@L204    DS    0H
* ***               if (s->strm->avail_out == 0) return;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L208
         B     @ret_lab_40
* ***               if (s->state_out_len == 0) break;
@L208    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         L     4,0(0,3)
         LTR   4,4
         BNE   @L209
         B     @L206
* ***               *( (UChar*)(s->strm->next_out) ) = s->state_out_ch\
* ;
@L209    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         L     5,0(0,4)
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         IC    4,0(0,3)
         STC   4,0(0,5)
* ***               { s->calculatedBlockCRC = (s->calculatedBlockCRC <\
* < 8) ¬ bzcrctabÝ(s->calculatedBlockCRC >> 24) ¬ ((UChar)s->state_out\
* _ch)¨; };
         L     3,0(0,2)    ; s
         LA    3,3168(0,3) ; offset of calculatedBlockCRC in 0000002
         L     4,0(0,2)    ; s
         LA    4,3168(0,4) ; offset of calculatedBlockCRC in 0000002
         L     5,0(0,4)
         SLL   5,8(0)
         L     4,0(0,2)    ; s
         LA    4,3168(0,4) ; offset of calculatedBlockCRC in 0000002
         L     6,0(0,4)
         SRL   6,24(0)
         L     4,0(0,2)    ; s
         LA    4,8(0,4)    ; offset of state_out_ch in 0000002
         LA    7,0(0,0)
         IC    7,0(0,4)
         XR    6,7
         L     4,@lit_40_316
         SLL   6,2(0)
         LA    6,0(6,4)
         L     4,0(0,6)
         XR    5,4
         ST    5,0(0,3)    ; offset of calculatedBlockCRC in 0000002
* ***               # 766
* ***   s->state_out_len--;
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         BCTR  3,0
         ST    3,0(0,4)
* ***               s->strm->next_out++;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,16(0,4)   ; offset of next_out in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         LA    4,1(0,4)
         ST    4,0(0,5)
* ***               s->strm->avail_out--;
         L     3,0(0,2)    ; s
         L     4,0(0,3)
         LA    4,20(0,4)   ; offset of avail_out in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         BCTR  4,0
         ST    4,0(0,5)
* ***               s->strm->total_out_lo32++;
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_40_312
         ST    4,0(0,5)
* ***               if (s->strm->total_out_lo32 == 0) s->strm->total_o\
* ut_hi32++;
         L     4,0(0,3)
         LA    4,24(0,4)   ; offset of total_out_lo32 in 0000000
         L     5,0(0,4)
         LTR   5,5
         BNE   @L204
         L     4,0(0,3)
         LA    4,28(0,4)   ; offset of total_out_hi32 in 0000000
         LR    5,4
         L     6,0(0,4)
         LR    4,6
         AL    4,@lit_40_312
         ST    4,0(0,5)
* ***            }
         B     @L204
@L206    DS    0H
* ***
* ***
* ***   if (s->nblock_used == s->save_nblock+1) return;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         AL    3,@lit_40_319 ; offset of save_nblock in 0000002
         L     5,0(0,3)
         A     5,@lit_40_312
         CR    4,5
         BNE   @L211
         B     @ret_lab_40
* ***
* ***   s->state_out_len = 1;
@L211    DS    0H
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,1(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            s->state_out_ch = s->k0;
         L     3,0(0,2)    ; s
         LA    3,8(0,3)    ; offset of state_out_ch in 0000002
         L     4,0(0,2)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         STC   5,0(0,3)    ; offset of state_out_ch in 0000002
* ***            k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt\
* 32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s\
* ->tPos) << 2) & 0x4)) & 0xF) << 16));; s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_321 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_323
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_323
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_324
         SRL   5,0(7)
         N     5,@lit_40_325
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_312
         ST    3,0(0,4)
* ***            # 779
* ***   if (s->nblock_used == s->save_nblock+1) continue;
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         AL    3,@lit_40_319 ; offset of save_nblock in 0000002
         L     5,0(0,3)
         A     5,@lit_40_312
         CR    4,5
         BNE   @L212
         B     @L204
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L212    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_323
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L213
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_323
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L204
@L213    DS    0H
* ***
* ***   s->state_out_len = 2;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,2(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt\
* 32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s\
* ->tPos) << 2) & 0x4)) & 0xF) << 16));; s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_321 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_323
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_323
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_324
         SRL   5,0(7)
         N     5,@lit_40_325
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_312
         ST    3,0(0,4)
* ***            # 784
* ***   if (s->nblock_used == s->save_nblock+1) continue;
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         AL    3,@lit_40_319 ; offset of save_nblock in 0000002
         L     5,0(0,3)
         A     5,@lit_40_312
         CR    4,5
         BNE   @L214
         B     @L204
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L214    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_323
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L215
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_323
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L204
@L215    DS    0H
* ***
* ***   s->state_out_len = 3;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         LA    4,3(0,0)
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt\
* 32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s\
* ->tPos) << 2) & 0x4)) & 0xF) << 16));; s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_321 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_323
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_323
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_324
         SRL   5,0(7)
         N     5,@lit_40_325
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_312
         ST    3,0(0,4)
* ***            # 789
* ***   if (s->nblock_used == s->save_nblock+1) continue;
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         AL    3,@lit_40_319 ; offset of save_nblock in 0000002
         L     5,0(0,3)
         A     5,@lit_40_312
         CR    4,5
         BNE   @L216
         B     @L204
* ***            if (k1 != s->k0) { s->k0 = k1; continue; };
@L216    DS    0H
         IC    2,112(0,13) ; k1
         ICM   2,B'1110',@lit_40_323
         L     3,80(0,13)
         L     4,0(0,3)    ; s
         LA    4,60(0,4)   ; offset of k0 in 0000002
         L     5,0(0,4)
         CR    2,5
         BE    @L217
         L     2,0(0,3)    ; s
         LA    2,60(0,2)   ; offset of k0 in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_323
         ST    4,0(0,2)    ; offset of k0 in 0000002
         B     @L204
@L217    DS    0H
* ***
* ***   k1 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((UInt32)s->ll1\
* 6Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (((s->tPos) <\
* < 2) & 0x4)) & 0xF) << 16));; s->nblock_used++;
         L     2,80(0,13)
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_321 ; bzint2f
         BALR  14,15
         STC   15,112(0,13) ; k1
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_323
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_323
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_324
         SRL   5,0(7)
         N     5,@lit_40_325
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_312
         ST    3,0(0,4)
* ***            # 793
* ***   s->state_out_len = ((Int32)k1) + 4;
         L     3,0(0,2)    ; s
         LA    3,12(0,3)   ; offset of state_out_len in 0000002
         IC    4,112(0,13) ; k1
         ICM   4,B'1110',@lit_40_323
         A     4,@lit_40_324
         ST    4,0(0,3)    ; offset of state_out_len in 0000002
* ***            s->k0 = bzint2f ( s->tPos, s->cftab ); s->tPos = (((U\
* Int32)s->ll16Ýs->tPos¨) | (((((UInt32)(s->ll4Ý(s->tPos) >> 1¨)) >> (\
* ((s->tPos) << 2) & 0x4)) & 0xF) << 16));; s->nblock_used++;
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,3)
         L     3,0(0,2)    ; s
         LA    3,1092(0,3) ; offset of cftab in 0000002
         ST    4,120(0,13)
         ST    3,124(0,13)
         LA    1,120(0,13)
         L     15,@lit_40_321 ; bzint2f
         BALR  14,15
         L     3,0(0,2)    ; s
         LA    3,60(0,3)   ; offset of k0 in 0000002
         ST    15,0(0,3)   ; offset of k0 in 0000002
         L     3,0(0,2)    ; s
         LA    3,56(0,3)   ; offset of tPos in 0000002
         L     4,0(0,2)    ; s
         LA    4,56(0,4)   ; offset of tPos in 0000002
         L     5,0(0,4)
         L     4,0(0,2)    ; s
         LA    4,3152(0,4) ; offset of ll16 in 0000002
         L     6,0(0,4)
         SLL   5,1(0)
         LA    5,0(5,6)
         LH    4,0(0,5)
         ICM   4,B'1100',@lit_40_323
         L     5,0(0,2)    ; s
         LA    5,3156(0,5) ; offset of ll4 in 0000002
         L     6,0(0,5)
         L     5,0(0,2)    ; s
         LA    5,56(0,5)   ; offset of tPos in 0000002
         L     7,0(0,5)
         SRL   7,1(0)
         LA    6,0(6,7)
         IC    5,0(0,6)
         ICM   5,B'1110',@lit_40_323
         L     6,0(0,2)    ; s
         LA    6,56(0,6)   ; offset of tPos in 0000002
         L     7,0(0,6)
         SLL   7,2(0)
         N     7,@lit_40_324
         SRL   5,0(7)
         N     5,@lit_40_325
         SLL   5,16(0)
         OR    4,5
         ST    4,0(0,3)    ; offset of tPos in 0000002
         L     3,0(0,2)    ; s
         LA    3,1088(0,3) ; offset of nblock_used in 0000002
         LR    4,3
         L     5,0(0,3)
         LR    3,5
         A     3,@lit_40_312
         ST    3,0(0,4)
* ***         # 795
* ***   }
         B     @L204
* ***
* ***   }
* ***   }
@ret_lab_40 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "rle2osml"
*      (FUNCTION #40)
*
@AUTO#rle2osml DSECT
         DS    XL112
rle2osml#k1#0 DS 1CL1      ; k1
*
@BZLIB01 CSECT
*
*
*
bzdcomp  #PROLOG CINDEX=14,BASER=12,FRAME=128,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,0(0,1)
         LR    4,2
* ***      DState* s;
* ***      if (strm == 0) return (-2);
         LR    5,4         ; #0
         LA    6,0(0,0)
         CR    5,6
         BNE   @L218
         L     15,@lit_14_372
         B     @ret_lab_14
         DS    0D
@FRAMESIZE_14  DC F'128'
@lit_14_372  DC F'-2' 0xfffffffe
@lit_14_375  DC F'1' 0x00000001
@lit_14_376  DC F'-1' 0xffffffff
@lit_14_377  DC F'2' 0x00000002
@lit_14_378  DC A(rle2osml)
@lit_14_379  DC A(rle2ofst)
@lit_14_380  DC F'64064' 0x0000fa40
@lit_14_383  DC F'3' 0x00000003
@lit_14_385  DC F'-4' 0xfffffffc
@lit_14_386  DC F'10' 0x0000000a
@lit_14_388  DC F'4' 0x00000004
@lit_14_387  DC A(bzdecmp)
@lit_14_393  DC A(bzinterr)
@lit_14_392  DC F'6001' 0x00001771
* ***      s = strm->state;
@L218    DS    0H
         LA    5,32(0,4)   ; offset of state in 0000000
         L     6,0(0,5)
         LR    2,6         ; s
* ***      if (s == 0) return (-2);
         LR    5,2         ; #0
         LA    6,0(0,0)
         CR    5,6
         BNE   @L219
         L     15,@lit_14_372
         B     @ret_lab_14
* ***      if (s->strm != strm) return (-2);
@L219    DS    0H
         L     5,0(0,2)
         LR    6,4
         CR    5,6
         BE    @L221
         L     15,@lit_14_372
         B     @ret_lab_14
* ***
* ***   while (((Bool)1)) {
@L221    DS    0H
* ***         if (s->state == 1) return (-1);
         LA    5,4(0,2)    ; offset of state in 0000002
         L     6,0(0,5)
         C     6,@lit_14_375
         BNE   @L225
         L     15,@lit_14_376
         B     @ret_lab_14
* ***         if (s->state == 2) {
@L225    DS    0H
         LA    5,4(0,2)    ; offset of state in 0000002
         L     6,0(0,5)
         C     6,@lit_14_377
         BNE   @L226
* ***            if (s->smallDecompress)
         LA    5,40(0,2)   ; offset of smallDecompress in 0000002
         TM    0(5),255
         BZ    @L227
* ***               rle2osml ( s ); else
         LR    5,2
         ST    5,120(0,13)
         LA    1,120(0,13)
         L     15,@lit_14_378 ; rle2osml
         BALR  14,15
* ***               rle2ofst ( s );
         B     @L228
@L227    DS    0H
         LR    5,2
         ST    5,120(0,13)
         LA    1,120(0,13)
         L     15,@lit_14_379 ; rle2ofst
         BALR  14,15
* ***            if (s->nblock_used == s->save_nblock+1 && s->state_ou\
* t_len == 0) {
@L228    DS    0H
         LA    5,1088(0,2) ; offset of nblock_used in 0000002
         L     6,0(0,5)
         L     5,@lit_14_380
         ALR   5,2         ; offset of save_nblock in 0000002
         L     7,0(0,5)
         A     7,@lit_14_375
         CR    6,7
         BNE   @L229
         LA    5,12(0,2)   ; offset of state_out_len in 0000002
         L     6,0(0,5)
         LTR   6,6
         BNE   @L229
@@gen_label228 DS 0H
* ***               { s->calculatedBlockCRC = ~(s->calculatedBlockCRC)\
* ; };
         LA    5,3168(0,2) ; offset of calculatedBlockCRC in 0000002
         LA    6,3168(0,2) ; offset of calculatedBlockCRC in 0000002
         L     7,0(0,6)
         X     7,@lit_14_376
         ST    7,0(0,5)    ; offset of calculatedBlockCRC in 0000002
* ***               # 818
* ***   if (s->verbosity >= 3)
         LA    5,48(0,2)   ; offset of verbosity in 0000002
         L     6,0(0,5)
         C     6,@lit_14_383
         BNL   @L230
* ***                  ;
* ***               # 821
* ***   if (s->verbosity >= 2) ;
@L230    DS    0H
         LA    5,48(0,2)   ; offset of verbosity in 0000002
         L     6,0(0,5)
         C     6,@lit_14_377
         BNL   @L231
* ***               if (s->calculatedBlockCRC != s->storedBlockCRC)
@L231    DS    0H
         LA    5,3168(0,2) ; offset of calculatedBlockCRC in 0000002
         L     6,0(0,5)
         LA    5,3160(0,2) ; offset of storedBlockCRC in 0000002
         L     7,0(0,5)
         CLR   6,7
         BE    @L232
* ***                  return (-4);
         L     15,@lit_14_385
         B     @ret_lab_14
* ***               s->calculatedCombinedCRC
@L232    DS    0H
* ***                  = (s->calculatedCombinedCRC << 1) |
* ***                       (s->calculatedCombinedCRC >> 31);
         LA    5,3172(0,2) ; offset of calculatedCombinedCRC in 0000002
         LA    6,3172(0,2) ; offset of calculatedCombinedCRC in 0000002
         L     7,0(0,6)
         SLL   7,1(0)
         LA    6,3172(0,2) ; offset of calculatedCombinedCRC in 0000002
         L     8,0(0,6)
         SRL   8,31(0)
         OR    7,8
         ST    7,0(0,5)    ; offset of calculatedCombinedCRC in 0000002
* ***               s->calculatedCombinedCRC ¬= s->calculatedBlockCRC;
         LA    5,3172(0,2) ; offset of calculatedCombinedCRC in 0000002
         LR    6,5
         L     7,0(0,5)
         LA    5,3168(0,2) ; offset of calculatedBlockCRC in 0000002
         L     8,0(0,5)
         XR    7,8
         ST    7,0(0,6)
* ***               s->state = 14;
         LA    5,4(0,2)    ; offset of state in 0000002
         LA    6,14(0,0)
         ST    6,0(0,5)    ; offset of state in 0000002
* ***            } else {
         B     @L226
@L229    DS    0H
* ***               return 0;
         LA    15,0(0,0)
         B     @ret_lab_14
* ***            }
* ***         }
@L233    DS    0H
* ***         if (s->state >= 10) {
@L226    DS    0H
         LA    5,4(0,2)    ; offset of state in 0000002
         L     6,0(0,5)
         C     6,@lit_14_386
         BL    @L221
* ***            Int32 r = bzdecmp ( s );
         LR    5,2
         ST    5,120(0,13)
         LA    1,120(0,13)
         L     15,@lit_14_387 ; bzdecmp
         BALR  14,15
         LR    3,15        ; r
* ***            if (r == 4) {
         C     3,@lit_14_388
         BNE   @L235
* ***               if (s->verbosity >= 3)
         LA    5,48(0,2)   ; offset of verbosity in 0000002
         L     6,0(0,5)
         C     6,@lit_14_383
         BNL   @L236
* ***                  ;
* ***               # 839
* ***   if (s->calculatedCombinedCRC != s->storedCombinedCRC)
@L236    DS    0H
         LA    5,3172(0,2) ; offset of calculatedCombinedCRC in 0000002
         L     6,0(0,5)
         LA    5,3164(0,2) ; offset of storedCombinedCRC in 0000002
         L     7,0(0,5)
         CLR   6,7
         BE    @L237
* ***                  return (-4);
         L     15,@lit_14_385
         B     @ret_lab_14
* ***               return r;
@L237    DS    0H
         LR    15,3
         B     @ret_lab_14
* ***            }
* ***            if (s->state != 2) return r;
@L235    DS    0H
         LA    5,4(0,2)    ; offset of state in 0000002
         L     6,0(0,5)
         C     6,@lit_14_377
         BE    @L221
         LR    15,3
         B     @ret_lab_14
* ***         }
@L238    DS    0H
* ***      }
* ***
* ***   { if (!(0)) bzinterr ( 6001 ); };
         L     5,@lit_14_392
         ST    5,120(0,13)
         LA    1,120(0,13)
         L     15,@lit_14_393 ; bzinterr
         BALR  14,15
@L239    DS    0H
* ***
* ***   return 0;
         LA    15,0(0,0)
* ***   }
@ret_lab_14 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzdcomp"
*      (FUNCTION #14)
*
@AUTO#bzdcomp DSECT
         DS    XL112
bzdcomp#s#0 DS 1A          ; s
bzdcomp#r#6 DS 1F          ; r
*
@BZLIB01 CSECT
*
*
*
bzdcompe #PROLOG CINDEX=15,BASER=12,FRAME=120,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     4,0(0,1)
         LR    2,4
* ***      DState* s;
* ***      if (strm == 0) return (-2);
         LR    5,2         ; #0
         LA    6,0(0,0)
         CR    5,6
         BNE   @L240
         L     15,@lit_15_395
         B     @ret_lab_15
         DS    0D
@FRAMESIZE_15  DC F'120'
@lit_15_395  DC F'-2' 0xfffffffe
* ***      s = strm->state;
@L240    DS    0H
         LA    4,32(0,2)   ; offset of state in 0000000
         L     5,0(0,4)
         LR    3,5         ; s
* ***      if (s == 0) return (-2);
         LR    4,3         ; #0
         LA    5,0(0,0)
         CR    4,5
         BNE   @L241
         L     15,@lit_15_395
         B     @ret_lab_15
* ***      if (s->strm != strm) return (-2);
@L241    DS    0H
         L     4,0(0,3)
         LR    5,2
         CR    4,5
         BE    @L242
         L     15,@lit_15_395
         B     @ret_lab_15
* ***
* ***   if (s->tt != 0) (strm->bzfree)(strm->opaque,(s->tt));
@L242    DS    0H
         LA    4,3148(0,3) ; offset of tt in 0000002
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @L243
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,3148(0,3) ; offset of tt in 0000002
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***      if (s->ll16 != 0) (strm->bzfree)(strm->opaque,(s->ll16));
@L243    DS    0H
         LA    4,3152(0,3) ; offset of ll16 in 0000002
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @L244
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,3152(0,3) ; offset of ll16 in 0000002
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***      if (s->ll4 != 0) (strm->bzfree)(strm->opaque,(s->ll4));
@L244    DS    0H
         LA    4,3156(0,3) ; offset of ll4 in 0000002
         L     5,0(0,4)
         LA    4,0(0,0)
         CR    5,4
         BE    @L245
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,3156(0,3) ; offset of ll4 in 0000002
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***
* ***   (strm->bzfree)(strm->opaque,(strm->state));
@L245    DS    0H
         LA    4,44(0,2)   ; offset of opaque in 0000000
         L     5,0(0,4)
         LA    4,32(0,2)   ; offset of state in 0000000
         L     6,0(0,4)
         STM   5,6,112(13)
         LA    4,40(0,2)   ; offset of bzfree in 0000000
         L     5,0(0,4)
         LA    1,112(0,13)
         L     4,72(0,13)
         LR    15,5
         BALR  14,15
* ***      strm->state = 0;
         LA    5,32(0,2)   ; offset of state in 0000000
         LA    6,0(0,0)
         ST    6,0(0,5)    ; offset of state in 0000000
* ***
* ***   return 0;
         LA    15,0(0,0)
         B     @ret_lab_15
* ***   }
@ret_lab_15 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzdcompe"
*      (FUNCTION #15)
*
@AUTO#bzdcompe DSECT
         DS    XL104
bzdcompe#s#0 DS 1A         ; s
*
@BZLIB01 CSECT
*
*
*
bzbuffc  #PROLOG CINDEX=16,BASER=12,FRAME=184,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     5,16(0,1)
         L     4,20(0,1)
         L     3,24(0,1)
* ***      bz_stream strm;
* ***      int ret;
* ***
* ***   if (dest == 0 || destLen == 0 ||
* ***          source == 0 ||
* ***          blockSize100k < 1 || blockSize100k > 9 ||
* ***          verbosity < 0 || verbosity > 4 ||
* ***          workFactor < 0 || workFactor > 250)
         L     6,0(0,1)    ; dest
         LA    7,0(0,0)
         CR    6,7
         BE    @@gen_label259
         L     7,4(0,1)    ; destLen
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label259
@@gen_label246 DS 0H
         L     6,80(0,13)
         L     7,8(0,6)    ; source
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label259
@@gen_label248 DS 0H
         C     5,@lit_16_399
         BL    @@gen_label259
@@gen_label250 DS 0H
         C     5,@lit_16_400
         BH    @@gen_label259
@@gen_label252 DS 0H
         LTR   4,4
         BL    @@gen_label259
@@gen_label254 DS 0H
         C     4,@lit_16_401
         BH    @@gen_label259
@@gen_label256 DS 0H
         LTR   3,3
         BL    @@gen_label259
@@gen_label258 DS 0H
         C     3,@lit_16_402
         BNH   @L246
@@gen_label259 DS 0H
* ***         return (-2);
         L     15,@lit_16_403
         B     @ret_lab_16
         DS    0D
@FRAMESIZE_16  DC F'184'
@lit_16_399  DC F'1' 0x00000001
@lit_16_400  DC F'9' 0x00000009
@lit_16_401  DC F'4' 0x00000004
@lit_16_402  DC F'250' 0x000000fa
@lit_16_403  DC F'-2' 0xfffffffe
@lit_16_404  DC A(bzcompi)
@lit_16_406  DC F'3' 0x00000003
@lit_16_405  DC A(bzcomp)
@lit_16_408  DC A(bzcompe)
@lit_16_410  DC F'-8' 0xfffffff8
* ***
* ***   if (workFactor == 0) workFactor = 30;
@L246    DS    0H
         LTR   3,3
         BNE   @L247
         LA    3,30(0,0)   ; workFactor
* ***      strm.bzalloc = 0;
@L247    DS    0H
         LA    6,112(0,13) ; &strm
         LA    6,36(0,6)   ; offset of bzalloc in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of bzalloc in 0000000
* ***      strm.bzfree = 0;
         LA    6,112(0,13) ; &strm
         LA    6,40(0,6)   ; offset of bzfree in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of bzfree in 0000000
* ***      strm.opaque = 0;
         LA    6,112(0,13) ; &strm
         LA    6,44(0,6)   ; offset of opaque in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of opaque in 0000000
* ***      ret = bzcompi ( &strm, blockSize100k,
         LA    6,112(0,13) ; &strm
         LR    7,5
* ***                                 verbosity, workFactor );
         LR    8,4
         LR    9,3
         STM   6,9,168(13)
         LA    1,168(0,13)
         L     15,@lit_16_404 ; bzcompi
         BALR  14,15
         LR    2,15        ; ret
* ***      if (ret != 0) return ret;
         LTR   2,2
         BE    @L248
         LR    15,2
         B     @ret_lab_16
* ***
* ***   strm.next_in = source;
@L248    DS    0H
         LA    6,112(0,13) ; &strm
         L     7,80(0,13)
         L     8,8(0,7)    ; source
         ST    8,0(0,6)
* ***      strm.next_out = dest;
         LA    6,112(0,13) ; &strm
         LA    6,16(0,6)   ; offset of next_out in 0000000
         L     8,0(0,7)    ; dest
         ST    8,0(0,6)    ; offset of next_out in 0000000
* ***      strm.avail_in = sourceLen;
         LA    6,112(0,13) ; &strm
         LA    6,4(0,6)    ; offset of avail_in in 0000000
         L     8,12(0,7)   ; sourceLen
         ST    8,0(0,6)    ; offset of avail_in in 0000000
* ***      strm.avail_out = *destLen;
         LA    6,112(0,13) ; &strm
         LA    6,20(0,6)   ; offset of avail_out in 0000000
         L     8,4(0,7)    ; destLen
         L     9,0(0,8)
         ST    9,0(0,6)    ; offset of avail_out in 0000000
* ***
* ***   ret = bzcomp ( &strm, 2 );
         LA    6,112(0,13) ; &strm
         LA    9,2(0,0)
         ST    6,168(0,13)
         ST    9,172(0,13)
         LA    1,168(0,13)
         L     15,@lit_16_405 ; bzcomp
         BALR  14,15
         LR    2,15        ; ret
* ***      if (ret == 3) goto output_overflow;
         C     2,@lit_16_406
         BNE   @L249
         B     @_output_overflow@16
* ***      if (ret != 4) goto errhandler;
@L249    DS    0H
         C     2,@lit_16_401
         BE    @L250
         B     @_errhandler@16
* ***
* ***
* ***   *destLen -= strm.avail_out;
@L250    DS    0H
         L     6,80(0,13)
         L     7,4(0,6)    ; destLen
         LR    8,7
         L     9,0(0,7)
         LA    10,112(0,13) ; &strm
         LA    10,20(0,10) ; offset of avail_out in 0000000
         L     11,0(0,10)
         SLR   9,11
         ST    9,0(0,8)
* ***      bzcompe ( &strm );
         LA    8,112(0,13) ; &strm
         ST    8,168(0,13)
         LA    1,168(0,13)
         L     15,@lit_16_408 ; bzcompe
         BALR  14,15
* ***      return 0;
         LA    15,0(0,0)
         B     @ret_lab_16
* ***
* ***   output_overflow:
* ***      bzcompe ( &strm );
@_output_overflow@16 DS 0H
         LA    6,112(0,13) ; &strm
         ST    6,168(0,13)
         LA    1,168(0,13)
         L     15,@lit_16_408 ; bzcompe
         BALR  14,15
* ***      return (-8);
         L     15,@lit_16_410
         B     @ret_lab_16
* ***
* ***   errhandler:
* ***      bzcompe ( &strm );
@_errhandler@16 DS 0H
         LA    6,112(0,13) ; &strm
         ST    6,168(0,13)
         LA    1,168(0,13)
         L     15,@lit_16_408 ; bzcompe
         BALR  14,15
* ***      return ret;
         LR    15,2
         B     @ret_lab_16
* ***   }
@ret_lab_16 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzbuffc"
*      (FUNCTION #16)
*
@AUTO#bzbuffc DSECT
         DS    XL112
bzbuffc#strm#0 DS 48XL1    ; strm
bzbuffc#ret#0 DS 1F        ; ret
*
@BZLIB01 CSECT
*
*
*
bzbuffd  #PROLOG CINDEX=17,BASER=12,FRAME=176,ENTRY=YES
         ST    1,80(0,13)  ; Save ptr to incoming parm block
* ******* End of Prologue
* *
         L     2,4(0,1)
         LR    5,2
         L     4,16(0,1)
         L     3,20(0,1)
* ***      bz_stream strm;
* ***      int ret;
* ***
* ***   if (dest == 0 || destLen == 0 ||
* ***          source == 0 ||
* ***          (small != 0 && small != 1) ||
* ***          verbosity < 0 || verbosity > 4)
         L     6,0(0,1)    ; dest
         LA    7,0(0,0)
         CR    6,7
         BE    @@gen_label275
         LR    7,5         ; #0
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label275
@@gen_label266 DS 0H
         L     6,80(0,13)
         L     7,8(0,6)    ; source
         LA    8,0(0,0)
         CR    7,8
         BE    @@gen_label275
@@gen_label268 DS 0H
         LTR   4,4
         BE    @@gen_label272
         C     4,@lit_17_413
         BNE   @@gen_label275
@@gen_label272 DS 0H
         LTR   3,3
         BL    @@gen_label275
@@gen_label274 DS 0H
         C     3,@lit_17_414
         BNH   @L251
@@gen_label275 DS 0H
* ***             return (-2);
         L     15,@lit_17_415
         B     @ret_lab_17
         DS    0D
@FRAMESIZE_17  DC F'176'
@lit_17_413  DC F'1' 0x00000001
@lit_17_414  DC F'4' 0x00000004
@lit_17_415  DC F'-2' 0xfffffffe
@lit_17_416  DC A(bzdcompi)
@lit_17_417  DC A(bzdcomp)
@lit_17_419  DC A(bzdcompe)
@lit_17_420  DC F'0' 0x00000000
@lit_17_422  DC F'-7' 0xfffffff9
@lit_17_424  DC F'-8' 0xfffffff8
* ***
* ***   strm.bzalloc = 0;
@L251    DS    0H
         LA    6,104(0,13) ; &strm
         LA    6,36(0,6)   ; offset of bzalloc in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of bzalloc in 0000000
* ***      strm.bzfree = 0;
         LA    6,104(0,13) ; &strm
         LA    6,40(0,6)   ; offset of bzfree in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of bzfree in 0000000
* ***      strm.opaque = 0;
         LA    6,104(0,13) ; &strm
         LA    6,44(0,6)   ; offset of opaque in 0000000
         LA    7,0(0,0)
         ST    7,0(0,6)    ; offset of opaque in 0000000
* ***      ret = bzdcompi ( &strm, verbosity, small );
         LA    6,104(0,13) ; &strm
         LR    7,3
         LR    8,4
         STM   6,8,160(13)
         LA    1,160(0,13)
         L     15,@lit_17_416 ; bzdcompi
         BALR  14,15
         LR    2,15        ; ret
* ***      if (ret != 0) return ret;
         LTR   2,2
         BE    @L252
         LR    15,2
         B     @ret_lab_17
* ***
* ***   strm.next_in = source;
@L252    DS    0H
         LA    6,104(0,13) ; &strm
         L     7,80(0,13)
         L     8,8(0,7)    ; source
         ST    8,0(0,6)
* ***      strm.next_out = dest;
         LA    6,104(0,13) ; &strm
         LA    6,16(0,6)   ; offset of next_out in 0000000
         L     8,0(0,7)    ; dest
         ST    8,0(0,6)    ; offset of next_out in 0000000
* ***      strm.avail_in = sourceLen;
         LA    6,104(0,13) ; &strm
         LA    6,4(0,6)    ; offset of avail_in in 0000000
         L     8,12(0,7)   ; sourceLen
         ST    8,0(0,6)    ; offset of avail_in in 0000000
* ***      strm.avail_out = *destLen;
         LA    6,104(0,13) ; &strm
         LA    6,20(0,6)   ; offset of avail_out in 0000000
         L     8,0(0,5)
         ST    8,0(0,6)    ; offset of avail_out in 0000000
* ***
* ***   ret = bzdcomp ( &strm );
         LA    6,104(0,13) ; &strm
         ST    6,160(0,13)
         LA    1,160(0,13)
         L     15,@lit_17_417 ; bzdcomp
         BALR  14,15
         LR    2,15        ; ret
* ***      if (ret == 0) goto output_overflow_or_eof;
         LTR   2,2
         BNE   @L253
         B     @_output_overflow_or_eof@17
* ***      if (ret != 4) goto errhandler;
@L253    DS    0H
         C     2,@lit_17_414
         BE    @L254
         B     @_errhandler@17
* ***
* ***
* ***   *destLen -= strm.avail_out;
@L254    DS    0H
         LR    6,5
         L     7,0(0,5)
         LA    8,104(0,13) ; &strm
         LA    8,20(0,8)   ; offset of avail_out in 0000000
         L     9,0(0,8)
         SLR   7,9
         ST    7,0(0,6)
* ***      bzdcompe ( &strm );
         LA    6,104(0,13) ; &strm
         ST    6,160(0,13)
         LA    1,160(0,13)
         L     15,@lit_17_419 ; bzdcompe
         BALR  14,15
* ***      return 0;
         LA    15,0(0,0)
         B     @ret_lab_17
* ***
* ***   output_overflow_or_eof:
* ***      if (strm.avail_out > 0) {
@_output_overflow_or_eof@17 DS 0H
         LA    6,104(0,13) ; &strm
         LA    6,20(0,6)   ; offset of avail_out in 0000000
         L     7,0(0,6)
         CL    7,@lit_17_420
         BNH   @L255
* ***         bzdcompe ( &strm );
         LA    6,104(0,13) ; &strm
         ST    6,160(0,13)
         LA    1,160(0,13)
         L     15,@lit_17_419 ; bzdcompe
         BALR  14,15
* ***         return (-7);
         L     15,@lit_17_422
         B     @ret_lab_17
* ***      } else {
@L255    DS    0H
* ***         bzdcompe ( &strm );
         LA    6,104(0,13) ; &strm
         ST    6,160(0,13)
         LA    1,160(0,13)
         L     15,@lit_17_419 ; bzdcompe
         BALR  14,15
* ***         return (-8);
         L     15,@lit_17_424
         B     @ret_lab_17
* ***      };
@L256    DS    0H
* ***
* ***   errhandler:
* ***      bzdcompe ( &strm );
@_errhandler@17 DS 0H
         LA    6,104(0,13) ; &strm
         ST    6,160(0,13)
         LA    1,160(0,13)
         L     15,@lit_17_419 ; bzdcompe
         BALR  14,15
* ***      return ret;
         LR    15,2
         B     @ret_lab_17
* ***   }
@ret_lab_17 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzbuffd"
*      (FUNCTION #17)
*
@AUTO#bzbuffd DSECT
         DS    XL104
bzbuffd#strm#0 DS 48XL1    ; strm
bzbuffd#ret#0 DS 1F        ; ret
*
@BZLIB01 CSECT
*
*
*
bzlibver #PROLOG CINDEX=18,BASER=12,FRAME=88,ENTRY=YES
* ******* End of Prologue
* *
* ***      return "1.0.1, 23-June-2000";
         LA    2,@lit_18_427
         LR    15,2
         B     @ret_lab_18
         DS    0D
@lit_18_427 DC XL8'F14BF04BF16B40F2' 1.0.1..2
         DC XL8'F360D1A4958560F2' 3.June.2
         DC XL4'F0F0F000' 000.
@FRAMESIZE_18  DC F'88'
* ***   }
@ret_lab_18 DS 0H
* * **** Start of Epilogue
         #EPILOG
* * **** End of Epilogue
*
*   DSECT for automatic variables in "bzlibver"
*      (FUNCTION #18)
*
@AUTO#bzlibver DSECT
         DS    XL88
*
@BZLIB01 CSECT
*
*  Non-Re-Entrant Data Section
*
@BZLIB01 CSECT
@DATA    DS 0D
*
         END
